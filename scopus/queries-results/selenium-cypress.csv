Authors,Title,Year,Source title,Volume,Issue,Art. No.,Page start,Page end,Page count,Link,Abstract,Author Keywords,Index Keywords,Publisher
"Joshi R., Saraswat P., Gajendran R.","A novel mu rhythm-based brain computer interface design that uses a programmable system on chip",2012,"Journal of Medical Signals and Sensors","2","1",,"11","16",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85018976983&doi=10.4103%2f2228-7477.103146&partnerID=40&md5=4fac5cafe21c2c98fe785bc3113a645d","This paper describes the system design of a portable and economical mu rhythm based Brain Computer Interface which employs Cypress Semiconductors Programmable System on Chip (PSoC). By carrying out essential processing on the PSoC, the use of an extra computer is eliminated, resulting in considerable cost savings. Microsoft Visual Studio 2005 and PSoC Designer 5.01 are employed in developing the software for the system, the hardware being custom designed. In order to test the usability of the BCI, preliminary testing is carried out by training three subjects who were able to demonstrate control over their electroencephalogram by moving a cursor present at the center of the screen towards the indicated direction with an average accuracy greater than 70% and a bit communication rate of up to 7 bits/min.","brain computer interface; Electroencephalogram; microcontroller; Mu rhythm; portable; prosthetic; PSoC",,"Isfahan University of Medical Sciences(IUMS)"
"Cheluvaraju B., Nagal K., Pasala A.","Mining software revision history using advanced social network analysis",2012,"Proceedings - Asia-Pacific Software Engineering Conference, APSEC","1",,"6462733","717","720",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84874610760&doi=10.1109%2fAPSEC.2012.113&partnerID=40&md5=25dffd65354de024938bfb390049a65d","In this paper, we propose a novel method to investigate relationship between the files that are committed together by applying advanced social network analysis to a 'network' of source files that are committed together. The source files constitute the nodes of the network and an edge is created between files which are committed together in the same revision. We present our findings with recommendations on how mining revision histories from a social network analysis perspective can be used to build inferences on change propagation, evaluate impact analysis, and extract cross-programming-language relationships. We performed empirical analysis on revision histories of a well-known open-source web application testing system, 'Selenium' and results are reported. © 2012 IEEE.","data mining; Mining software repository; social network analysis; software engineering; version histories","Data mining; Social sciences computing; Software engineering; Change propagation; Empirical analysis; Impact analysis; Mining software; Mining software repositories; Open-source; Social Network Analysis; Source files; Web application testing; Social networking (online)","IEEE Computer Society"
"Nakasato N.","Implementation of a parallel tree method on a GPU",2012,"Journal of Computational Science","3","3",,"132","141",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84860623716&doi=10.1016%2fj.jocs.2011.01.006&partnerID=40&md5=22253553bafb20414b01218c81cfade4","The kd-tree is a fundamental tool in computer science. Among other applications, the application of kd-tree search (by the tree method) to the fast evaluation of particle interactions and neighbor search is highly important, since the computational complexity of these problems is reduced from O(N 2) for a brute force method to O(NlogN) for the tree method, where N is the number of particles. In this paper, we present a parallel implementation of the tree method running on a graphics processing unit (GPU). We present a detailed description of how we have implemented the tree method on a Cypress GPU. An optimization that we found important is localized particle ordering to effectively utilize cache memory. We present a number of test results and performance measurements. Our results show that the execution of the tree traversal in a force calculation on a GPU is practical and efficient. © 2011 Elsevier B.V.",,"Brute force; Force calculation; Fundamental tools; Graphics Processing Unit; Kd-tree; Other applications; Parallel implementations; Performance measurements; Tree method; Tree traversal; Cache memory; Computer graphics; Particle interactions; Program processors; Computer graphics equipment",
"Lovay M., Peretti G., Romero E., Marqués C.","An adaptive amplifier system for wireless sensor network applications",2012,"Journal of Electrical and Computer Engineering",,,"762927","","",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84863703120&doi=10.1155%2f2012%2f762927&partnerID=40&md5=4df10bb040fbd4413daff4052d6ba4b7","This paper presents an adaptive amplifier that is part of a sensor node in a wireless sensor network. The system presents a target gain that has to be maintained without direct human intervention despite the presence of faults. In addition, its bandwidth must be as large as possible. The system is composed of a software-based built-in self-test scheme implemented in the node that checks all the available gains in the amplifiers, a reconfigurable amplifier, and a genetic algorithm (GA) for reconfiguring the node resources that runs on a host computer. We adopt a PSoC device from Cypress for the node implementation. The performance evaluation of the scheme presented is made by adopting four different types of fault models in the amplifier gains. The fault simulation results show that GA finds the target gain with low error, maintains the bandwidth above the minimum tolerable bandwidth, and presents a runtime lower than exhaustive search method. Copyright © 2012 Mnica Lovay et al.",,"Amplifier gain; Amplifier systems; Exhaustive search; Fault model; Fault simulation; Host computers; Human intervention; Performance evaluation; PSoC devices; Runtimes; Software-based; Wireless sensor; Bandwidth; Built-in self test; Sensor nodes",
"Wang F., Du W.","A test automation framework based on WEB",2012,"Proceedings - 2012 IEEE/ACIS 11th International Conference on Computer and Information Science, ICIS 2012",,,"6211171","683","687",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864061862&doi=10.1109%2fICIS.2012.21&partnerID=40&md5=db3463b79a5806afd910923a719ab986","Many software applications today are written as web-based applications to be run in an Internet browser. Selenium is a set of powerful different software tools working with many browsers, operating systems, programming languages, and testing frameworks each with a different approach to supporting automation test for testing web-based applications. JMeter is used to simulate a heavy load on a server, network or object to test its strength or to analyze overall performance under different load types. JMeter operates at the protocol-level, on the other hand, Selenium works at the user-level.In this paper, authors have designed an automatic software testing framework for web applications based on the Selenium and JMeter. With the use of the software framework, we efficiently improve the extensibility and reusability of automated test. The results show that the new software framework improves software products quality and develop efficiency. This paper also illustrates how to design web-based test automation framework in details. © 2012 IEEE.","Automation testing framework; Jmeter; Selenium; Web","Automated test; Automation testing; Heavy loads; Internet browsers; Jmeter; Load type; Software applications; Software frameworks; Software products; Test automation frameworks; Testing framework; Web; WEB application; Web-based applications; Computer programming; Information science; Internet protocols; Reusability; Selenium; Testing; Web services; Automation",
"Xu D., Thomas L., Kent M., Mouelhi T., Le Traon Y.","A model-based approach to automated testing of access control policies",2012,"Proceedings of ACM Symposium on Access Control Models and Technologies, SACMAT",,,,"209","218",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864050653&doi=10.1145%2f2295136.2295173&partnerID=40&md5=de7de998ef1416a6fa3859d9b3debf1e","Access control policies in software systems can be implemented incorrectly for various reasons. This paper presents a model-based approach for automated testing of access control implementation. To feed the model-based testing process, test models are constructed by integrating declarative access control rules and contracts (preconditions and post-conditions) of the associated activities. The access control tests are generated from the test models to exercise the interactions of access control activities. Test executability is obtained through a mapping of the modeling elements to implementation constructs. The approach has been implemented in an industry-adopted test automation framework that supports the generation of test code in a variety of languages, such as Java, C, C++, C#, and HTML/Selenium IDE. The full model-based testing process has been applied to two systems implemented in Java. The effectiveness is evaluated in terms of access-control fault detection rate using mutation analysis of access control implementation. The experiments show that the model-based tests killed 99.7% of the mutants and the remaining mutants caused no policy violations. Copyright 2012 ACM.","Access control; Model-based testing; Mutation analysis; Petri nets; Software testing","Access control policies; Automated testing; Control activities; Control implementation; Declarative access control; Fault detection rate; Model based approach; Model based testing; Model-based test; Modeling elements; Mutation analysis; Software systems; Test automation frameworks; Test code; Test models; Java programming language; Petri nets; Software testing; Testing; Access control",
"Hiari O., Sadeh W., Rawashdeh O.","Towards single-chip diversity TMR for automotive applications",2012,"IEEE International Conference on Electro Information Technology",,,"6220736","","",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864199194&doi=10.1109%2fEIT.2012.6220736&partnerID=40&md5=8d8d49a121bf70be79682d453c1dafcb","The continuous requirement to provide safe, low-cost, compact systems makes applications such as automotive more prone to increasing types of faults. This may result in increased system failure rates if not addressed correctly. While some of the faults are not permanent in nature, they can lead to malfunctioning in complex circuits and/or software systems. Moreover, automotive applications have recently adopted the ISO26262 to provide a standard for defining functional safety. One of the recommended schemes to tolerate faults is Triple Modular Redundancy (TMR). However, traditional TMR designs typically consume too much space, power, and money all of which are undesirable for automotive. In addition, common mode faults have always been a concern in TMR which their effects would be increasing in compact systems. Errors such as noise and offset that impact a TMR sensor input can potentially cause common mode failures that lead to an entire system failure. In this paper, we introduce a new architecture and implementation for diverse TMR in a speed measurement system that would serve automotive cost and safety demands. Diversity TMR is achieved on a single chip by designing functionally identical circuits each in a different design domain to reduce the potential of common mode failures. Three versions of a speed sensing application are implemented on a mixed-signal Programmable System on Chip (PSoC) from Cypress Semiconductors. We introduce errors that impact speed sensor signals as defined by the ISO26262 standard to evaluate DTMR. Our testing shows how DTMR can be effective to different types of errors that impact speed sensor signals. © 2012 IEEE.","DTMR; Fault Tolerance; Functional Safety; ISO26262; SEUs; TMR","DTMR; Functional Safety; ISO26262; SEUs; TMR; Automobiles; Fault tolerance; Errors",
"Xu D., Xu W., Bavikati B.K., Wong W.E.","Mining executable specifications of web applications from Selenium IDE tests",2012,"Proceedings of the 2012 IEEE 6th International Conference on Software Security and Reliability, SERE 2012",,,"6258316","263","272",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84866635438&doi=10.1109%2fSERE.2012.39&partnerID=40&md5=f65e90cd7b267e6d20b22b09222c0d3c","A common practice for system testing of web-based applications is to perform the test cases through a web browser. These tests are often recorded and managed by a record and replay tool, such as Selenium IDE. Mining specifications from such tests can be very useful for understanding, verifying, and debugging the system under test. This paper presents an approach to mining a behavior specification from a Selenium IDE test suite such that (a) it captures the behavior of the tests at a high level of abstraction, (b) the behavior can be simulated, and (c) all the tests are completely reproducible from the specification. We first identify similar test actions through context-sensitive clustering so as to normalize the given Selenium IDE tests. Then, we mine patterns of test actions that represent meaningful functions and transform Selenium IDE tests into abstract tests, which are similar to the tests used in the existing model-mining techniques. From the abstract tests, we synthesize a high-level Petri net that captures both temporal constraints and data values. For evaluation purposes, we applied our approach to eight test suites of two real-world systems, Magento (an online shopping system being used by many live stores) and Amazon. Two of the test suites are for security testing, aiming at SQL injection and XSS vulnerabilities. The result shows that our approach is effective in producing abstract yet executable specifications and reducing the complexity of the models. © 2012 IEEE.","Model-based testing; Petri nets; Software testing; Test mining; Web applications","Behavior specifications; Context-sensitive; Data values; Executable specifications; High level of abstraction; Model based testing; On-line Shopping systems; Real-world system; Record-and-replay; Security testing; SQL injection; System testing; System under test; Temporal constraints; Test case; Test mining; WEB application; Web-based applications; Integrodifferential equations; Petri nets; Program debugging; Security of data; Selenium; Software reliability; Software testing; Specifications; World Wide Web; Testing",
"Nagowah L., Doorgah K.","Improving test data management in record and playback testing tools",2012,"2012 International Conference on Computer and Information Science, ICCIS 2012 - A Conference of World Engineering, Science and Technology Congress, ESTCON 2012 - Conference Proceedings","2",,"6297159","931","937",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84867852758&doi=10.1109%2fICCISci.2012.6297159&partnerID=40&md5=0c8175a24fc6f61180c430df08c9923d","It is almost impossible to prevent requirement change in the web development life cycle. Selenium despite being a widely used open source automated tool for testing web application, has its limitation when it concerns test data management. Frequent changes in requirement result in changes in the user interface which in turn requires additional effort to re-record the test script. Eventually keeping track of test data used for each test script becomes very problematic for the tester. In this paper, we analyse existing tools and provide a design of an automated testing tool, Kishanium that also manages the set of test data. A prototype was created during experimentation phase to prove the concept of the underlying ideas of the proposed tool. The prototype has been implemented based on the core technologies of DomDocument, XPath and Curl. The testing carried out proves that Kishanium is a useful automated tool that can be used on its own or in conjunction with Selenium. With a very systematic approach it automatically searches input and button objects, allows testers to add new test data, edit existing test data and delete previous test data in order to respond to frequent requirement changes. The power of Kishanium is that it is able to re-use existing test data even if there are a number of changes in the user interface. It also automatically runs the tests with the appropriate set of test data using its Poster Component. Moreover the Kishanium automated tool provides additional features such as Data generator, Spylink and Snapshot. © 2012 IEEE.","automated testing; record and playback problem; test data management","Automated testing; Automated testing tools; Automated tools; Core technology; If there are; Open sources; Record and playback; Requirement change; Test data; Test data in; Test data management; Test scripts; Testing tools; WEB application; Web development; Automation; Information management; Information science; Selenium; Technology; User interfaces",
"Wada T., Ichikawa M., Matsuoka M.","Detection of individual tree in artificial forest in japan using high-resolution remote sensing imagery",2012,"33rd Asian Conference on Remote Sensing 2012, ACRS 2012","3",,,"1889","1893",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84880027798&partnerID=40&md5=ff5b6b8bebd3861a813780a8065e1882","It can be possible to grasp the distribution of individual tree in the forest, mainly due to the increasing availability of high-resolution images in recent years. The positions and sizes of trees are the fundamental information for the forest management. The automatic detection of individual tree is one of the effective methods for providing such information in lower costs and resources. This study aims to develop the method to detect individual tree using high-resolution remote sensing imagery. Our method is based on the combination of basic image processing techniques, image smoothing and Local Maximum Filtering (LMF). In image smoothing, three types of smoothed image are generated by means of pixel averaging of 1×1, 3×3 and 5×5 pixels of original image. These images are, subsequently, processed by LMF with the window sizes of 3×3, 5×5, 7×7, 9×9, 11×11 pixel. The test sites are the artificial forests, dominated by Japanese cedar and Japanese cypress, located in Kochi prefecture, Japan. Remote sensing images with wide varieties of combination of canopy size and pixel resolution are selected in order to analyze the relationship between sizes and resolutions. The results will be evaluated by the comparison of ground truth data, and discussed from the viewpoint of the relation of tree density and spatial resolution.","Artificial forest; High-resolution imagery; Individual tree; Local Maximum Filtering","Artificial forest; High resolution image; High resolution imagery; High resolution remote sensing; Image processing technique; Individual tree; Local maximum filtering; Remote sensing images; Image reconstruction; Pixels; Remote sensing; Forestry; Forestry; Image Analysis; Remote Sensing; Trees",
"Mansour W., Velazco R., El Falou W., Ziade H., Ayoubi R.","SEU simulation by fault injection in PSoC device: Preliminary results",2012,"2012 2nd International Conference on Advances in Computational Tools for Engineering Applications, ACTEA 2012",,,"6462894","330","333",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84874706706&doi=10.1109%2fICTEA.2012.6462894&partnerID=40&md5=864f29b5ea75b61db4cd0be193cff4ba","In this paper the consequences of SEU (Single Event Upset) faults on System on Chip devices (SOC) are studied. A PSOC microcontroller CY8C27643 manufactured by Cypress was chosen as a test vehicle. Fault injection sessions were performed using the so-called (Code Emulated Upset) approach in two different HW/SW environments. Obtained results put in evidence the potentially critical consequences of some of the faults occurring in the digital blocks when a matrix multiplication benchmark is being executed. © 2012 IEEE.","Code Emulated Upset (CEU); fault injection; PSOC; Single Event Effects (SEU); System On Chip (SOC)","Code Emulated Upset (CEU); Fault injection; PSOC; Single event effects; System on chips; Computational methods; Automobile manufacture",
"Lv W., Song K., Yang J., Cao P., Dong L.","Implementation of High-Speed USB interface in Data Acquisition System for KTX",2012,"2012 18th IEEE-NPSS Real Time Conference, RT 2012",,,"6418156","","",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84874258370&doi=10.1109%2fRTC.2012.6418156&partnerID=40&md5=76d05e65f697465a805153adedadc1ef","In this paper, a High-Speed USB implementation in the Data Acquisition Unit intended for a Reversed Field Pinch (RFP) experiment device Keda Torus eXperiment (KTX) is presented. An ultra-large amount of data transfer is a key problem in Data Acquisition System for KTX. A prototype of KTX with 64 channels was designed, sample rate of which is 16ksps and data length 24bits. High-Speed USB interface implemented in our design assure fast enough data transmission between the Data Acquisition Unit and Workstation. The CY7C68013 chip of CYPRESS Company was used as the USB interface controller. The software was developed on workstation for testing. Transmission speed is tested based on the prototype, and we find that the stable speed of USB2.0 transmission can achieve 123Mbps. © 2012 IEEE.",,"Data acquisition system; Data length; Data-acquisition units; Reversed field pinch; Sample rate; Transmission speed; USB interface; Data acquisition; Data communication systems; Data transfer; Experiments; Software testing",
"Mazooji A., Kancharla M.R., Das A., Purushothaman B., Srinivasa L.N.","Browser level performance: Automation and best practices",2013,"Annual International Conference of the Computer Measurement Group, CMG 2013","2",,,"1058","1069",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84899883440&partnerID=40&md5=96a5363822dd82e5251379e193fc1eaf","The performance world has long been concerned with the speed and scalability of their IT infrastructure in relation to user experience. Traditional load testing applications all provide great benefits in testing and tuning your application infrastructure for optimal performance. However, with the emergence of web 2.0 and more interactive web applications, these traditional performance testing tools struggle to provide an accurate representation of your application's performance from the end-user's perspective. Client side performance is often a field which falls somewhere between the development, functional and performance organizations and is often neglected. This paper will present some best practices for ensuring better perceived application performance from the end users perspective, and an approach to using client side measurement tools in conjunction with the Selenium automation software to monitor and track your application's performance from the end-user's perspective.",,"Application programs; Tools; World Wide Web; Application performance; Automation software; Interactive web applications; IT infrastructures; Measurement tools; Optimal performance; Performance testing; User experience; Measurements","Computer Measurement Group Inc"
"Leotta M., Clerissi D., Ricca F., Tonella P.","Capture-replay vs. programmable web testing: An empirical assessment during test case evolution",2013,"Proceedings - Working Conference on Reverse Engineering, WCRE",,,"06671302","272","281",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893430681&doi=10.1109%2fWCRE.2013.6671302&partnerID=40&md5=2b805d8ab73a03098f395051e37e5826","There are several approaches for automated functional web testing and the choice among them depends on a number of factors, including the tools used for web testing and the costs associated with their adoption. In this paper, we present an empirical cost/benefit analysis of two different categories of automated functional web testing approaches: (1) capture-replay web testing (in particular, using Selenium IDE); and, (2) programmable web testing (using Selenium WebDriver). On a set of six web applications, we evaluated the costs of applying these testing approaches both when developing the initial test suites from scratch and when the test suites are maintained, upon the release of a new software version. Results indicate that, on the one hand, the development of the test suites is more expensive in terms of time required (between 32% and 112%) when the programmable web testing approach is adopted, but on the other hand, test suite maintenance is less expensive when this approach is used (with a saving between 16% and 51%). We found that, in the majority of the cases, after a small number of releases (from one to three), the cumulative cost of programmable web testing becomes lower than the cost involved with capture-replay web testing and the cost saving gets amplified over the successive releases. © 2013 IEEE.","Empirical Study; Selenium IDE; Selenium WebDriver; Test Case Evolution; Test Case Repair","Application programs; Cost benefit analysis; Costs; Integrodifferential equations; Reverse engineering; Selenium; Testing; Web crawler; Cumulative cost; Empirical assessment; Empirical studies; Number of factors; Software versions; Test case; Test case evolutions; WEB application; Software testing","IEEE Computer Society"
"Le Breton G., Maronnaud F., Hallé S.","Automated exploration and analysis of ajax web applications with webmole",2013,"WWW 2013 Companion - Proceedings of the 22nd International Conference on World Wide Web",,,,"245","248",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893095379&doi=10.1145%2f2487788.2487913&partnerID=40&md5=a8ce1dfe2642a436069fa5aeac0ab258","WebMole is a browser-based tool that automatically and exhaustively explores all pages inside a web application. Contrarily to classical web crawlers, which only explore pages accessible through regular <a> anchors,WebMole can find its way through Ajax applications that use JavaScript-triggered links, and handles state changes that do not involve a page reload. User-defined functions called oracles can be used to bound the range of pages explored by WebMole to specific parts of an application, as well as to evaluate Boolean test conditions on all visited pages. Overall, WebMole can prove a more flexible alternative to automated testing suites such as Selenium WebDriver.","Navigation; Reverse engineering; Web applications","Navigation; Reverse engineering; World Wide Web; Automated testing; Boolean tests; Javascript; User Defined Functions; WEB application; Web crawler","Association for Computing Machinery"
"Zhou X., Wang W., Yu S., Zhou Y.","Interactive effects of selenium and mercury on their uptake by rice sedlings",2013,"Research Journal of Applied Sciences, Engineering and Technology","5","19",,"4733","4739",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84877356724&doi=10.19026%2frjaset.5.4311&partnerID=40&md5=1cf8f87fb9e58d96db188d1b6cd07dd8","In this study, a new modeling method based on metasynthesis is proposed from the macro and micro levels. And the system analysis and design agent-oriented based on POMDP are provided in the same time. Finally, the two case studies are given and the experimental results have shown efficiency and rationality of this modeling method. Under greenhouse conditions, rice was taken as test object and the interactive effects of selenium and mercury in rice seedlings grown in solution culture were researched by the use of quadratic-orthogonal-rotation-combination design. The results showed that low mercury concentration (<30 μg/L) promoted selenium absorption in rice roots and shoots, which may be associated with selenium's favorable effect on plant. Higher mercury concentration (>30 μg/ L) reduced selenium accumulation in rice roots and stems, as well as the transfer of selenium to the rice shoot. When the mercury concentration was fixed at 100 μg/L, Se in the growth medium significantly reduced Hg accumulation in the roots and the effect of Se on Hg accumulation in shoots displayed a similar pattern. However, with the increase of selenium concentration of the solution, the Hg transfer coefficient from the root to the shoot remained unchanged. © Maxwell Scientific Organization, 2013.","Interaction; Mercury; Rice; Selenium",,"Maxwell Science Publications"
"Naresh V., Venkataramani B., Karan A., Manikandan J.","PSoC based isolated speech recognition system",2013,"International Conference on Communication and Signal Processing, ICCSP 2013 - Proceedings",,,"6577144","693","697",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883444563&doi=10.1109%2ficcsp.2013.6577144&partnerID=40&md5=fb8ef0a268a4c317e22befe14ea76e82","Isolated Speech recognition systems (ISRS) have been implemented using microprocessors, digital signal processors and FPGAs and have been reported in the literature. In this paper, the study and implementation of an ISRS using Cypress Programmable System on Chip (PSoC) is presented. For the implementation, PSoC5 containing the ARM Cortex-M3 CPU is used. Recognition performance is studied using three feature extraction techniques (Zero crossing, Zero crossing with end point detection and Zero crossing with end point detection and Cochlear filter) and minimum distance classifier. The ISRS is trained and tested using 10 utterances of three words. The performance is evaluated for utterances by both single speaker and multiple speaker. From this study, it is found that the system using the Zero crossing with end point detection and Cochlear filter gives the highest recognition accuracy of 80%and 70% respectively for the utterances by single speaker and multiple speakers. Higher recognition accuracy can be obtained using more robust feature extraction and classification techniques at the cost of increase in the computation complexity and storage space. The proposed ISRS has applications in voice operated robots, appliances and access control systems. © 2013 IEEE.","Cochlear filter; EPD; PSoC; Speech Recognition; ZCP","Cochlear filter; EPD; Feature extraction techniques; Isolated speech recognition; Minimum distance classifiers; Programmable system on chips; PSoC; ZCP; ARM processors; Communication; Feature extraction; Signal processing; Speech recognition",
"Leotta M., Clerissi D., Ricca F., Spadaro C.","Repairing selenium test cases: An industrial case study about web page element localization",2013,"Proceedings - IEEE 6th International Conference on Software Testing, Verification and Validation, ICST 2013",,,"6569767","487","488",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883318945&doi=10.1109%2fICST.2013.73&partnerID=40&md5=81111238132cdfd98b4ee2204d71eb24","This poster presents an industrial case study about test automation and test suite maintenance in the context of Web applications. The Web application under test is a Learning Content Management System (eXact learning LCMS). We analysed the costs associated with the realignment of four equivalent Selenium WebDriver test suites, implemented using the page object pattern and different methods to locate web page elements, to a subsequent release of eXact learning LCMS. In our study, the two ID-based test suites required significantly less maintenance effort than the XPath-based ones. © 2013 IEEE.","Selenium WebDriver; Test Automation; Test Suite Maintainability; Web Application Testing","Exact learning; Industrial case study; Learning content management system; Maintenance efforts; Object patterns; Test Automation; WEB application; Web application testing; Industrial applications; Repair; Selenium; Software testing; Websites; Testing",
"Leotta M., Clerissi D., Ricca F., Spadaro C.","Improving test suites maintainability with the page object pattern: An industrial case study",2013,"Proceedings - IEEE 6th International Conference on Software Testing, Verification and Validation Workshops, ICSTW 2013",,,"6571616","108","113",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883315834&doi=10.1109%2fICSTW.2013.19&partnerID=40&md5=3d9a669e8c5f8c18023f4d24972cd0fb","The page object pattern is used in the context of web testing for abstracting the application's web pages in order to reduce the coupling between test cases and application under test. This paper reports on an industrial case study in a small Italian company (eXact learning solutions S.p.A.) investigating the potential benefits of adopting the page object pattern to improve the maintainability of Selenium Web Driver test cases. After a maintenance/evolution activity performed on the application under test, we compared two equivalent test suites, one built using the page object pattern and one without it. The results of our case study indicate a strong reduction in terms of time required (by a factor of about three) and number of modified LOCs (by a factor of about eight) to repair the test suite when the page object pattern is used. © 2013 IEEE.","Page Object Pattern; Selenium WebDriver; Test Automation; Test Suite Maintainability; Web Application Testing","Application under tests; Exact learning; Industrial case study; Italian companies; Object patterns; Potential benefits; Test Automation; Web application testing; Industrial applications; Maintainability; Repair; Selenium; Software testing; Testing",
"De Castro A.M.F.V., Macedo G.A., Collins E.F., Dias-Neto A.C.","Extension of Selenium RC tool to perform automated testing with databases in web applications",2013,"2013 8th International Workshop on Automation of Software Test, AST 2013 - Proceedings",,,"6595803","125","131",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84885001936&doi=10.1109%2fIWAST.2013.6595803&partnerID=40&md5=b0e6432b1c7ffe1c78f2d2e4495380ea","This paper presents one extension of the Selenium RC tool to perform tests in web applications that require checking data in databases. This verification is performed using new functions implemented into the Selenium framework's core. These functions allow opening and closing database connection and comparing test data with data stored in the database used by the web application. This solution aims to contribute to the system quality by reducing the effort during the testing process, since the verification of UI and database elements will be performed at the same time during execution of the test scripts. A case study is described to analyze the impact of the proposed tool in terms of effort and rate of automation in the development of a new web application project. The results suggest a significant reduction (92% and 88%) in the effort to execute automated tests in database when compared to, respectively, manual and semiautomated execution. © 2013 IEEE.","Database Testing; Functional Testing; Selenium RC; Software Testing; Test Automation","Automated test; Automated testing; Database connections; Database testing; Functional testing; Test Automation; Testing process; WEB application; Applications; Automation; Database systems; Selenium; Testing; Tools; World Wide Web; Software testing",
"Chen R., Miao H.","A Selenium based approach to automatic test script generation for refactoring JavaScript code",2013,"2013 IEEE/ACIS 12th International Conference on Computer and Information Science, ICIS 2013 - Proceedings",,,"6607864","341","346",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84886493766&doi=10.1109%2fICIS.2013.6607864&partnerID=40&md5=502f84195429bfc17fe463e1f1919800","During the development process of Web application, two essential phases are software testing and code refactoring. However, automatic testing script plays an important role in test automation. It has been a hot research topic in Web application. In order to refactor the JavaScript code of Web application more conveniently, an approach to automatic script generation from the defined test case is introduced in this paper. First, it describes the test case using customized XML format. Then, since Selenium platform supports multi-browsers testing, a method to transform XML description into test scripts based on Selenium framework is proposed as the emphasis. © 2013 IEEE.","JavaScript Refactoring; Selenium; The Framework of Script Automatic Generation; XML Schema","Automatic Generation; Code re-factoring; Development process; Hot research topics; Refactorings; Script generation; XML description; XML schemas; Applications; Automatic testing; High level languages; Information science; Software testing; World Wide Web; XML; Selenium",
"Mandal K.C., Mehta A., Chaudhuri S.K., Cui Y., Groza M., Burger A.","Characterization of amorphous selenium alloy detectors for x-rays and high energy nuclear radiation detection",2013,"Proceedings of SPIE - The International Society for Optical Engineering","8852",,"88521O","","",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84886994116&doi=10.1117%2f12.2027139&partnerID=40&md5=c9de6c0d86943ef7810047a464eb8acd","Synthesized amorphous selenium (a-Se) alloy materials have been characterized for room temperature high-energy nuclear radiation detector and x-ray detection applications. The alloy composition has been optimized to ensure good charge transport properties and detector performance. The synthesis of a-Se (As, Cl) alloys has been carried out by thoroughly mixing zone-refined (ZR) Se (∼7N) with previously synthesized a-Se(As) and a-Se(Cl) master alloys (MS). The synthesized alloys have been characterized by x-ray diffraction (XRD), glow discharge mass spectroscopy (GDMS), differential scanning calorimetry (DSC), x-ray photoelectron spectroscopy (XPS), and current-voltage (I-V) characteristics measurements. Raman spectroscopy demonstrated that the a-Se(As) master alloy samples were in metastable monoclinic Se8 states, in which seven vibrational modes are located at 40(41), 59(60), 77, 110, 133, 227(228) and 251(252) cm-1. However, a-Se(Cl) master alloy samples are in stable form of trigonal structure of Se8 ring, in which two modes at 142 and 234 cm-1 were found. Both Raman and energy dispersive spectroscopy (EDS) exhibited that a small amount of tellurium (Te) existed in a-Se (As, Cl) master alloy samples. DSC measurements showed that a-Se (Cl) MS and a-Se (As) MS samples have one melting point, located at ∼219.6oC, whereas a-Se-As (0.52%)-Cl and Se- As(10.2%)-Cl(60 ppm) both possess two melting points, located at 221 and 220.3oC respectively. The a-Se alloy plate detectors have been fabricated and tested and the results showed high dark resistivity (1012 - 1013 Ω-cm) with good charge transport properties and cost-effective large-area scalability. © 2013 SPIE.","alpha detectors; amorphous selenium alloys; medical imaging devices; neutron detectors; zone refining","Alpha detector; Amorphous selenium; Detector performance; Energy dispersive spectroscopies (EDS); Glow discharge mass spectroscopies; Nuclear radiation detectors; Nuclear radiations; Trigonal structures; Alloys; Amorphous alloys; Amorphous materials; Differential scanning calorimetry; Energy dispersive spectroscopy; Gamma rays; Medical imaging; Melting point; Neutron detectors; Nuclear radiation spectroscopy; Photoelectrons; Selenium; Tellurium compounds; Transport properties; X ray diffraction; X ray photoelectron spectroscopy; X rays; Zone melting; Detectors",
"Mirshokraie S., Mesbah A., Pattabiraman K.","PYTHIA: Generating test cases with oracles for JavaScript applications",2013,"2013 28th IEEE/ACM International Conference on Automated Software Engineering, ASE 2013 - Proceedings",,,"6693121","610","615",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893545759&doi=10.1109%2fASE.2013.6693121&partnerID=40&md5=1045fe7fa423d39cb54f70b0039c58aa","Web developers often write test cases manually using testing frameworks such as Selenium. Testing JavaScript-based applications is challenging as manually exploring various execution paths of the application is difficult. Also JavaScript's highly dynamic nature as well as its complex interaction with the DOM make it difficult for the tester to achieve high coverage. We present a framework to automatically generate unit test cases for individual JavaScript functions. These test cases are strengthened by automatically generated test oracles capable of detecting faults in JavaScript code. Our approach is implemented in a tool called Pythia. Our preliminary evaluation results point to the efficacy of the approach in achieving high coverage and detecting faults. © 2013 IEEE.","DOM; JavaScript; oracles; test generation","Automatically generated; DOM; Evaluation results; Execution paths; Javascript; oracles; Test generations; Testing framework; High level languages; Software engineering; Software testing; Automatic test pattern generation",
"Xia X., Zhang N.","Research and implementation of a general model for agent electronic commerce website",2014,"Advances in Intelligent Systems and Computing","279",,,"1155","1165",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84921857608&doi=10.1007%2f978-3-642-54927-4_110&partnerID=40&md5=0025275bf91509c988f2fcb873e1d973","The electronic commerce has matured, including various forms. Nowadays, people not only participate in the native electronic commerce, but also join in the commerce from other countries. Owing to many causes, the electronic commerce among countries is difficult. Hence, the agent e-commerce websites appear. These agent websites can make people join in other countries’ electronic commerce actions synchronously. The synchronous technology is the core that these websites have realized. This paper proposes a general agent model to achieve this kind of website, using data API or HttpClient to get the data in the foreign e-commerce websites assures the instantaneity of information and reduces the overheads of database. By modifying and optimizing the Web automatic testing tool-Selenium, the Web server can automatically complete shopping in the real electronic commerce websites in order to achieve the synchronous technology. The model has greater compatibility, generality, and stability. © Springer-Verlag Berlin Heidelberg 2014.","E-commerce agent model; HttpClient; RC synchronous technology; Selenium","Automatic testing; Commerce; Electronic commerce; Intelligent systems; Knowledge engineering; Selenium; Social networking (online); Websites; Agent model; E-commerce websites; General model; HttpClient; Synchronous technology; Web servers; Intelligent agents","Springer Verlag"
"Fard A.M., Mirzaaghaei M., Mesbah A.","Leveraging existing tests in automated test generation for web applications",2014,"ASE 2014 - Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering",,,,"67","78",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84908655637&doi=10.1145%2f2642937.2642991&partnerID=40&md5=2daf1da502702c2949e5f568909ff449","To test web applications, developers currently write test cases in frameworks such as SELENIUM. On the other hand, most web test generation techniques rely on a crawler to explore the dynamic states of the application. The first approach requires much manual effort, but benefits from the domain knowledge of the developer writing the test cases. The second one is automated and systematic, but lacks the domain knowledge required to be as effective. We believe combining the two can be advantageous. In this paper, we propose to (1) mine the human knowledge present in the form of input values, event sequences, and assertions, in the human-written test suites, (2) combine that inferred knowledge with the power of automated crawling, and (3) extend the test suite for uncovered/unchecked portions of the web application under test. Our approach is implemented in a tool called TESTILIZER. An evaluation of our approach indicates that TESTILIZER (1) outperforms a random test generator, and (2) on average, can generate test suites with improvements of up to 150% in fault detection rate and up to 30% in code coverage, compared to the original test suite. © 2014 ACM.","Automated test generation; Test reuse; Web applications","Automation; Fault detection; Social networking (online); Software engineering; Software testing; World Wide Web; Automated test generations; Code coverage; Domain knowledge; Event sequence; Fault detection rate; Human knowledge; Test generations; WEB application; Testing","Association for Computing Machinery, Inc"
"Kruse P.M., Nasarek J., Fernandez N.C.","Systematic testing of web applications with the classification tree method",2014,"CIBSE 2014: Proceedings of the 17th Ibero-American Conference Software Engineering",,,,"219","232",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84906058398&partnerID=40&md5=f2f5f085bb0f0a70a4ac76bc124a0b50","Testing of user interfaces of web applications has not yet received enough attention. One reason might be the lack of appropriate methodology and tool support. In this paper, we present a systematic approach for test design, implementation and execution of web applications. Instead of error prone capture and replay tools, we use Selenium in a custom framework to extract details of the system under test automatically. The classification tree method in terms of combinatorial test is then used for a systematic test design. Obtained test cases are executed using our custom framework again. This allows for a both, flexible and systematic test approach. We evaluate our approach and framework using a set of experiments. Our results indicate the applicability of approach and tool.","Classification tree method; User interface testing; Web application testing","Software engineering; World Wide Web; Classification tree method; Interface testings; System under test; Systematic test; Systematic testing; Tool support; WEB application; Web application testing; User interfaces","Universidad de la Frontera"
"de Castro A.M.F.V., Fontão A., Dias-Neto A.C.","An approach to perform automated functional testing in database-driven applications",2014,"CIBSE 2014: Proceedings of the 17th Ibero-American Conference Software Engineering",,,,"233","246",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84906056852&partnerID=40&md5=9caf27740388fc7413bb16b4792a9924","This paper presents an approach to performing automated functional testing in database-driven application. The goal is to provide test scripts that check contents in databases after CRUD (create, retrieval, update, and delete) operations using a software application. Based on automation tools already developed that test graphical user interface (GUI) elements, new assert functions were proposed and implemented to check data in databases. An instantiation of the proposed approach is described extending the Selenium RC tool to perform automated tests in web applications checking data stored in the database. A case study is described to analyze the impact of the proposed approach in terms of effort and rate of automation in the testing for a database-driven application. The results suggest a significant reduction (91% and 88%) in the effort to execute automated tests in database when compared to, respectively, manual and semi-automated execution.","Database testing; GUI testing; Software testing; Test automation","Application programs; Automation; Graphical user interfaces; Software engineering; Software testing; Testing; Automated functional testing; Automation tools; Database testing; Graphical user interfaces (GUI); GUI testing; Software applications; Test Automation; WEB application; Database systems","Universidad de la Frontera"
"Kiran M., Friesen A., Simons A.J.H., Schwach W.K.R.","Model-based testing in cloud brokerage scenarios",2014,"Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)","8377 LNCS",,,"192","208",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84901340345&doi=10.1007%2f978-3-319-06859-6_17&partnerID=40&md5=b0df21520e6f162799a8f8adbd54c3b3","In future Cloud ecosystems, brokers will mediate between service providers and consumers, playing an increased role in quality assurance, checking services for functional compliance to agreed standards, among other aspects. To date, most Software-as-a-Service (SaaS) testing has been performed manually, requiring duplicated effort at the development, certification and deployment stages of the service lifecycle. This paper presents a strategy for achieving automated testing for certification and re-certification of SaaS applications, based on the adoption of simple state-based and functional specifications. High-level test suites are generated from specifications, by algorithms that provide the necessary and sufficient coverage. The high-level tests must be grounded for each implementation technology, whether SOAP, REST or rich-client. Two examples of grounding are presented, one into SOAP for a traditional web service and the other into Selenium for a SAP HANA rich-client application. The results demonstrate good test coverage. Further work is required to fully automate the grounding. © Springer International Publishing Switzerland 2014.","Cloud Broker; Cloud Service Brokerage; Lifecycle Governance; Model-based Testing; Web Service Testing","Compliance control; Life cycle; Quality assurance; Regulatory compliance; Software testing; Specifications; Web services; Websites; Automated testing; Cloud brokers; Cloud services; Functional specification; Model based testing; Service lifecycle; Service provider; Service testing; Software as a service (SaaS)","Springer Verlag"
"Naidu T.J., Basri N.A., Nagenthram S.","SAHI vs. Selenium: A comparative analysis",2014,"Proceedings of 2014 International Conference on Contemporary Computing and Informatics, IC3I 2014",,,"7019594","967","970",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84949921894&doi=10.1109%2fIC3I.2014.7019594&partnerID=40&md5=c36ae2dca643f23d66b38220b08ae4a1","Functional testing for wireless based graphic user interfaces is one of the most routine and basic quality verification and validation on telecommunication products. These tests are often done based on requirements and specifications set and defined by product designers and original equipment manufacturers. As manual testing consumes considerable resource, having various time-to-market periods and user scenarios, automation is vital for testing. There are several tools that could perform automation, so we have conducted a study on two of the most commonly used web automation testing tools to allow test engineers and web and wireless software developers to make an informed decision on which tools to use based on their needs and resource. Which tool would give the best user experience? Which is easier to learn and maintain? Which tool needs lesser test resources and how convenient would the setup be for multiple iteration testing cycles? These, among other questions are answered during the course of this white paper © 2014 IEEE.","Automation; Functional testing; Graphical user interface; SAHI; Selenium; Web; Wireless","Automation; Graphical user interfaces; Radio; Selenium; Comparative analysis; Considerable resources; Functional testing; Graphic user interface; Multiple iterations; Original equipment manufacturers; Quality verification; SAHI; Software testing","Institute of Electrical and Electronics Engineers Inc."
"Martinez J., Thomas T., King T.M.","Echo: A middleware architecture for domain-specific UI test automation",2014,"2014 Workshop on Joining AcadeMiA and Industry Contributions to Test Automation and Model-Based Testing, JAMAICA 2014 - Proceedings",,,,"13","15",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84942409801&doi=10.1145%2f2631890.2631893&partnerID=40&md5=580120dfa5f66ea5514ea211d228169b","Model-driven engineering (MDE) continues to raise the level of abstraction used in software development. Software testing researchers and practitioners have been adopting MDE principles, and applying them to software testing activities. Examples include the use of domain-specific languages for functional testing and test automation. In this paper we present the design of a layered middleware architecture to support domain-specific, functional UI test automation. Building on experiences gained implementing a Selenium- based framework for a large-scale agile project, we present design ideas that raise the abstraction level in UI test automation frameworks. Design considerations are discussed to provoke thoughts and ideas on automation frameworks. Copyright 2014 ACM.","Domain-specific languages; Middleware; Software architecture; Software testing; Test automation; User interfaces","Abstracting; Automation; Joining; Middleware; Model checking; Problem oriented languages; Software architecture; Software design; Testing; User interfaces; Design considerations; Domain specific languages; Functional testing; Level of abstraction; Middleware architecture; Model-driven Engineering; Test Automation; Test automation frameworks; Software testing","Association for Computing Machinery"
"Ramshur J.T., De Jongh Curry A.L., Waters R.S.","Wireless simultaneous stimulation-and-recording device to train cortical circuits in somatosensory cortex",2014,"2014 36th Annual International Conference of the IEEE Engineering in Medicine and Biology Society, EMBC 2014",,,"6943619","426","429",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929492541&doi=10.1109%2fEMBC.2014.6943619&partnerID=40&md5=81650a73b2f3caf982caa3a5d454eb81","We describe for the first time the design, implementation, and testing of a telemetry controlled simultaneous stimulation and recording device (SRD) to deliver chronic intercortical microstimulation (ICMS) to physiologically identified sites in rat somatosensory cortex (SI) and test hypotheses that chronic ICMS strengthens interhemispheric pathways and leads to functional reorganization in the enhanced cortex. The SRD is a custom embedded device that uses the Cypress Semiconductor's programmable system on a chip (PSoC) that is remotely controlled via Bluetooth. The SRC can record single or multiunit responses from any two of 12 available inputs at 1-15 ksps per channel and simultaneously deliver stimulus pulses (0-255 μA; 10 V compliance) to two user selectable electrodes using monophasic, biphasic, or pseudophasic stimulation waveforms (duration: 0-5 ms, inter-phase interval: 0-5 ms, frequency: 0.1-5 s, delay: 0-10 ms). The SRD was bench tested and validated in vivo in a rat animal model. © 2014 IEEE.",,"Rats; Timing circuits; Animal model; Cypress semiconductors; Embedded device; Intercortical microstimulation; Programmable system on a chips; Recording devices; Somatosensory cortex; Stimulation waveforms; System-on-chip; animal; computer interface; devices; electrode; electrostimulation; evoked response; nerve cell network; physiology; rat; somatosensory cortex; wireless communication; Animals; Electric Stimulation; Electrodes; Evoked Potentials; Nerve Net; Rats; Somatosensory Cortex; User-Computer Interface; Wireless Technology","Institute of Electrical and Electronics Engineers Inc."
"Angmo R., Sharma M.","Performance evaluation of web based automation testing tools",2014,"Proceedings of the 5th International Conference on Confluence 2014: The Next Generation Information Technology Summit",,,"6949287","731","735",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84914141612&doi=10.1109%2fCONFLUENCE.2014.6949287&partnerID=40&md5=a5e9559eae1e4097423207a6e53cdaa9","In today's 21st century era countless software applications are written as a web based application which runs in a web browsers. With new technologies and commercialization of I.T. sector, the web based system has undergoes frequent and rapid changes. Today Softwares are coded as a web based application, which help to access data from any part of the globe. Even the economic relevance of web based enhances the control and quality of software. The quality assurance of any system depends on its test. But to do manually testing in most of the cases is time consuming, expensive and hectic. For the better business purpose and to save time and money automation testing is required. There are variety of tools are available in the market for this. One of the best known tool is selenium suite which is a combination of different automation testing tool. In this paper we will discuss about the selenium suite. It provides testers with different framework for different test cases. The main objective of this paper is to find the best tool in selenium suite and then compare it with some other tool for same task. For this purpose, performance evaluation is done on the basis of some criteria. © 2014 IEEE.","Automation testing; Performance; Selenium; Test case; Watir-webdriver; Web applications","Application programs; Automation; Quality assurance; Quality control; Selenium; Web services; Websites; Automation testing; Performance; Test case; Watir-webdriver; WEB application; Web browsers","Institute of Electrical and Electronics Engineers Inc."
"Christophe L., Stevens R., De Roover C., De Meuter W.","Prevalence and maintenance of automated functional tests for web applications",2014,"Proceedings - 30th International Conference on Software Maintenance and Evolution, ICSME 2014",,,"6976080","141","150",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84931075925&doi=10.1109%2fICSME.2014.36&partnerID=40&md5=e635ef0a658ba87bddc1f443bdd500cd","Functional testing requires executing particular sequences of user actions. Test automation tools enable scripting user actions such that they can be repeated more easily. SELENIUM, for instance, enables testing web applications through scripts that interact with a web browser and assert properties about its observable state. However, little is known about how common such tests are in practice. We therefore present a cross-sectional quantitative study of the prevalence of SELENIUM-based tests among open-source web applications, and of the extent to which such tests are used within individual applications. Automating functional tests also brings about the problem of maintaining test scripts. As the system under test evolves, its test scripts are bound to break. Even less is known about the way test scripts change over time. We therefore also present a longitudinal quantitative study of whether and for how long test scripts are maintained, as well as a longitudinal qualitative study of the kind of changes they undergo. To the former's end, we propose two new metrics based on whether a commit to the application's version repository touches a test file. To the latter's end, we propose to categorize the changes within each commit based on the elements of the test upon which they operate. As such, we are able to identify the elements of a test that are most prone to change. © 2014 IEEE.","Functional testing; Selenium; Test automation","Open source software; Selenium; Functional test; Functional testing; Qualitative study; Quantitative study; System under test; Test Automation; Test automation tool; WEB application; Automation","Institute of Electrical and Electronics Engineers Inc."
"Stevens R., Roover C.D.","Querying the history of software projects using QWALKEKO",2014,"Proceedings - 30th International Conference on Software Maintenance and Evolution, ICSME 2014",,,"6976145","585","588",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84931022126&doi=10.1109%2fICSME.2014.101&partnerID=40&md5=075e976002317490af0541050da4ad7a","We present the QwalKeko meta-programming library for Clojure that enables querying the history of versioned software projects in a declarative manner. Unique to this library is its support for regular path expressions within history queries. Regular path expressions are akin to regular expressions, except that they match a sequence of successive snapshots of a software project along which user-specified logic conditions must hold. Such logic conditions can concern the source code within a snapshot, versioning information associated with the snapshot, as well as patterns of source code changes with respect to other snapshots. We have successfully used the resulting multi-faceted queries to detect refactorings in project histories. In this paper, we discuss how applicative logic meta-programming enabled combining the heterogenous components of QwalKeko into a uniform whole. We focus on the applicative logic interface to a new implementation of a well-known change distilling algorithm. We use the problem of detecting and categorizing changes made to Selenium-based test scripts for illustration purposes. © 2014 IEEE.","declarative programming; history querying; mining software repositories; program querying","Object oriented programming; Declarative Programming; Logic meta programming; Meta Programming; Mining software repositories; program querying; Regular expressions; Software project; Source code changes; Computer circuits","Institute of Electrical and Electronics Engineers Inc."
"Goodfellow R., Kline E.","Cypress",2015,"EAI International Conference on Testbeds and Research Infrastructures for the Development of Networks and Communities (TRIDENTCOM)",,,,"","",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85052340149&doi=10.4108%2ficst.tridentcom.2015.259951&partnerID=40&md5=f18936764486a4e4be7e2a75f920bc35","In this paper we present the progress of our current work in the design and implementation of a cyber-physical sys-tem (CPS) testbed called Cypress. The purpose of Cypress is to provide a high-fidelity testbed environment that cohe-sively integrates the cyber and physical domains across all phases of the scientific experimentation process. Cypress is composed of a language, compiler, simulation engine and distributed control runtime system facilitating the develop-ment, execution and analysis of CPS experiments. Cypressis primarily focused on CPSs that may be classified as dis-Tributed or networked control systems. © Copyright 2015 ICST.",,"Distributed parameter control systems; Testbeds; Cyber physicals; Design and implementations; Distributed control; High-fidelity; Physical domain; Runtime systems; Simulation engine; Networked control systems",
[No author name available],"TRIDENTCOM 2015 - 10th EAI International Conference on Testbeds and Research Infrastructures for the Development of Networks and Communities",2015,"EAI International Conference on Testbeds and Research Infrastructures for the Development of Networks and Communities (TRIDENTCOM)",,,,"","",147,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85052339742&partnerID=40&md5=8f393992c6a405a13232beab58de7478","The proceedings contain 21 papers. The topics discussed include: Cypress: a testbed for research in networked cyber-physical systems; an automated testbed for profiling the packet send-time accuracy of embedded devices; authorization-based approach for customized automated resource provisioning services; accessible way-finding testbed: infrastructure and components; the open-multinet upper ontology towards the semantic-based management of federated infrastructures; dynamiQ: a tool for dynamic emulation of networks; a unified monitoring framework for energy consumption and network traffic; the development of China's next generation network and national service testbed; the geni experiment engine; FITeagle: a semantic testbed management framework; large scale experiments of multihop networks in mobile scenarios; scalable monitoring analytics architecture in software-defined infrastructure; docking autonomous robots in passive docks with infrared sensors and QR codes; using deduplicating storage for efficient disk image deployment; PCT and Iot in LTE networks: a study on test cases and test results; towards an interactive experiment framework: dynamiQ; creating a sustainable federation of cloudbased infrastructures for the future internet the fiware approach; cloud-based IoT analytics for the smart grid: experiences from a 3-year pilot; and experiences virtualizing a large-scale test platform for multimedia applications.",,,
"Gojare S., Joshi R., Gaigaware D.","Analysis and design of selenium webdriver automation testing framework",2015,"Procedia Computer Science","50",,,"341","346",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84937433268&doi=10.1016%2fj.procs.2015.04.038&partnerID=40&md5=0eeb3271cfcbfdc378cc96a479174f52","Nowadays, number of software system has been implemented as web-based applications. These web applications are very complex. It is very difficult to test such complex web applications. Automation testing uses automation tools to reduce human intervention and repeatable tasks. In this paper we have designed and implemented automation testing framework for testing web applications. This new automation testing framework has been implemented using selenium WebDriver tool. Using this framework tester can easily write their test cases efficiently and in less time. Tester need not to study the selenium webdriver tool in detail. This framework is helpful to developer to analyze their code due to screen shot property of framework. This framework produces the customized test report to tester. It is very easy to maintain and repair the test suite for new release of the application using this framework. © 2015 The Authors. Published by Elsevier B.V.","Automation testing; Automation testing framework; Selenium webdriver; Web applications","Application programs; Automation; Selenium; Social networking (online); World Wide Web; Automation testing; Automation tools; Human intervention; Software systems; Test case; Test reports; WEB application; Web-based applications; Big data","Elsevier B.V."
"Aiya K.V., Verma H.","Keyword driven automated testing framework for web application",2015,"9th International Conference on Industrial and Information Systems, ICIIS 2014",,,"7036478","","",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84924280658&doi=10.1109%2fICIINFS.2014.7036478&partnerID=40&md5=996e8b7f051394c3449fa2c93a700473","Presently in software testing companies, 90% of software testing is carried out manually which takes lots of time, and also need large number of employees which not only increase the cost of the Software but also takes more time for completion. Therefore, software testing companies are moving towards automated testing and there is a need to develop a testing framework which is application independent and scalable with the increased requirements of each application. An automated testing framework has been proposed here for testing web applications. The proposed framework is based on keyword driven framework in which a excel file containing the keywords is imported to the framework by using selenium WebDriver API. © 2014 IEEE.","Automated testing framework; Keyword driven framework; Selenium WebDriver; Software testing","Application programs; Automation; Automated testing; Keyword driven; Testing framework; WEB application; Software testing","Institute of Electrical and Electronics Engineers Inc."
"Dowling P., McGrath K.","Using free and open source tools to manage software quality",2015,"Communications of the ACM","58","7",,"51","55",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84934765947&doi=10.1145%2f2755503&partnerID=40&md5=d092494d4a86daf9556fdde79bac51f0","Experts share their views on the use of free and open source tools to manage software quality. One of the first tasks for a project team is to set up a source code control framework. It is critical to maintain a central area for the team to check in code and have it backed up regularly. The tests are executed in Firefox and recorded via the Selenium IDE. The tests are then saved on the server side. A single file to list all the individual test cases to be executed as part of a test suite is created.",,"Computer software selection and evaluation; Open systems; Check-in; Control framework; Open source tools; Project team; Server sides; Software Quality; Source codes; Test case; Open source software","Association for Computing Machinery"
"Goel L., Majumdar R.","Automation of weblink validation using a generic & reusable automation framework",2015,"Conference Proceeding - 2015 International Conference on Advances in Computer Engineering and Applications, ICACEA 2015",,,"7164745","440","443",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84947996642&doi=10.1109%2fICACEA.2015.7164745&partnerID=40&md5=703de954662970cbfda0259b6e111c24","Success of any web application depends on the smooth functionality of the application without any intervention. A web application containing broken web links can create problem and dissatisfaction among the users. Now it becomes obligatory for the organization to perform validation of the weblinks present in their application. This paper provides a generic and reusable automation framework to perform weblink validation. Selenium is used to support the feature of cross browser testing. © 2015 IEEE.","Cross browser testing; webLink validation","Automation; WEB application; Web links; webLink validation; Computer software reusability","Institute of Electrical and Electronics Engineers Inc."
"Stocco A., Leotta M., Ricca F., Tonella P.","Why Creating Web Page Objects Manually if It Can Be Done Automatically?",2015,"Proceedings - 10th International Workshop on Automation of Software Test, AST 2015",,,"7166271","70","74",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84945338199&doi=10.1109%2fAST.2015.26&partnerID=40&md5=3959a9a8a75af6cf6c952d4e4470a34e","Page Object is a design pattern aimed at making web test scripts more readable, robust and maintainable. The effort to manually create the page objects needed for a web application may be substantial and unfortunately existing tools do not help web developers in such task.In this paper we present APOGEN, a tool for the automatic generation of page objects for web applications. Our tool automatically derives a testing model by reverse engineering the target web application and uses a combination of dynamic and static analysis to generate Java page objects for the popular Selenium WebDriver framework. Our preliminary evaluation shows that it is possible to use around 3/4 of the automatic page object methods as they are, while the remaining 1/4 need only minor modifications. © 2015 IEEE.","Page Object Pattern; Program Analysis; Reverse Engineering; Selenium WebDriver; Testware Evolution; Web Testing","Java programming language; Reverse engineering; Selenium; Static analysis; Websites; World Wide Web; Automatic Generation; Design Patterns; Object patterns; Program analysis; Testing modeling; Testware Evolution; WEB application; Web testing; Software testing","Institute of Electrical and Electronics Engineers Inc."
"Chandu P., Sasikala T.","Yoking object oriented metrics through mutation testing for minimizing time period ramification",2015,"Journal of Theoretical and Applied Information Technology","77","3",,"446","450",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84938355667&partnerID=40&md5=3804c874b8cd80882aaf277429fb315e","Object Oriented Programming largely depends on the testing processes. Testing is of vital importance and is being carried out at three levels namely system, unit and integration verification. The three approaches Structural, black-box, error-driven approach is normally considered as efficient approaches. In the proposed system, we probe into object-oriented metrics which are forcefully yoked through mutation testing processes using Selenium tool and the primary focus is on checking the time consumption in the effective evoking of results. However maximizing the effectiveness of software has been principle objective of the proposed work. To derive a non-existing software test case and to ascertain quality of programs Mutation method is used. Selenium an automatic tool through open source technology is implemented in this process which provides various set programming equipments. Each and every equipment evokes an unique mode of support testing being generated by the tool. In this proposed system the mutation mode of testing the objects is carried out by means of selenium tool. © 2005 - 2015 JATIT & LLS. All rights reserved.","Automation; Implementing; Metrics; Mutation; Testing",,"Asian Research Publishing Network"
"Guo H.-F., Ouyang Q., Siy H.","Semantics-based automated web testing",2015,"Electronic Proceedings in Theoretical Computer Science, EPTCS","188",,,"59","74",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84954484246&doi=10.4204%2fEPTCS.188.7&partnerID=40&md5=a9d3504438f294b3207f6c4603f13890","We present TAO, a software testing tool performing automated test and oracle generation based on a semantic approach. TAO entangles grammar-based test generation with automated semantics evaluation using a denotational semantics framework. We show how TAO can be incorporated with the Selenium automation tool for automated web testing, and how TAO can be further extended to support automated delta debugging, where a failing web test script can be systematically reduced based on grammar-directed strategies. A real-life parking website is adopted throughout the paper to demonstrate the effectivity of our semantics-based web testing approach.",,"Automation; Semantics; Software testing; Specifications; Websites; World Wide Web; Automated test; Automation tools; Delta debugging; Denotational semantics; Semantic approach; Test generations; Test scripts; Web testing; Semantic Web","Open Publishing Association"
"Raulamo-Jurvanen P., Kakkonen K., Mäntylä M.","Using surveys and Web-scraping to select tools for software testing consultancy",2016,"Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)","10027 LNCS",,,"285","300",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84998636508&doi=10.1007%2f978-3-319-49094-6_18&partnerID=40&md5=c59d51b1f462091f645303b3ce0bbdd7","We analyzed findings from data collected utilizing surveys and Webscraping, to support Knowit Oy, a software testing consultation company, in the process of selecting the right tools for software testing & test automation. We conducted two surveys (2013 & 2016) among (mostly Finnish) software professionals to acquire criteria and a list of tools used for software testing in industry. Considering all our data sources Selenium was the most popular pure tool, while Robot Framework was the most referenced tool (latter survey). According to the surveys Jenkins and Sikuli have the highest increase in popularity (or familiarity). Top referred criteria for selection were usability, functionality, maintainability and available support for a tool. While Knowit considers it best to utilize traditional surveys, Web-scraping is seen as cost effective support for such instruments. To get comprehensive picture and to gain knowledge of the tools in markets multiple sources should be used. © Springer International Publishing AG 2016.","Selection criteria; Software test automation tool; Software testing tool; Test automation; Tool support","Automation; Cost effectiveness; Management science; Process engineering; Surveys; Cost effective; Data-sources; Multiple source; Selection criteria; Software test automation; Test Automation; Tool support; Web scrapings; Software testing","Springer Verlag"
"Berłowski J., Chrusciel P., Kasprzyk M., Konaniec I., Jureczko M.","Highly automated agile testing process: An industrial case study",2016,"E-Informatica Software Engineering Journal","10","1",,"69","87",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84994060568&doi=10.5277%2fe-Inf160104&partnerID=40&md5=083f94f0e5d8fb8f59cb63053f34124c","This paper presents a description of an agile testing process in a medium size software project that is developed using Scrum. The research methods used is the case study were as follows: surveys, quantifiable project data sources and qualitative project members opinions were used for data collection. Challenges related to the testing process regarding a complex project environment and unscheduled releases were identified. Based on the obtained results, we concluded that the described approach addresses well the aforementioned issues. Therefore, recommendations were made with regard to the employed principles of agility, specifically: continuous integration, responding to change, test automation and test driven development. Furthermore, an efficient testing environment that combines a number of test frameworks (e.g. JUnit, Selenium, Jersey Test) with custom-developed simulators is presented.","Agile software development; Case study; Software engineering; Testing process","Software design; Software engineering; Agile software development; Complex projects; Continuous integrations; Industrial case study; Software project; Test driven development; Testing environment; Testing process; Software testing","Politechnika Wroclawska"
"Tao C., Gao J.","On building test automation system for mobile applications using GUI ripping",2016,"Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE","2016-January",,,"480","485",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84988358022&doi=10.18293%2fSEKE2016-168&partnerID=40&md5=00aed5e24fdf96cee6de18b3ede0dc8f","With the rapid advance of mobile computing technology and wireless networking, there is a significant increase of mobile subscriptions. This brings new business requirements and demands in mobile software testing, and causes new issues and challenges in mobile testing and automation. Current existing mobile application testing tools mostly concentrate on GUI, load and performance testing which seldom consider large-scale concurrent automation, coverage analysis, fault tolerance and usage of well-defined models. This paper introduces an implemented system that provides an automation solution across platforms on diverse devices using GUI ripping test scripting technique. Through incorporating open source technologies such as Appium and Selenium Grid, this paper addresses the scalable test automation control with the capability of fault tolerant. Additionally, maximum test coverage can also be obtained by executing parallel test scripts within the model. Finally, the paper reports case studies to indicate the feasibility and effectiveness of the proposed approach.","GUI ripping; Large-scale concurrent testing; Mobile application testing; Test automation","Automation; Fault tolerance; Graphical user interfaces; Knowledge engineering; Load testing; Mobile computing; Mobile telecommunication systems; Open source software; Software engineering; Automation solutions; Business requirement; Concurrent testing; Issues and challenges; Mobile application testing; Mobile computing technology; Open-source technology; Test Automation; Software testing","Knowledge Systems Institute Graduate School"
"Bubna K.","End to end specification based test generation of web applications",2016,"ENASE 2016 - Proceedings of the 11th International Conference on Evaluation of Novel Software Approaches to Software Engineering",,,,"296","302",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979543865&doi=10.5220%2f0005919102960302&partnerID=40&md5=7b7dd73c3cb6a3d291da847a965a7198","Using formal specifications to generate test cases presents great potential for automation in testing and enhancing the quality of test cases. However, an important challenge in this direction is the design specifications which are at a more abstract level than the implementation, with many important implementation level details missing. To generate executable test cases, these implementation details must be included at some stage. Though there has been a lot of work in test generation from specification, all the existing methods suffer from this problem: either the test cases are not executable, or the process involves a non-trivial, manual step of translating the abstract test cases to concrete test cases. In this work, we present an approach of specification based test generation for web applications that overcomes the above challenge: test generation is completely automated and the test cases are fully executable on a test execution framework (e.g. Selenium RC). Further, our methodology allows generation of multiple sets of concrete test cases from the the same formal specification. This makes it possible to use the same abstract specification to generate test cases for a number of versions of the system. Throughout the paper, a case study of Learning Management System is used to illustrate our approach. Copyright © 2016 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.","Model checking; Selenium; Statechart; Web applications","Concretes; Formal specification; Model checking; Selenium; Testing; Abstract levels; Abstract specifications; Design specification; Learning management system; State charts; Test execution framework; Test generations; WEB application; Concrete testing","SciTePress"
"Clerissi D., Leotta M., Reggio G., Ricca F.","A lightweight semi-automated acceptance test-driven development approach for web applications",2016,"Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)","9671",,,"593","597",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84977582826&doi=10.1007%2f978-3-319-38791-8_55&partnerID=40&md5=259362b8798a0a185f06fbac69c47eba","Applying Acceptance Test Driven Development (ATDD) in the context of web applications is a difficult task due to the intricateness of existing tools/frameworks and, more in general, of the proposed approaches. In this work, we present a simple approach for developing web applications in ATDD mode, based on the usage of Screen Mockups and Selenium IDE. © Springer International Publishing Switzerland 2016.",,"World Wide Web; Simple approach; Test driven development; WEB application; Acceptance tests","Springer Verlag"
"Bubna K., Chakrabarti S.K.","ACT (Abstract to Concrete Tests) - A tool for generating Concrete test cases from Formal Specification of Web Applications",2016,"CEUR Workshop Proceedings","1561",,,"16","22",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964543868&partnerID=40&md5=e2184a40cf3f22adc5d0b8cfaf19046a","As web applications are becoming more and more ubiquitous, modeling and testing web applications correctly is becoming necessary. In this paper, we have used a formal specification language, State chart to model the navigation behaviour aspect of web applications. This paper presents the ACT (Abstract to Concrete Tests) tool, an approach of generating concrete executable Selenium RC JUnit test cases from a formal State chart specification model. The ACT tool can generate concrete Selenium RC JUnit test cases from abstract test cases by utilizing data shared across different interactions of the web application with the web server. Throughout the paper, a case study of Learning Management System is used to illustrate our approach. Copyright © 2016 for the individual papers by the papers' authors.",,"Concretes; Navigation charts; Selenium; Software engineering; Specification languages; Specifications; Testing; World Wide Web; Learning management system; Specification modeling; State charts; Test case; WEB application; Web servers; Formal specification","CEUR-WS"
"Altaf I., Dar J.A., Rashid F.U., Rafiq M.","Survey on selenium tool in software testing",2016,"Proceedings of the 2015 International Conference on Green Computing and Internet of Things, ICGCIoT 2015",,,"7380682","1378","1383",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84966671563&doi=10.1109%2fICGCIoT.2015.7380682&partnerID=40&md5=6a2c1f3efd058cd26c18c6f10a5d4c27","We are moving towards a general public where web is the need of hour. Today the vast majority of the product applications executed, are composed as online applications which are keep running in a web program. Testing programming applications is critical. Numerous associations make utilization of a specific web application, so the same web applications are tried habitually by diverse clients from distinctive regions physically. Testing a web application physically is tedious, so we go for test automation. In test automation we make utilization of a product device to run repeatable tests against the application to be tried. There are various focal points of test automation. They are exceptionally exact and have more prominent preparing pace when contrasted with manual automation. There are various open source and business devices accessible for test mechanization. Selenium is one of the broadly utilized open source device for test computerization. Test automation enhances the effectiveness of programming testing procedures. Test automation gives quick criticism to engineers. It additionally discovers the imperfections when one may miss in the manual testing. In test automation we can perform boundless emphases for testing the same example of code ceaselessly commonly. © 2015 IEEE.","aka.selenium; RC; selenium; selenium control; selenium grid; selenium ide; test case; web driver","Application programs; Automation; Internet; Internet of things; Machinery; Open source software; Selenium; Testing; World Wide Web; aka.selenium; General publics; On-line applications; Product applications; Test Automation; Test case; Testing procedure; web driver; Software testing","Institute of Electrical and Electronics Engineers Inc."
"Leotta M., Stocco A., Ricca F., Tonella P.","Robula+: An algorithm for generating robust XPath locators for web testing",2016,"Journal of Software: Evolution and Process","28","3",,"177","204",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960411519&doi=10.1002%2fsmr.1771&partnerID=40&md5=94785f3f650ec78904da73bd1c24dff8","Automated test scripts are used with success in many web development projects, so as to automatically verify key functionalities of the web application under test, reveal possible regressions and run a large number of tests in short time. However, the adoption of automated web testing brings advantages but also novel problems, among which the test code fragility problem. During the evolution of the web application, existing test code may easily break and testers have to correct it. In the context of automated DOM-based web testing, one of the major costs for evolving the test code is the manual effort necessary to repair broken web page element locators - lines of source code identifying the web elements (e.g. form fields and buttons) to interact with. In this work, we present Robula+, a novel algorithm able to generate robust XPath-based locators - locators that are likely to work correctly on new releases of the web application. We compared Robula+ with several state of the practice/art XPath locator generator tools/algorithms. Results show that XPath locators produced by Robula+ are by far the most robust. Indeed, Robula+ reduces the locators' fragility on average by 90% w.r.t. absolute locators and by 63% w.r.t. Selenium IDE locators. Copyright © 2016 John Wiley & Sons, Ltd.","DOM selector; maintenance effort reduction; robust XPath locator; test cases fragility; web testing","Algorithms; Automation; Codes (symbols); Websites; World Wide Web; DOM selector; Maintenance efforts; Robust XPath locator; Test case; Web testing; Testing","John Wiley and Sons Ltd"
"Guo H.-F.","A semantic approach for automated test oracle generation",2016,"Computer Languages, Systems and Structures","45",,,"204","219",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84959311954&doi=10.1016%2fj.cl.2016.01.006&partnerID=40&md5=63d0580f3acd8ffcd68a6e1ebc3e66d0","This paper presents the design, implementation, and applications of a software testing tool, TAO, which allows users to specify and generate test cases and oracles in a declarative way. Extended from its previous grammar-based test generation tool, TAO provides a declarative notation for defining denotational semantics on each productive grammar rule, such that when a test case is generated, its expected semantics will be evaluated automatically as well, serving as its test oracle. TAO further provides a simple tagging mechanism to embed oracles into test cases for bridging the automation between test case generation and software testing. Two practical case studies are used to illustrate how automated oracle generation can be effectively integrated with grammar-based test generation in different testing scenarios: locating fault-inducing input patterns on Java applications; and Selenium-based automated web testing. © 2016 Elsevier Ltd","Denotational semantics; Software testing; Test case generation; Test oracle","Application programs; Automatic test pattern generation; Automation; Semantics; Automated test; Denotational semantics; Input patterns; Java applications; Semantic approach; Test case generation; Test generations; Test oracles; Software testing","Elsevier Ltd"
"Bures M., Filipsky M.","SmartDriver: Extension of selenium webdriver to create more efficient automated tests",2016,"2016 6th International Conference on IT Convergence and Security, ICITCS 2016",,,"7740370","","",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85006320716&doi=10.1109%2fICITCS.2016.7740370&partnerID=40&md5=9e94ebf40b55ffe6fe1d6637171abe6e","The SmartDriver framework is an open extension of Selenium WebDriver framework aimed at decreasing implementation and maintenance costs of automated tests. It composes from two principal modules working in synergy. The structuring module ensuring three layer architecture of reusable objects, page objects and tests. Besides decreasing of implementation and maintenance costs, this module allows to create tests which can be easily read by testers or business analysts without previous extensive programming knowledge. The maintenance module then decreases time needed to update the scripts. When a test fails when locating a page element which does not exist due to obsolete test script, SmartDriver automatically analyzes if the element has been just moved to another place in the page. If so, it gives this information to the script developer. © 2016 IEEE.","Architecture; Maintenance; Mobile testing; Selenium WebDriver; Test automation; Test automation framework; Web application testing","Architecture; Automation; Computer software reusability; Maintenance; Selenium; Business analysts; Maintenance cost; Mobile testing; Programming knowledge; Test Automation; Test automation frameworks; Threelayer architecture; Web application testing; Testing","Institute of Electrical and Electronics Engineers Inc."
"Neto N.M.L., Vilain P., Dos Santos Mello R.","Segen: Generation of test cases for selenium and selendroid",2016,"ACM International Conference Proceeding Series",,,,"433","442",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85014937121&doi=10.1145%2f3011141.3011154&partnerID=40&md5=dc2a22417d60e5180a4c6f8bc87b1bc4","Nowadays, with the rise of mobile devices, users deal with applications that present user interfaces adapted to different contexts of use. In order to improve the quality of these user interfaces, we propose a solution that includes a higher level description of tests and a tool, called Segen, for generating test cases for two very known test automation tools for Web and mobile environments: Selenium and Selendroid. Segen allows to generate test scripts from a single high-level description to executable tests scripts for each environment. On using Segen, testers can focus on the test cases, independently of the environment being used. A proof of concept was used to evaluate Segen: A smart home energy management that has a Web version and a mobile Android version. The evaluation showed that Segen reduces the work of testers and can be used along with other testing libraries. The evaluation also showed that Segen is more useful if test cases are designed before the development. However, it was identified that Segen has similar limitations to those that Selenium and Selendroid have. © 2016 ACM.","Segen; Selendroid; Selenium; Software testing; Tobias; User interface testing","Automation; Information analysis; Information retrieval; Intelligent buildings; Selenium; Software testing; Testing; Web services; Websites; High level description; Interface testings; Mobile environments; Proof of concept; Segen; Selendroid; Test automation tool; Tobias; User interfaces","Association for Computing Machinery"
"Renard C., Artinian A., Dantes D., Lepage G., Diels W.","Preliminary performances measured on a CMOS long linear array for space application",2017,"Proceedings of SPIE - The International Society for Optical Engineering","10567",,"105671M","","",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85040508055&doi=10.1117%2f12.2308076&partnerID=40&md5=6e1e5260a40d7169cfe7d36ccea3bcd2","This paper presents the design and the preliminary performances of a CMOS linear array, resulting from collaboration between Alcatel Alenia Space and Cypress Semiconductor BVBA, which takes advantage of emerging potentialities of CMOS technologies. The design of the sensor is presented: it includes 8000 panchromatic pixels with up to 25 rows used in TDI mode, and 4 lines of 2000 pixels for multispectral imaging. Main system requirements and detector tradeoffs are recalled, and the preliminary test results obtained with a first generation prototype are summarized and compared with predicted performances. © COPYRIGHT SPIE. Downloading of the abstract is permitted for personal use only.",,"CMOS integrated circuits; Pixels; Alcatel alenia spaces; CMOS technology; Cypress semiconductors; Long-linear array; Multispectral imaging; Panchromatic pixels; Predicted performance; System requirements; Integrated circuit design","SPIE"
"Sinaga A.M.","Case study on testing of web-based application: Del's students information system",2017,"Journal of Telecommunication, Electronic and Computer Engineering","9","2-4",,"1","5",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85032960670&partnerID=40&md5=83f6950824eccfbd598256802d17fd3c","Software Testing is an important process to assure the quality of software including web-based application. The aim of testing is to detect all failures to ensure that the software is built in accordance with its specifications. There are two methods of testing, such as the white box and the black box testing. White box testing is done with the approach to the program code, while black box testing is done without referring to the source code, but to the output of the resulting program. User interface testing is the type of testing that is usually conducted on a web-based application. In this research, functional and user interface testing were conducted into Del's Student Information System. Testing techniques used in this research was a Simple Functional Acceptance Test (FAST). This technique was done by testing each function and checking each component of the user interface. Selenium IDE was used to execute test cases resulting in the implementation. From all steps carried out in this research, it can be concluded that the functional testing can be carried out in line with the testing of the user interface. A testing scenario for web-based application has been proposed and experimentally applied into an application under testing.","Functional Acceptance Simple Test (FAST); Functional testing; UI testing; Web testing",,"Universiti Teknikal Malaysia Melaka"
"Suwondo A., Achmadi U.F., Suratman","The effect of selenium supplementation on hemoglobin among farmers working as pesticide sprayers",2017,"Advanced Science Letters","23","4",,"3361","3363",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85021091941&doi=10.1166%2fasl.2017.9107&partnerID=40&md5=35795529bfedf761dbaa22cc86b74845","Background: The symptom of organophosphate (OPs) poisoning develops when the activity of cholinesterase enzyme (ChE) at the nerves ending is obstructed, which caused accumulation of ACh in the nerve endings. The returning of ChE to the normal levels depends on the ability of Erythrocyte cell membrane to survive from lipid peroxidation, with the help of Glutathione peroxides enzyme (GPX), which is heavily depend on Selenium (Se). This study aimed to find out the benefits of Selenium and Vitamin C supplementation on Hemoglobin levels of the farmers working as pesticide sprayers. Method: This was an experimental study using Pre and post test Control Group Design. Ninety nine farmers lived in Pasuruan village, Temanggung, Central Java who fulfilled the inclusion and exclusion criteria were selected as the subjects. Se and Vit C supplementation were given for 7 consecutive days. Results: The hemoglobin levels in Selenium group increased by 2.66%, while in the control group and the group receiving Se+Vit C decreased by 1.96% (p = 0.0001). Conclusion: Supplementation of Selenium 200 μg for 7 consecutive days would increase the hemoglobin level of pesticide sprayers-farmers. © 2017 American Scientific Publishers All rights reserved.","Experimental study; Level of hemoglobin; Selenium; Vitamin C",,"American Scientific Publishers"
"Rehman A.U., Bashir N., Hassan N.U., Yuen C.","Impact of home appliances on the performance of narrow-band power line communications for smart grid applications",2017,"IEEE Region 10 Annual International Conference, Proceedings/TENCON",,,"7848709","3511","3514",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85015442131&doi=10.1109%2fTENCON.2016.7848709&partnerID=40&md5=2ee32aef5c7e00b83029cef8db4a4882","In this paper, we propose a cost-effective and robust communication network architecture for smart grid applications. The data rate requirements of many smart grid applications are low, which makes narrow-band power line communication (NB-PLC), a viable candidate technology. We develop a testbed based on Cypress 3274 evaluation kits (state of the art NB-PLC modems) and conduct various experiments. Based on our experiments, we conclude that this technology is robust and can provide reliable communication without any significant change in the resulting bit error rate (BER) as the distance between transmitter and receiver is increased up to several tens of meters. Different type of home appliances and their combinations generate noise in PLC medium, which impacts the packet success rate (PSR). However, in most of our experiments, PSR remained high, which justifies the use of NB-PLC technology in non-critical smart grid applications inside homes and commercial buildings. © 2016 IEEE.",,"Bit error rate; Cost effectiveness; Domestic appliances; Electric power measurement; Electric power transmission networks; Network architecture; Office buildings; Commercial building; Narrowband power-line communications (NB-PLC); PLC technology; Power line communications; Reliable communication; Smart grid applications; State of the art; Transmitter and receiver; Smart power grids","Institute of Electrical and Electronics Engineers Inc."
"González C.J., Chenet C.P., Budelon M., Vaz R.G., Gonçalez O., Balen T.R.","Evaluation of a mixed-signal design diversity system under radiation effects",2017,"LATS 2017 - 18th IEEE Latin-American Test Symposium",,,"7906751","","",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85020231058&doi=10.1109%2fLATW.2017.7906751&partnerID=40&md5=e12f0b65f67c81a65f169686f972b06a","In this work a data acquisition system, based on a design diversity redundant scheme, is tested under total ionizing dose effects. The data acquisition system is composed by three ADCs and two voters, implementing different levels of diversity (architectural and temporal). This system is implemented on a 130nm commercial mixed-signal programmable SoC (PSoC 5), from Cypress Semiconductor. The system was tested under 60Co gamma radiation with a dose rate of 1 krad(Si)/h reaching a total dose of 242 krad(Si). One of the system copies presented a significant degradation on its linearity during the irradiation, while the others kept the functionality with less severe degradation, evidencing the advantage of using diversity to improve resilience in mixed-signal redundant systems. © 2017 IEEE.","Design Diversity; Mixed-Signal; Programmable System-on-Chip (PSoC); Radiation Effects","Data acquisition; Ionizing radiation; Programmable logic controllers; Radiation effects; System-on-chip; Cypress semiconductors; Data acquisition system; Design diversity; Mixed signal; Mixed-signal design; Programmable system on chips; Redundant system; Total ionizing dose effects; Integrated circuit design","Institute of Electrical and Electronics Engineers Inc."
"Dwarakanath A., Era D., Priyadarshi A., Dubash N., Podder S.","Accelerating Test Automation through a Domain Specific Language",2017,"Proceedings - 10th IEEE International Conference on Software Testing, Verification and Validation, ICST 2017",,,"7928002","460","467",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85020725176&doi=10.1109%2fICST.2017.52&partnerID=40&md5=bed062f356959826d87cff3e1eaea7b3","Test automation involves the automatic execution of test scripts instead of being manually run. This significantly reduces the amount of manual effort needed and thus is of great interest to the software testing industry. There are two key problems in the existing tools & methods for test automation - a) Creating an automation test script is essentially a code development task, which most testers are not trained on, and b) the automation test script is seldom readable, making the task of maintenance an effort intensive process. We present the Accelerating Test Automation Platform (ATAP) which is aimed at making test automation accessible to non-programmers. ATAP allows the creation of an automation test script through a domain specific language based on English. The English-like test scripts are automatically converted to machine executable code using Selenium WebDriver. ATAP's English-like test script makes it easy for non-programmers to author. The functional flow of an ATAP script is easy to understand as well thus making maintenance simpler (you can understand the flow of the test script when you revisit it many months later). ATAP has been built around the Eclipse ecosystem and has been used in a real-life testing project. We present the details of the implementation of ATAP and the results from its usage in practice. © 2017 IEEE.","DSL; Selenium; Test automation; Xtext","Automation; Computer programming languages; DSL; Problem oriented languages; Selenium; Verification; Automation tests; Code development; Domain specific languages; Executable codes; Functional flow; Real-life testing; Test Automation; Xtext; Software testing","Institute of Electrical and Electronics Engineers Inc."
"Lee S.-J., You J.-L., Hsieh S.-Y.","Automatically locating unnamed windows and inner frames for web regression testing",2017,"Proceedings of the 2017 IEEE International Conference on Applied System Innovation: Applied System Innovation for Modern Technology, ICASI 2017",,,"7988381","184","187",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85028524372&doi=10.1109%2fICASI.2017.7988381&partnerID=40&md5=6d3d0f88dac1f8039cd8e5d25d75c8b9","Selenium IDE is a glorious state-of-The-Art integrated development environment for recording and playing Selenium test cases for web testing. However, it does not support automatically locating unnamed popup windows and inner frames, which impedes creating a sequence of test commands across different windows and inner frames. In this work, we extend Selenium IDE and propose a technique to dealing with this problem. The experimental results demonstrate the automation efficacy with 12 real world web pages and 36 pairwise test cases. © 2017 IEEE.","Test case record and playback; Unnamed inner frame; Unnamed window; Web regression testing","Integrodifferential equations; Selenium; Software testing; Websites; Integrated development environment; Pairwise tests; Pop-up windows; Real world web; Regression testing; State of the art; Test case; Unnamed inner frame; Innovation","Institute of Electrical and Electronics Engineers Inc."
"De Moura J.L., Charão A.S., Lima J.C.D., De Oliveira Stein B.","Test case generation from BPMN models for automated testing of Web-based BPM applications",2017,"Proceedings of the 2017 17th International Conference on Computational Science and Its Applications, ICCSA 2017",,,"7999652","","",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85041234887&doi=10.1109%2fICCSA.2017.7999652&partnerID=40&md5=7ffc8cac48ddddfc610dc9fdf857514a","This article proposes an approach to generate test cases from BPMN models, for automated testing of Web applications implemented with the support of BPM suites. The work is primarily focused on functional testing and has the following objectives: (i) identify execution paths from the flow analysis in the BPMN model and (ii) generate the initial code of test scripts to be run on a given Web application testing tool. Throughout the article, we describe the design and implementation of a solution to achieve these goals, targeting automated tests using Selenium and Cucumber as tools. The approach was applied to processes from a public repository and was able to generate test scenarios from different BPMN models. © 2017 IEEE.","Automatic software testing; BPMN; Business Process Management; Test case generation","Administrative data processing; Automation; Enterprise resource management; Automated testing; BPMN; Business process management; Design and implementations; Functional testing; Public repositories; Test case generation; Web application testing; Software testing","Institute of Electrical and Electronics Engineers Inc."
"Vila E., Novakova G., Todorova D.","Automation testing framework for web applications with selenium WebDriver: Opportunities and threats",2017,"ACM International Conference Proceeding Series","Part F131200",,,"144","150",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85033558270&doi=10.1145%2f3133264.3133300&partnerID=40&md5=b1bc4d22bd0045fc8126b8938d08f098","The present paper discusses the need of automation testing in the process of software development, in order to provide high quality, robust and reliable software product. It answers the question why automation testing plays such a significant role in software development lifecycle as well as why not to use already existing automation testing tools when testing web applications and why it is better to create automation testing framework. Some reliable approaches how to build a testing framework are investigated. Selenium WebDriver tool is pointed out as appropriate solution when creating such framework and its wide use is outlined. Moreover, the paper provides analysis and detailed list of opportunities and threats of using Selenium WebDriver tool. The paper concludes by providing arguments for the value of the creation of automation framework for Web applications with Selenium WebDriver. © 2017 Association for Computing Machinery.","Automation testing script; Automation testing tool; Selenium WebDriver; Software product; Testing framework; Web application","Application programs; Automation; Image processing; Network function virtualization; Selenium; Software design; Software engineering; Automation testing; High quality; Software development life cycle; Software products; Testing framework; WEB application; Software testing","Association for Computing Machinery"
"Stocco A., Leotta M., Ricca F., Tonella P.","APOGEN: automatic page object generator for web testing",2017,"Software Quality Journal","25","3",,"1007","1039",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-84981289299&doi=10.1007%2fs11219-016-9331-9&partnerID=40&md5=5504a841c8b9227978e9cd8cd9e9a61d","Modern web applications are characterized by ultra-rapid development cycles, and web testers tend to pay scant attention to the quality of their automated end-to-end test suites. Indeed, these quickly become hard to maintain, as the application under test evolves. As a result, end-to-end automated test suites are abandoned, despite their great potential for catching regressions. The use of the Page Object pattern has proven to be very effective in end-to-end web testing. Page objects are façade classes abstracting the internals of web pages into high-level business functions that can be invoked by the test cases. By decoupling test code from web page details, web test cases are more readable and maintainable. However, the manual development of such page objects requires substantial coding effort, which is paid off only later, during software evolution. In this paper, we describe a novel approach for the automatic generation of page objects for web applications. Our approach is implemented in the tool Apogen, which automatically derives a testing model by reverse engineering the target web application. It combines clustering and static analysis to identify meaningful page abstractions that are automatically turned into Java page objects for Selenium WebDriver. Our evaluation on an open-source web application shows that our approach is highly promising: Automatically generated page object methods cover most of the application functionalities and result in readable and meaningful code, which can be very useful to support the creation of more maintainable web test suites. © 2016, Springer Science+Business Media New York.","Clustering; End-to-end testing; Page object pattern; Reverse engineering; Selenium WebDriver; Web testing","Abstracting; Codes (symbols); Open source software; Open systems; Reverse engineering; Selenium; Static analysis; Websites; World Wide Web; Application under tests; Automatic Generation; Automatically generated; Business functions; Clustering; End to end; Object patterns; Web testing; Automatic test pattern generation","Springer New York LLC"
"Ming F., Zhou Z., Li Z.","The design and implement of the cross-platform mobile automated testing framework",2017,"Proceedings of 2016 5th International Conference on Computer Science and Network Technology, ICCSNT 2016",,,"8070144","182","185",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85039897561&doi=10.1109%2fICCSNT.2016.8070144&partnerID=40&md5=f3ce21e0a2f7ecfba2be96def8060db0","In order to improve the efficiency of software development and distribution, ensure the quality of application software, and improve the reusability of automated test scripts, based on Selenium WebDriver, combined with the current mainstream of continuous integration tool Jenkins, this paper designs and implements a cross platform Mobile Terminal Test Automation Framework. IOS and Android mobile terminal operating systems are supported by the framework. And the framework can automatically complete the entire progress of test case development, deployment, testing and log analysis. It not only reduces the threshold of testers, but also greatly improves the efficiency of development and testing, and lays a solid foundation for program sustainable development. © 2016 IEEE.","Android; cross platform; iOS; Jenkins; Selenium; Test Automation Framework","Android (operating system); Application programs; Automation; Computer networks; Computer software reusability; Computer terminals; Efficiency; Mobile phones; Mobile telecommunication systems; Reusability; Selenium; Software design; Android; Automated testing; Continuous integrations; Cross-platform; Design and implements; Development and testing; Jenkins; Test automation frameworks; Software testing","Institute of Electrical and Electronics Engineers Inc."
"Ramya P., Sindhura V., Sagar P.V.","Testing using selenium web driver",2017,"Proceedings of the 2017 2nd IEEE International Conference on Electrical, Computer and Communication Technologies, ICECCT 2017",,,"8117878","","",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85040590390&doi=10.1109%2fICECCT.2017.8117878&partnerID=40&md5=2b1110b7267330425f3af46d13ece0bb","Software testing is considered to be the most important step in Software Development Life Cycle. The main objective of the testing process is to compare the obtained results with those of expected by the end user of the software. Test Automation simplifies the work of tester by automating the execution of test scripts with the use of a special software. This paper focuses on the use of Selenium Webdriver to test a web application and to demonstrate the use of this tool in combination with other tools like the Maven, TestNG, etc., for more easier approach to testing and to improve the quality of testing process. © 2017 IEEE.","Maven; Selenium Web driver; TestNG","Computer software; Life cycle; Selenium; Software design; Software engineering; End users; Maven; Software development life cycle; Test Automation; Test scripts; Testing process; TestNG; WEB application; Software testing","Institute of Electrical and Electronics Engineers Inc."
"Du B., Chen H.Y., Xing D.Y.","Effects of foliar selenium fertilizer on agronomical traits and selenium, cadmium contents of different rape varieties",2018,"Communications in Computer and Information Science","874",,,"192","203",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85051127511&doi=10.1007%2f978-981-13-1651-7_17&partnerID=40&md5=c7a176687e4e22db948dc67ee19391e7","To elucidate the relationship between agronomic traits and Se/Cd contents of rapeseeds, we conducted randomized block tests with 6 varieties of rapeseed (30 g/hm2 foliar Se fertilizer). With the response relationship between agronomic traits and Se fertilizer of rapeseed as a template, the effects of foliar Se fertilization on the primary branch number, secondary branch number, rapeseed yield, rapeseed Se content, and grain Cd content were analyzed to find out the differences among cultivars in response to Se application. This study was aimed to actively promote the search for Se-sensitive rape, screen Se advantage in the future, and provide reference for rational and effective use of Se resources into rapeseed varieties. Least significant difference analysis of variance model was used to scrape out the average Se content of 518 seeds of Deye Oil 0.248 mg/kg, The potential for Se enrichment was strong, and it was expected to become a typical variety of Cd-tolerant rapeseeds. Seeds of Huayouza 9 made maximum use of exogenous Se under relatively low Se content (0.298 mg/kg). The soil Se content was lower for the main varieties of planted areas. The Cd accumulation of Huiyouzaoxian 6815 was weak and did not change much when the leaves were sprayed with 30 g/hm2 Se, which could be used as a favorable material for Se-rich and low-Cd production. © 2018, Springer Nature Singapore Pte Ltd.","Agronomical traits; Cadmium; Rape; Selenium","Agronomy; Cadmium; Fertilizers; Intelligent systems; Plants (botany); Selenium; Agronomic traits; Agronomical traits; Branch number; Cadmium content; Cd accumulation; Least significant differences; Planted areas; Rape; Oilseeds","Springer Verlag"
"Pinto V.H.S.C., Oliveira R.R., Vilela R.F., Souza S.R.S.","Evaluating the user acceptance testing for multi-tenant cloud applications",2018,"CLOSER 2018 - Proceedings of the 8th International Conference on Cloud Computing and Services Science","2018-January",,,"47","56",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85048869632&doi=10.5220%2f0006664000470056&partnerID=40&md5=105644bfb424ad4742d1cab47bcee2f7","SaaS (Software as a Service) is a service delivery model in which an application can be provided on demand via the Internet. Multi-tenant architecture is essential for SaaS because it enables multiple customers, so-called tenants, to share the system's resources in a transparent way to reduce costs and customize the software layer, resulting in variant applications. Despite the popularity of this model, there have been few cases of evaluation of software testing in cloud computing. Many researchers argue that traditional software testing may not be a suitable way of validating cloud applications owing to the high degree of customization, its dynamic environment and multi-tenancy. User Acceptance Testing (UAT) evaluates the external quality of a product and complements previous testing activities. The main focus of this paper is on investigating the ability of the parallel and automated UAT to detect faults with regard to the number of tenants. Thus, our aim is to evaluate to what extent the ability to detect faults varies if a different number of variant applications is executed. A case study was designed with a multi-tenant application called iCardapio and a testing framework created through Selenium and JUnit extensions. The results showed a significant difference in terms of detected faults when test scenarios with a single-tenant and multi-tenant were included. Copyright © 2018 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.","Cloud applications; Multi-tenancy; User acceptance testing","Application programs; Fault detection; Quality control; Software as a service (SaaS); Software testing; Cloud applications; Dynamic environments; Multi tenancies; Multi-tenant architectures; SaaS (software as a service); Service delivery; Testing framework; User acceptance testing; Acceptance tests","SciTePress"
"Hema Shankari K., Selvi R.T.","Methodology for regression testing with open source tool",2018,"International Journal of Engineering and Technology(UAE)","7","1.1",,"133","137",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85041565914&partnerID=40&md5=e97712a5f7072a02ba1b0e7c34452ec6","The paper describes our methodology for optimizing regression testing that forms a major part of software maintenance. It necessitates the use of an automated testing tool, and we have selected Selenium, an open source tool. For simple projects, a formula is proposed that has been derived through data mining with Selenium. A genetic algorithm is added to this methodology for industry based projects, where the test cases are so large that they have to be grouped as Test Suites; this algorithm reconfigures Test suites in each cycle of regression testing. Commonly used APFD metric ignores fault severity but is included in our formula; this severity is determi ned by professional testers. The use of ANN to amend severity without manual intervention enhances the genetic algorithm. Tables presented in the paper are from both simple and industry projects. Comparison is made with IBM'S RFT, a proprietary tool for automated tes ting. © 2018 Authors.","ANN; APFD metric; Genetic algorithm; Regression testing; Selenium tool",,"Science Publishing Corporation Inc"
"Debroy V., Brimble L., Yost M., Erry A.","Automating Web Application Testing from the Ground Up: Experiences and Lessons Learned in an Industrial Setting",2018,"Proceedings - 2018 IEEE 11th International Conference on Software Testing, Verification and Validation, ICST 2018",,,,"354","362",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85048453978&doi=10.1109%2fICST.2018.00042&partnerID=40&md5=ec31fbfde0ac7dd7dbeed5636d1bc145","Automating web application testing is a very tricky process due to inherent complexity, dynamic behavior(s) in web pages, differences in the way browsers render the same content (especially on different form factors), and so on. Yet manual testing is not a practical option, and such automation is a must in the interests of effectiveness and efficiency, because of the large number of browsers/devices that users can choose from, and also given the rapid software development cycles of today. This paper discusses our efforts at Varidesk to automate web tests against our main website-which offers many features and content, but is also a true eCommerce site where users from around the globe can purchase a very broad variety of active workspace solutions that we offer. Our solution was developed in-house, from the ground up, and leveraged and extended freely available automation and test libraries such as Selenium WebDriver and NUnit respectively. We talk about the challenges we faced and how we overcame them, as well as provide technical insights on real-world concerns such as managing test brittleness, and integrating the web tests into an existing Continuous Integration and Continuous Deployment (CI/CD) pipeline. Part of the novelty of this paper is that we are also transparent on the rationale behind our decision to build versus buy, and how we managed resources, especially in terms of cost. We also present lessons learned, and encouraged by the success that we have observed, hope that the results will be beneficial to academia and practitioners alike. © 2018 IEEE.","automation; industry experience; web application testing; web testing","Automation; Digital libraries; Fracture mechanics; Software design; Verification; Websites; Continuous integrations; Effectiveness and efficiencies; Industrial settings; Industry experience; Inherent complexity; Software development cycles; Web application testing; Web testing; Software testing","Institute of Electrical and Electronics Engineers Inc."
"Ramachandra N.P.K., Csallner C.","Poster: Testingweb-based applications with the voice controlled accessibility and testing tool (VCAT)",2018,"Proceedings - International Conference on Software Engineering",,,,"208","209",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85049679194&doi=10.1145%2f3183440.3195099&partnerID=40&md5=bbfb5afa422cb479ef341da874d8720b","Many web applications and software engineering tools such as test generators are not accessible for users who do not use traditional input devices such as mouse and keyboard. To address this shortcoming of current applications, this work leverages recent speech recognition advances to create a browser plugin that interprets voice inputs as web browser commands and as steps in a corresponding test case. In an initial experiment, the resulting Voice Controlled Accessibility and Testing tool (VCAT) prototype for Chrome and Selenium yielded a lower overall runtime than a traditional test creation approach. © 2018 Authors.","Accessible software engineering tool; Selenium; Voice control","Application programs; Selenium; Speech recognition; Input devices; Plug-ins; Software engineering tools; Test case; Testing tools; Voice control; Voice-controlled; WEB application; Software testing","IEEE Computer Society"
"Arcuri A.","Journal first presentation of an experience report on applying software testing academic results in industry: We need usable automated test generation",2018,"Proceedings - International Conference on Software Engineering",,,,"1065","",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85049395546&doi=10.1145%2f3180155.3182555&partnerID=40&md5=0ea22b06313dc6b9844a6955740d3c31","What is the impact of software engineering research on current practices in industry? In this paper, I report on my direct experience as a PhD/post-doc working in software engineering research projects, and then spending the following five years as an engineer in two different companies (the first one being the same I worked in collaboration with during my post-doc). Given a background in software engineering research, what cutting-edge techniques and tools from academia did I use in my daily work when developing and testing the systems of these companies? Regarding validation and verification (my main area of research), the answer is rather short: as far as I can tell, only FindBugs. In this paper, I report on why this was the case, and discuss all the challenging, complex open problems we face in industry and which somehow are ""neglected"" in the academic circles. In particular, I will first discuss what actual tools I could use in my daily work, such as JaCoCo and Selenium. Then, I will discuss the main open problems I faced, particularly related to environment simulators, unit and web testing. After that, popular topics in academia are presented, such as UML, regression and mutation testing. Their lack of impact on the type of projects I worked on in industry is then discussed. Finally, from this industrial experience, I provide my opinions about how this situation can be improved, in particular related to how academics are evaluated, and advocate for a greater involvement into open-source projects. © 2018 Author.","Applied research; Impact; Industry; Practice; Technology transfer","Cutting tools; Industry; Open source software; Software testing; Technology transfer; Applied research; Automated test generations; Environment simulators; Impact; Industrial experience; Open source projects; Practice; Validation and verification; Engineering research","IEEE Computer Society"
"Leotta M., Stocco A., Ricca F., Tonella P.","Pesto: Automated migration of DOM-based Web tests towards the visual approach",2018,"Software Testing Verification and Reliability","28","4","e1665","","",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85042766965&doi=10.1002%2fstvr.1665&partnerID=40&md5=6f2bc0f983f5cc92f92aa2ab94e88fc0","Test automation tools are widely adopted for testing complex Web applications. Three generations of tools exist: first, based on screen coordinates; second, based on DOM–based commands; and third, based on visual image recognition. In our previous work, we proposed Pesto, a tool able to migrate second-generation Selenium WebDriver test suites towards third-generation Sikuli ones. In this work, we extend Pesto to manage Web elements having (1) complex visual interactions and (2) multiple visual appearances. Pesto relies on aspect-oriented programming, computer vision, and code transformations. Our new improved tool has been evaluated on two Web test suites developed by an independent tester. Experimental results show that Pesto manages and transforms correctly test suites with Web elements having complex visual interactions and multistate elements. By using Pesto, the migration of existing DOM–based test suites to the visual approach requires a low manual effort, since our approach proved to be very accurate. Copyright © 2018 John Wiley & Sons, Ltd.","DOM-based testing; Selenium WebDriver; Sikuli; test automation; visual testing; Web testing","Aspect oriented programming; Automation; Cosine transforms; Image recognition; Code transformation; Multi-state elements; Sikuli; Test Automation; Test automation tool; Visual interaction; Visual testing; Web testing; Testing","John Wiley and Sons Ltd"
"Lee S.-J., Chen Y.-X., Ma S.-P., Lee W.-T.","Test Command Auto-Wait Mechanisms for Record and Playback-Style Web Application Testing",2018,"Proceedings - International Computer Software and Applications Conference","2",,"8377833","75","80",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85055470126&doi=10.1109%2fCOMPSAC.2018.10206&partnerID=40&md5=c397ab858cf7cd11ae45acbf4f214b09","Test case recording and playback technology, normally implemented as a test case recorder, has been widely applied in the industry. One of the key research topics is how to determine if a web page has entered a ready state before the recorder can perform the next test command? If a web element is incorrectly selected during playback, the related test command will fail to process. This research puts forward four kinds of automatic waiting mechanism for playing test commands. The experiment result shows that the waiting time can be determined dynamically and automatically, so that testers do not have to manually add waiting commands thereby reducing the time and error of artificial discrimination. The proposed mechanisms were implemented as parts of the SideeX open source web testing software and have been further adopted by the new Selenium IDE and Katalon Recorder. Currently, over 60,000 web testers around the world run the mechanisms. © 2018 IEEE.","Automated web application testing; Automatic-wait; Test case recording and playback","Application programs; Open source software; Open systems; Websites; Automatic-wait; Open sources; Record and playback; Research topics; Test case; Waiting-time; Web application testing; Web testing; Software testing","IEEE Computer Society"
"Gumus E., Kirci P.","Selection of spectral features for land cover type classification",2018,"Expert Systems with Applications","102",,,"27","35",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85042359704&doi=10.1016%2fj.eswa.2018.02.028&partnerID=40&md5=ded8fdf1808e573e2a834983c80e7373","Sophisticated sensors of satellites help researchers collect detailed maps of land surface in various image wavebands. These wavebands are processed to form spectral features identifying distinct land structures. However, depending on the structures subject to the research topic, only a portion of collected features might be sufficient for identification. Aim of this study is to present a scheme to pick most valuable spectral features derived from ASTER imagery in order to distinguish four types of tree ensembles: ‘Sugi’ (Japanese Cedar), ‘Hinoki’ (Japanese Cypress), ‘Mixed deciduous’ and ‘Others’. Forward selection, a type of wrapper techniques, was employed with four types of classifiers in several train/test splits. Final rank of each feature was determined by Condorcet ranking after application of each classifier. Results showed that among four classifiers, artificial neural networks helped the selection process choose the most valuable features and a high accuracy value of 90.42% (with a true skill statistics score of 91.26%) was obtained using only top-ten features. For feature sets in smaller sizes, support vector machines classifier also performed well and provided an accuracy of 80.33% (with a true skill statistics score of 81.84%) using only top-three features. With help of these findings, landscape data can be represented in smaller forms with spectral features having most discriminative power. This will help reduce processing time and storage needs of expert systems. © 2018 Elsevier Ltd","Condorcet ranking; Feature selection; Land cover classification; Satellite imagery; Spectral features","Digital storage; Expert systems; Feature extraction; Neural networks; Satellite imagery; Condorcet ranking; Discriminative power; Forward selection; Land cover classification; Land-cover types; Processing time; Research topics; Spectral feature; Classification (of information)","Elsevier Ltd"
"Butgereit L.","Fighting unemployment through java internships: Creating a path to software development through test automation",2018,"2018 IST-Africa Week Conference, IST-Africa 2018",,,"8417368","","",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85051238765&partnerID=40&md5=fb9f18718d9c8dabd4a43bb325aaa6e7","The unemployment rate in South Africa for first quarter 2017 was just under thirty percent. To help alleviate this problem, the South African Revenue Service offers certain tax incentives to companies which operate internships or in-service training to under-skilled individuals. At the same time of this high unemployment rate, there is a shortage of certain IT skills in the country including a shortage of Java programmers. This paper describes research in offering internships to people who hold some sort of documented proof of computer literacy such as the ICDL and training them to write test automation programs in Java. The internship creates a pathway from test automation to entry level Java programmer. This paper describes two iterations of the process and documents the training offered to the interns, the successes and the lessons learned. In the second iteration (and the final iteration described in this paper), interns learned Java programming by writing test program in Java using Sikulix (to test Java application), Selenium (to test websites) and Robotium (to test Android apps). The results are very positive. © 2018 IST-Africa Institute.","in-service training; internship; software development; test automation","Application programs; Automation; Employment; Graphical user interfaces; Population statistics; Software design; Software engineering; Software testing; Taxation; Computer literacy; In-service training; internship; Java applications; Java programmers; Java programming; Test Automation; Unemployment rates; Java programming language","Institute of Electrical and Electronics Engineers Inc."
"Arcuri A.","An experience report on applying software testing academic results in industry: we need usable automated test generation",2018,"Empirical Software Engineering","23","4",,"1959","1981",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85035083036&doi=10.1007%2fs10664-017-9570-9&partnerID=40&md5=5d46a94447f4ee006ee17b3325301419","What is the impact of software engineering research on current practices in industry? In this paper, I report on my direct experience as a PhD/post-doc working in software engineering research projects, and then spending the following five years as an engineer in two different companies (the first one being the same I worked in collaboration with during my post-doc). Given a background in software engineering research, what cutting-edge techniques and tools from academia did I use in my daily work when developing and testing the systems of these companies? Regarding validation and verification (my main area of research), the answer is rather short: as far as I can tell, only FindBugs. In this paper, I report on why this was the case, and discuss all the challenging, complex open problems we face in industry and which somehow are “neglected” in the academic circles. In particular, I will first discuss what actual tools I could use in my daily work, such as JaCoCo and Selenium. Then, I will discuss the main open problems I faced, particularly related to environment simulators, unit and web testing. After that, popular topics in academia are presented, such as UML, regression and mutation testing. Their lack of impact on the type of projects I worked on in industry is then discussed. Finally, from this industrial experience, I provide my opinions about how this situation can be improved, in particular related to how academics are evaluated, and advocate for a greater involvement into open-source projects. © 2017, Springer Science+Business Media, LLC.","Applied research; Impact; Industry; Practice; Technology transfer","Cutting tools; Engineering research; Industry; Open source software; Technology transfer; Applied research; Automated test generations; Environment simulators; Impact; Industrial experience; Open source projects; Practice; Validation and verification; Software testing","Springer New York LLC"
"Vasanthapriyan S.","A Study of Software Testing Practices in Sri Lankan Software Companies",2018,"Proceedings - 2018 IEEE 18th International Conference on Software Quality, Reliability, and Security Companion, QRS-C 2018",,,"8431994","339","344",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85052497779&doi=10.1109%2fQRS-C.2018.00066&partnerID=40&md5=005f87cd6797fdcbadaa4f92929c6cd0","Software testing is a knowledge intensive and a collaborative activity, which mainly depends on knowledge and experience of the software testers. This study presents using an empirical investigation carried out in Sri Lankan software companies about the current status of software testing practices. The study focused on mainly testing methodologies and techniques, automated tools, testing metrics, testing training and academic collaboration with software industry. As reported from this study, Agile methodology became very popular in software companies for software development. As an overall analysis, there was a great interest in using tools such as Selenium for testing activities. Findings of this study emphasized that while software testing practices were considered to be important, training, money and resources were inadequate to address an effective management of software testing knowledge in these three software companies. Findings also presented a compelling evidence of the soundness for the need of knowledge management practices to manage software testing knowledge, © 2018 IEEE.","Software testing; Software testing knowledge; Testing practices","C (programming language); Computer software selection and evaluation; Knowledge management; Software design; Software reliability; Agile Methodologies; Collaborative activities; Effective management; Empirical investigation; Knowledge and experience; Knowledge intensives; Knowledge management practices; Testing knowledge; Software testing","Institute of Electrical and Electronics Engineers Inc."
"Ayyildiz N.","Flexible and resource efficient FPGA-Based quad data rate memory interface design for high-speed data acquisition systems",2018,"Proceedings - 21st Euromicro Conference on Digital System Design, DSD 2018",,,"8491809","155","158",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85056464487&doi=10.1109%2fDSD.2018.00038&partnerID=40&md5=f0d2be25080fd9b3887410cd530f47e1","Data acquisition is the process of collecting digital data produced by various types of electronic devices, such as sensors, analog to digital converters (ADCs), communication interfaces and digital I/O modules. FPGAs are the most common data acquisition platform for implementation, as they provide a generic environment for different types of interfaces and supplementary logic elements for further processing. This paper presents a flexible and resource efficient data acquisition system implementation on FPGAs especially targeted for high bandwidth interfaces. The implementation details are based on a QDR (Quad Data Rate) Memory interface design, as QDR interface reveals the common characteristics of high speed data channels. Also QDR memories have a wide application area such as the network processor, baseband processor and other high performance parallel processing network and communication. Proposed interface is fully tested and verified on a custom board between XILINX XC7V980T-1 FPGA and CYPRESS CY7C2665KV18-450BZI QDRII+ memory. The methodology described for the QDR memory interface design can be directly utilized for data acquisition systems requiring similar high speed DDR interfaces, such as high speed ADCs and I/O demultiplexer chips. © 2018 IEEE.","Data acquisition; FPGA; IP core; QDR Memory; SERDES","Analog to digital conversion; Digital devices; Field programmable gate arrays (FPGA); Integrated circuit design; Intellectual property core; Systems analysis; Analog to digital converters; Communication interface; Data acquisition system; Generic environment; High speed data acquisition system; High-bandwidth interfaces; Parallel processing; SERDES; Data acquisition","Institute of Electrical and Electronics Engineers Inc."
"Garcia B., Gallego M., Santos C., Jimenez E., Leal K., Fernanez L.","Extending WebDriver: A cloud approach",2018,"Proceedings - 2018 International Conference on the Quality of Information and Communications Technology, QUATIC 2018",,,"8590182","143","146",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85061321044&doi=10.1109%2fQUATIC.2018.00029&partnerID=40&md5=b8b832a9180c764d6c6860464ca1f60f","Functional testing of web and mobile applications consists on impersonating a user through some kind of GUI automation technology, being Selenium the most popular solution nowadays. This piece of research progresses in this area by proposing an advanced User Impersonation as a Service (UIaaS) based on cloud technologies. The proposed approach can be seen as a layered service, in which the top tier is a platform called ElasTest, a Software as a Service (SaaS) testing tool aimed to ease end-to-end testing of different kind of applications. The capability to impersonate user provided by ElasTest is built on the top of a Platform as a Service (PaaS) implemented by extending the W3C WebDriver recommendation with advance features to assess web and mobile applications. Finally, an Infrastructure as a Service (IaaS) layer is used as ground technology. This infrastructure has been implemented by leveraging open source lightweight container technologies such as Docker and Kubernetes. © 2018 IEEE.","Infrastructure as a Service; Platform as a Service; Software as a Service; Software testing; WebDriver","Application programs; Mobile computing; Open source software; Platform as a Service (PaaS); Software as a service (SaaS); Software testing; Web services; Automation technology; Cloud technologies; End to end; Functional testing; Mobile applications; Open sources; Testing tools; WebDriver; Infrastructure as a service (IaaS)","Institute of Electrical and Electronics Engineers Inc."
"Paul N., Tommy R.","An Approach of Automated Testing on Web Based Platform Using Machine Learning and Selenium",2018,"Proceedings of the International Conference on Inventive Research in Computing Applications, ICIRCA 2018",,,"8597297","851","856",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85061509533&doi=10.1109%2fICIRCA.2018.8597297&partnerID=40&md5=aaaa73e3e74ab673dfa34a2da07a8387","Testing is performed to detect or discover the errors and defects of a system. In automated testing, what test cases tester shown only will tested. It will not test new link or new thing but here what we are trying anything is new it can understand from previous experience and try to apply experience to get new results. This approach can be achieved by a three-layer structure: Web scraper, Machine Learning (ML) and Selenium. Web page would be tested and it would be trained to a system from a human perceptive in such a way that the system able to understand what are the test cases that need to be followed for each and every element on the web page and system next time on wards will do sanity and smoke test based on those inputs intelligently going to those elements on the website. System learns what actions to be done for a particular web element like button. The outputs that are able to get it is even classified the kind of output, for example, is error page or is the page is not intended. This approach helps the larger business organization to align themselves more with a creative task in testing rather than doing the human repeated activity. © 2018 IEEE.","Automated Testing; Machine Learning; Selenium Web Driver; Test Case; Web Applications","Automation; E-learning; Learning systems; Machine learning; Selenium; Smoke; Testing; Automated testing; Business organizations; New results; Smoke test; Test case; Three-layer structures; WEB application; Web based platform; Websites","Institute of Electrical and Electronics Engineers Inc."
"Gerez A.H., Kamaraj K., Nofal R., Liu Y., Dezfouli B.","Energy and Processing Demand Analysis of TLS Protocol in Internet of Things Applications",2018,"IEEE Workshop on Signal Processing Systems, SiPS: Design and Implementation","2018-October",,"8598334","312","317",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85061363954&doi=10.1109%2fSiPS.2018.8598334&partnerID=40&md5=9222e48864d936ec93e93d1514f71798","Transport Layer Security (TLS) is the de-facto protocol for secure communication in Internet of Things (IoT) applications. However, the processing and energy demands of this protocol are two essential parameters that must be taken into account with respect to the resource-constraint nature of IoT devices. In this paper, we study the resource consumption of the TLS handshake using a testbed in which an IoT board (Cypress CYW43907) communicates with a Raspberry Pi server over an 802.11 wireless link. Although TLS supports a wide-array of encryption algorithms, we focus on the performance of TLS using three of the most popular and robust cipher suites. Our experiments show that ciphers using Elliptic Curve Diffie Hellman (ECDHE) key exchange are considerably more efficient than ciphers using Diffie Hellman (DHE). Furthermore, ECDSA signature verification consumes more time and energy than RSA signature verification given ECDHE key exchange. The studies of this paper help IoT designers choose an appropriate TLS cipher suite based on application demands, computational capabilities, and available energy resources. © 2018 IEEE.","Computation; Encryption; Key Exchange; Security; Wireless","Calculations; Cryptography; Energy resources; IEEE Standards; Internet protocols; Radio; Seebeck effect; Signal processing; Silicon compounds; Computational capability; Encryption algorithms; Internet of Things (IOT); Key exchange; Resource consumption; Security; Signature verification; Transport layer security; Internet of things","Institute of Electrical and Electronics Engineers Inc."
"Tanaka H.","X-Brot: Prototyping of compatibility testing tool for web application based on document analysis technology",2019,"2019 International Conference on Document Analysis and Recognition Workshops, ICDARW 2019","2019-January",,,"18","21",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85114887222&doi=10.1109%2fICDARW.2019.60126&partnerID=40&md5=09bccd67dbb14269808ab8b9d17c5910","Web application development requires visual compatibility testing (VCT), which verifies if a web page is normally displayed on different types of browsers. In common development procedures, VCT is carried out manually. To reduce cost, VCT automation is one of the most important issues in the field of software development. Although a web page is a kind of electronic document, there have not been many papers focusing on VCT issues in the document analysis and recognition (DAR) field. We have developed a prototype tool to support web application testing. The tool offers two tests: a functional compatibility test (FCT) and a VCT. The FCT examines whether the same action (such as click, browse, or text edit) on a web page causes a compatible action on each browser, and the VCT examines whether the same page displays a similar view on each browser. To detect visual incompatibilities, our tool first extracts the document object model (DOM) structure of a target web page by parsing HTML and obtaining properties of each DOM element from the browsers using the Selenium WebDriver tool [1]. The tool compares the relative position of the DOM elements on the web page and their contents. Our tool detects the differences in relative position of each DOM element and creates cliques of those whose relative positions are qualified as equal. The cliques show distortions in the document layout. Additionally, our tool identifies text images of each DOM element and compares the results between the browsers by looking for garbled characters. In fifteen URLs and four web browsers, we obtained 96% recall and 68% precision for text comparison, and 96% recall and 61% precision for detecting layout incompatibilities. A small pilot study shows that operation time of a web application testing task was reduced by almost 35% using our tool. This study indicates that our tool is effective in reducing the development cost of web applications. © 2019 IEEE.","Character recognition; Clique; DOM; HTML; Relative position; Selenium; Web browser; WebDriver","Cost reduction; Software design; Software prototyping; Websites; XML; Compatibility test; Development costs; Document analysis; Document object model; Electronic document; Relative positions; Web application development; Web application testing; Web browsers","Institute of Electrical and Electronics Engineers Inc."
"Kirinuki H., Tanno H., Natsukawa K.","Recommending correct locator for broken test scripts using various clues in web application",2019,"Computer Software","36","4",,"3","17",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85077326544&doi=10.11309%2fjssst.36.4_3&partnerID=40&md5=3e0a607e0bd4adf145b48f14ab531cf7","Test automation tools such as Selenium are commonly used for automating end-to-end tests, but when developers update the software, they often need to modify the test scripts accordingly. However, the costs of modifying these test scripts are a big obstacle to test automation because of the scripts' fragility. In particular, locators in test scripts are prone to change. Some prior methods tried to repair broken locators by using structural clues, but these approaches usually cannot handle radical changes to page layouts. In this paper, we propose a novel approach called COLOR (correct locator recommender) to support repairing broken locators in accordance with software updates. COLOR uses various properties as clues obtained from screens (i.e., attributes, texts, images, and positions). We examined which properties are reliable for recommending locators by examining changes between two release versions of software, and the reliability is adopted as the weight of a property. Our experimental results obtained from four open source web applications show that COLOR can present the correct locator in rst place with a 77%-93% accuracy and is more robust against page layout changes than structure-based approaches. © 2019 Japan Society for Software Science and Technology. All rights reserved.",,"Color; Open source software; Repair; Software reliability; Testing; End-to-end tests; Open sources; Page layouts; Software updates; Structure-based; Test Automation; Test automation tool; WEB application; Software testing","Japan Society for Software Science and Technology"
"Popov B., Koteska B., Mishev A.","Recent trends in software testing - A case study with google calendar",2019,"CEUR Workshop Proceedings","2508",,"11","","",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85076489065&partnerID=40&md5=dfb5b4492c5f8c8f362109f9df72d819","In this paper we make an overview of the software testing trends and as a case study we perform testing of the Google Calendar service. We present some of the latest testing techniques, frameworks and tools used for commercial software. Finally, we perform black-box automated testing of the Google Calendar component by applying several different testing technologies and frameworks. We use JUnit, Selenium and Mockito frameworks to create 22 tests to perform interface and functionality testing. Copyright © 2019 for this paper by its authors. Use permitted under Creative Commons License Attribution 4.0 International (CC BY 4.0).",,"Application programs; Computer software selection and evaluation; Quality control; Testing; Automated testing; Black boxes; Commercial software; Recent trends; Testing technique; Testing technology; Black-box testing","CEUR-WS"
"Huynh Q.-T., Tran D.-D., Nguyen D.-M., Ha N.-H., Bui T.-M.-A., Nguyen P.-L.","Generating test data for blackbox testing from UML-based web engineering content and presentation models",2019,"Lecture Notes of the Institute for Computer Sciences, Social-Informatics and Telecommunications Engineering, LNICST","293",,,"207","219",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85072900096&doi=10.1007%2f978-3-030-30149-1_17&partnerID=40&md5=d571336222e75af869534b7c947da258","Software testing is a process that produces and consumes huge amounts of data. Thus, the test data is usually either gathered manually by the testers or randomly generated by tools. The manual method consumes lot of time and highly depends on the testers’ experience while the random approach faces the problem of redundant test data caused by identical use cases. By leveraging the concept of Model-based testing, this paper provides a novel method of testing to save the cost of manual testing and to increase the reliability of the testing processes. In Model-based testing, test cases and test data can be derived from different models. In this paper, we present a technique to generate test data from UML-based Web Engineering (UWE) presentation model for web application testing by using formal specification and Z3 SMT solver. We also build a model-based testing Eclipse Plug-in tool called TESTGER-UWE that generates test data based on the model of UWE for the web application. We evaluate the proposed methods by applying them to generate test data for an Address Book project of UWE. Experimental results show that our proposed methods can reduce the time significantly when generating test data for automation test tools such as Selenium, Katalon, Unit test, etc. © 2019, ICST Institute for Computer Sciences, Social Informatics and Telecommunications Engineering.","Model-based testing; Test case generation; UML-based Web Engineering; Web application testing","Intelligent systems; Model checking; Testing; Automation tests; Model based testing; Presentation model; Redundant tests; Test case generation; Testing process; Web application testing; Web engineering; Black-box testing","Springer Verlag"
"Nguyen H.P., Le H.A., Truong N.T.","jFAT: An automation framework for web application testing",2019,"Lecture Notes of the Institute for Computer Sciences, Social-Informatics and Telecommunications Engineering, LNICST","266",,,"48","57",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85059686934&doi=10.1007%2f978-3-030-06152-4_5&partnerID=40&md5=6326cf6d30c0e277a4414b264bf7c1e5","Web technologies have developed rapidly because web application is currently leading the trends of software development. A web-based application is a program that is accessed over a network connection, rather than existing within a device’s memory, hence detecting its failures is different from other software systems. Many approaches and tools have been proposed for web testing, however, introducing new frameworks is still an emerging topic in this field. This paper proposes an automation framework running in Java platform for web testing, called jFAT, which integrates with Selenium and TestNG. The paper also illustrates the use of framework with the Bank application case study. © ICST Institute for Computer Sciences, Social Informatics and Telecommunications Engineering 2019.","Automation testing; POM; Web applications","Automation; Software design; User interfaces; Automation testing; Emerging topics; Network connection; Software systems; WEB application; Web application testing; Web technologies; Web-based applications; Application programs","Springer Verlag"
"Azam M., Atta-ur-Rahman, Sultan K., Dash S., Khan S.N., Khan M.A.A.","Automated testcase generation and prioritization using GA and FRBS",2019,"Communications in Computer and Information Science","955",,,"571","584",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85059031933&doi=10.1007%2f978-981-13-3140-4_52&partnerID=40&md5=faefc6a73261dfb3c0b4fce852cea73c","Software Quality Assurance (SQA) is a process in which the quality of software is assured by adequate software testing techniques that mainly comprise of verification and validation of the software. Software testing is the process of assessing the features of a software item and evaluating it to detect differences between given input and expected output. This process is done during the development process just prior to deployment. The SQA process is usually a manual process due to the diverse and versatile nature of the software products. That means a technique devised to test one type of software may not work that efficiently while testing another kind of software etc. Moreover, it is a time consuming process; according to a survey it consumes almost half of the total development cost and around two third of the total development time. To address the above-mentioned issues, in this research an intelligent toolkit for automated SQA is proposed and compared them with the existing famous tools like Selenium. This research focuses on automated test case/test data generation and prioritization of test cases. For this purpose, Genetic Algorithm is investigated for automatic test case generation and a fuzzy based system is proposed for test case prioritization. © Springer Nature Singapore Pte Ltd. 2019.","Automated testing; FRBS; GA; SQA; Testcase generation; Testcase prioritization","Automation; Computer software selection and evaluation; Gallium; Genetic algorithms; Quality assurance; Surveys; Verification; Automated test-case generations; Automated testing; Automatic test-case generations; FRBS; Prioritization; Software testing techniques; Test case generation; Verification-and-validation; Software testing","Springer Verlag"
"Sivaji U., Shraban A., Varalaxmi V., Ashok M., Laxmi L.","Optimizing regression test suite reduction",2019,"Advances in Intelligent Systems and Computing","815",,,"187","192",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85057139929&doi=10.1007%2f978-981-13-1580-0_18&partnerID=40&md5=8c2d8da043511d645aaaadb5b63837f5","Software reliability is one of the essential features in the system quality. The purpose of the regression testing is to establish quality of the modified software before the software deployment. The main issue in this regression model is how to select a subset of test cases from the large test suite in the modified software version. Conventional regression subset selection models have addressed this issue on a small set of test suites or limited test cases. In this paper, we have studied the background work of different hybrid regression models and its limitations on the standard test suite. For different software applications, the proposed methodology is applied to find various combinations of faults randomly injected into various combinations of code lines as specified. We use selenium builder to test the software applications and run it in junit eclipse IDE to find faults. The tested output is interpreted with java randomly induced faults, and the system of methodology is evaluated in terms of APFD and APFD box plot. © Springer Nature Singapore Pte Ltd. 2019.","API programming; Graph models; Regression models; Static suites; Test cases","Application programming interfaces (API); Application programs; Artificial intelligence; Regression analysis; Software reliability; Testing; Essential features; Graph model; Regression model; Regression testing; Software applications; Software deployment; Static suites; Test case; Software testing","Springer Verlag"
"Ho W.-G., Zheng Z., Chong K.-S., Gwee B.-H.","A Comparative Analysis of 65nm CMOS SRAM and Commercial SRAMs in Security Vulnerability Evaluation",2019,"International Conference on Digital Signal Processing, DSP","2018-November",,"8631874","","",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85062779235&doi=10.1109%2fICDSP.2018.8631874&partnerID=40&md5=1a9f8f910f88cb1ec50f337c7958aff7","We present a comparative analysis of a fabricated 65nm CMOS static random access memory (SRAM) chip and commercial SRAM chips in terms of security vulnerability. The security vulnerability is defined as the leakage of information due to the data imprinting effect of the SRAM. There are three main features in this evaluation. First, a complete security vulnerability evaluation flow is proposed to stress the SRAM chips for accelerating the negative-biased temperature-instability (NBTI) degradation, i.e. data imprinting effect, and hence to reveal the stored data of image. Second, the evaluation quantifies the percentage of revealed data, i.e. leakage of information for the comparison of tested SRAMs. Third, the image is reconstructed from the revealed data to illustrate the security vulnerabilities of tested SRAMs. We perform the security vulnerability evaluation on the 65nm CMOS SRAM chip and 4 commercial SRAM chips, namely Alliance, Lyontek, Cypress and AMIC under stressing of high voltage and high temperature. From the experimental results, the stored data is significantly revealed in the deep-submicron (≤90nm) CMOS SRAM chips, i.e. fabricated 65nm CMOS (16.1%), Alliance (16.2%) and Lyontek (21%). After reconstructing the images, they can be identified in the 65nm CMOS, Alliance, Lyontek SRAMs, but remain as random states in the Cypress and AMIC SRAMs. © 2018 IEEE.","Negative-Biased Temperature-Instability (NBTI) Image Analysis; Security Vulnerability; Static Random Access Memory (SRAM)","CMOS integrated circuits; Digital signal processing; Image reconstruction; Negative bias temperature instability; Biased temperature instabilities; Comparative analysis; Deep sub-micron; High temperature; Imprinting effects; Random state; Security vulnerabilities; Static random access memory; Static random access storage","Institute of Electrical and Electronics Engineers Inc."
"Narayana M., Raghu Ram Reddy N., Hyndavi Reddy N.","High speed script execution for GUI Automation using Computer Vision",2019,"International Journal of Electrical and Computer Engineering","9","1",,"231","236",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85072608440&doi=10.11591%2fijece.v9i1.pp231-236&partnerID=40&md5=e8712b9f479df1fd0e50b32e2b01016d","Software testing by using open source tool like Selenium windows applications cannot be automated, citrix based applications, flash websites and games. Computer vision based automation tools can be used to automate these kinds of applications. These automation tools works based on screenshots of GUI objects like button, radio button, text box, images, dropdowns etc. In this paper a prototype of automation tool has been developed which can execute the automation scripts much faster than existing tools like Sikuli, which takes much time to run the Automation scripts. The execution time can be reduced by using this proposed tool. Copyright © 2019 Institute of Advanced Engineering and Science.","Automation Computer vision GUI",,"Institute of Advanced Engineering and Science"
"Kirinuki H., Tanno H., Natsukawa K.","COLOR: Correct Locator Recommender for Broken Test Scripts using Various Clues in Web Application",2019,"SANER 2019 - Proceedings of the 2019 IEEE 26th International Conference on Software Analysis, Evolution, and Reengineering",,,"8667976","310","320",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85064182518&doi=10.1109%2fSANER.2019.8667976&partnerID=40&md5=5f450dfb8e5503f83ab7d7636affed8b","Test automation tools such as Selenium are commonly used for automating end-To-end tests, but when developers update the software, they often need to modify the test scripts accordingly. However, the costs of modifying these test scripts are a big obstacle to test automation because of the scripts' fragility. In particular, locators in test scripts are prone to change. Some prior methods tried to repair broken locators by using structural clues, but these approaches usually cannot handle radical changes to page layouts. In this paper, we propose a novel approach called COLOR (correct locator recommender) to support repairing broken locators in accordance with software updates. COLOR uses various properties as clues obtained from screens (i.e., attributes, texts, images, and positions). We examined which properties are reliable for recommending locators by examining changes between two release versions of software, and the reliability is adopted as the weight of a property. Our experimental results obtained from four open source web applications show that COLOR can present the correct locator in first place with a 77%-93% accuracy and is more robust against page layout changes than structure-based approaches. © 2019 IEEE.","locator; selenium; software test automation; test script","Automation; Color; Open source software; Reengineering; Repair; Selenium; Software reliability; Testing; End-to-end tests; locator; Software test automation; Software updates; Structure-based; Test Automation; Test automation tool; Test scripts; Software testing","Institute of Electrical and Electronics Engineers Inc."
"Chen Y.-C., Chiang M.-H., Cheng Y.-M., Lou S.-J.","Deep Learning of Web Page Verification Code-taking Project for Implementation of Remedial Instruction-Technology-Base Test Website as an Example",2019,"2019 IEEE International Conference on Consumer Electronics - Taiwan, ICCE-TW 2019",,,"8991900","","",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85080114015&doi=10.1109%2fICCE-TW46550.2019.8991900&partnerID=40&md5=aac330aa073dd3db9dc584257cb6c84d","This study using Python integrates tools such as Selenium, Pillow and WebDriver for Chrome, automatically logs in to the web page-Project for implementation of remedial instruction-technology-based test website to capture graphic verification code image, and uploads to Google Cloud Vision API which provide pre-trained models. The deep learning model recognizes the content and reads the text in the picture. The result is more than 80% recognition rate successfully login to the website. © 2019 IEEE.",,"Character recognition; Websites; Learning models; Technology-based; Deep learning","Institute of Electrical and Electronics Engineers Inc."
"Presler-Marshall K., Horton E., Heckman S., Stolee K.T.","Wait wait. No, tell me. Analyzing selenium configuration effects on test flakiness",2019,"Proceedings - 2019 IEEE/ACM 14th International Workshop on Automation of Software Test, AST 2019",,,"8821891","7","13",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85072896022&doi=10.1109%2fAST.2019.000-1&partnerID=40&md5=21938f499990a4d256497472c830ab57","Flaky tests are a source of frustration and uncertainty for developers. In an educational environment, flaky tests can create doubts related to software behavior and student grades, especially when the grades depend on tests passing. NC State University's junior-level software engineering course models industrial practice through team-based development and testing of new features on a large electronic health record (EHR) system, iTrust2. Students are expected to maintain and supplement an extensive suite of UI tests using Selenium WebDriver. Team builds are run on the course's continuous integration (CI) infrastructure. Students report, and we confirm, that tests that pass on one build will inexplicably fail on the next, impacting productivity and confidence in code quality and the CI system. The goal of this work is to find and fix the sources of flaky tests in iTrust2. We analyze configurations of Selenium using different underlying web browsers and timeout strategies (waits) for both test stability and runtime performance. We also consider underlying hardware and operating systems. Our results show that HtmlUnit with Thread waits provides the lowest number of test failures and best runtime on poor-performing hardware. When given more resources (e.g., more memory and a faster CPU), Google Chrome with Angular waits is less flaky and faster than HtmlUnit, especially if the browser instance is not restarted between tests. The outcomes of this research are a more stable and substantially faster teaching application and a recommendation on how to configure Selenium for applications similar to iTrust2 that run in a CI environment. © 2019 IEEE","Flaky Tests; GUI Tests; Selenium; Software Testing; WebDriver","Curricula; Selenium; Students; Web browsers; Continuous integrations; Development and testing; Educational environment; Electronic Health Record(EHR) System; Run-time performance; Software engineering course; Teaching applications; WebDriver; Software testing","Institute of Electrical and Electronics Engineers Inc."
"Lim W., Kim H., Lee J., Song O.","D-TAF: Test automation framework compatible with various DBMS",2019,"Proceedings - 2019 IEEE/ACM 14th International Workshop on Automation of Software Test, AST 2019",,,"8821971","62","68",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85072883471&doi=10.1109%2fAST.2019.00017&partnerID=40&md5=373aa7bd4db5c76fbcc93dc5f73da51d","To guarantee high quality, it is required to retest DBMS thoroughly whenever any changes occur such as operating system updates and configuration changes. Because retesting requires repetitive jobs, development companies start to consider test automation to improve productivity. Moreover, a special tool is also required because it is difficult to test manually some functions of DBMS. Although there are test automation tools such as MySQL Test Framework, Testgres and so on, these frameworks can only be used for particular DBMS. For an example, MySQL Test Framework can only be used for MySQL. Because DBMS testing is completely different from GUI based testing, it is impossible to use GUI based test automation tools such as Selenium when testing DBMS. For this reason, there are needs of the test automation framework for DBMS, which can be easily customizable so that it can be used for other DBMS. In this paper, we propose the framework for DBMS which will be actually used in DBMS development companies and can also be used for various kinds of DBMS. We propose our design and implementation approaches on the framework for DBMS. © 2019 IEEE","DBMS; Test automation framework; Testing tools","Automation; Database systems; Graphical user interfaces; Productivity; Testing; Customizable; Design and implementations; High quality; Test Automation; Test automation frameworks; Test automation tool; Test framework; Testing tools; Software testing","Institute of Electrical and Electronics Engineers Inc."
"Shariff S.M., Li H., Bezemer C.-P., Hassan A.E., Nguyen T.H.D., Flora P.","Improving the testing efficiency of SELENIUM-based load tests",2019,"Proceedings - 2019 IEEE/ACM 14th International Workshop on Automation of Software Test, AST 2019",,,"8821989","14","20",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85072882925&doi=10.1109%2fAST.2019.00008&partnerID=40&md5=cadfdda5b6426ff1230f28d7c668ee4e","Web applications must be load tested to analyze their behavior under various load conditions. Typically, these load tests are automated using protocol-level HTTP requests (e.g., using JMETER). However, there are several disadvantages to using protocol-level requests for load tests. For example, protocol-level requests are only partially representative of the true usage of a web application, as the web application is not actually executed in a browser. It can be difficult to abstract complex behavior, such as a login sequence, into requests without executing the application. Browser-based load testing can be used as an alternative to protocol-level requests. Using a browser-based testing framework, such as SELENIUM, tests can be executed more realistically - inside a browser. Unfortunately, because a browser instance must be started to conduct a test, browser-based testing has a high performance overhead which limits its applicability for load tests. In this paper, we propose an approach for reducing the performance overhead of running SELENIUM-based load tests. Our approach shares browser instances between test user instances, thereby reducing the performance overhead that is introduced by launching many browser instances during the execution of a test. Our experimental results show that our approach can significantly increase the number of user instances that can be tested on a test machine without overloading the load driver. Our approach and the experiences that we share in this paper can help software practitioners improve the efficiency of their own SELENIUM-based load tests. © 2019 IEEE",,"Automation; Cost reduction; Efficiency; HTTP; Hypertext systems; Selenium; Testing; Load condition; Protocol level; Software practitioners; Test machine; Testing efficiency; Testing framework; WEB application; Software testing","Institute of Electrical and Electronics Engineers Inc."
"Pradhan S., Ray M., Patnaik S.","Clustering of web application and testing of asynchronous communication",2019,"International Journal of Ambient Computing and Intelligence","10","3",,"33","59",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85073898118&doi=10.4018%2fIJACI.2019070103&partnerID=40&md5=9b18c6a3d21a09ba89bd4dad20459341","In model-based testing, testing is done using Input Output Transition System (IOTS) or Finite State Machine (FSM). In synchronous testing, it is easy to know the proper sequence of input output of the system under testing, whereas, in asynchronous communication, it is tough to trace the sequences of inputs and outputs. A web application is an example of asynchronous processing, in which input/ output queue management is a common issue for testing in asynchronous JavaScript and XML user interfaces. This article discusses asynchronous testing of web application by taking a Gmail account as a case study. In this article, the web application is partitioned into clusters by determining logical web pages that implement logical functions. The clusters of page objects are represented using finite state machines. From the FSMs, test scenarios are generated. The size of the test cases covering longer paths is decreased by making clusters of states. The authors conduct a queue analysis using a test architecture to investigate the behavior of the system under testing. Finally, the test cases are generated using the Selenium tool. Copyright © 2019, IGI Global. Copying or distributing in print or electronic forms without written permission of IGI Global is prohibited.","AJAX; Asynchronous Testing; FIFO; Input Output Transition System; Modelling Web Application; Non-FIFO Channel","Model checking; Websites; AJAX; FIFO; FIFO channels; Input-output transition systems; WEB application; User interfaces","IGI Global"
"You X., Wang Y.","Automatic Network Application System Based on Selenium",2019,"2019 IEEE 2nd International Conference on Computer and Communication Engineering Technology, CCET 2019",,,"8989411","149","153",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85080067202&doi=10.1109%2fCCET48361.2019.8989411&partnerID=40&md5=843df55eb5a37a3b656ea61e9d74f513","This paper adopts the principle and operation methods of the automated testing tool Selenium and designs a web system which can automatically fill in the application website for studying abroad. This system adopts the B/S structure. When the Excel file which contains the personal information is Uploaded to this system, the back-end will convert the Excel file into JSON format data. Then, uses Selenium to login the university's application website, and uses the positioning methods of the webpage elements provided by Selenium to put the data from JSON into the Corresponding web form, thus automatically completes the application. © 2019 IEEE.","Application for studying abroad; Flask; Selenium; Xpath","Websites; Automated testing tools; Automatic networks; B/S structure; Flask; Operation methods; Personal information; Positioning methods; Xpath; Selenium","Institute of Electrical and Electronics Engineers Inc."
"Mary Linda I., Anuradha C., Pothumani S.","Remarks on polygot applications",2019,"International Journal of Engineering and Advanced Technology","8","6 Special Issue 2",,"258","260",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85073758656&doi=10.35940%2fijeat.F1069.0886S219&partnerID=40&md5=b14e703e583868938528277fb82f4d71","Cloud Computing is one of the upcoming service. It has providing many services to users along with these services we introduced a new service called Testing as a Service (TAAS) it adds value to the services in Cloud. Generally, web application developers facing difficulties to test their own applications in local host. Because it necessary to check whether their application properly running in different environment it consumes more time and cost for requirements. In this paper We proposed an automatic testing in cloud in which the developers can test their own application in different environment using virtual computing machine in cloud in which selenium web driver can be used to drive the application in specified browser in specified environment. It is necessary for the user to store their test cases to test their application hence for users privacy we are providing client side encryption. Using BEEFISH. We are using a FLASK to create a web application for testing service. © 2019 BEIESP.","POLYGOT; Web application",,"Blue Eyes Intelligence Engineering and Sciences Publication"
"Monastyrskyi L., Boyko Y., Maksymchuk D.","Prototype of Local Positioning System",2019,"2019 11th International Scientific and Practical Conference on Electronics and Information Technologies, ELIT 2019 - Proceedings",,,"8892328","202","205",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85075640479&doi=10.1109%2fELIT.2019.8892328&partnerID=40&md5=338b1f70105b8ab17a06698f425527f1","A prototype of the system of local navigation, based on a simple mathematical model, was developed. The coordinates of an object are determined by solving a quadratic equation or fourth degree equation, which makes this approach very efficient. Input data for calculations are the time of receipt of the signal from the object to three or four reception stations. An object whose position we determine periodically emits an ultrasound signal. The system was built on the basis of the Cypress PSoC 4. Testing showed a high accuracy of the determination of the fixed object coordinates. The scope of the system after its improvement can be, in our opinion, the control of robotic systems. © 2019 IEEE.","positioning systems; PSoC; robotic systems","System-on-chip; Fixed-objects; Local navigation; Local positioning system; Positioning system; PSoC; Quadratic equations; Robotic systems; Ultrasound signal; Robotics","Institute of Electrical and Electronics Engineers Inc."
"Dobslaw F., Feldt R., Michaelsson D., Haar P., De Oliveira Neto F.G., Torkar R.","Estimating Return on Investment for GUI Test Automation Frameworks",2019,"Proceedings - International Symposium on Software Reliability Engineering, ISSRE","2019-October",,"8987515","271","282",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85081104829&doi=10.1109%2fISSRE.2019.00035&partnerID=40&md5=d49792599106085d24d11620aa7db97a","Automated graphical user interface (GUI) tests can reduce manual testing activities and increase test frequency. This motivates the conversion of manual test cases into automated GUI tests. However, it is not clear whether such automation is cost-effective given that GUI automation scripts add to the code base and demand maintenance as a system evolves. In this paper, we introduce a method for estimating maintenance cost and Return on Investment (ROI) for Automated GUI Testing (AGT). The method utilizes the existing source code change history and has the potential to be used for the evaluation of other testing or quality assurance automation technologies. We evaluate the method for a real-world, industrial software system and compare two fundamentally different AGT frameworks, namely Selenium and EyeAutomate, to estimate and compare their ROI. We also report on their defect-finding capabilities and usability. The quantitative data is complemented by interviews with employees at the company the study has been conducted at. The method was successfully applied, and estimated maintenance cost and ROI for both frameworks are reported. Overall, the study supports earlier results showing that implementation time is the leading cost for introducing AGT. The findings further suggest that, while EyeAutomate tests are significantly faster to implement, Selenium tests require more of a programming background but less maintenance. © 2019 IEEE.","EyeAutomate; Graphical User Interface; Selenium; Test Automation; Visual GUI Testing","Automation; Codes (symbols); Cost effectiveness; Cost estimating; Graphical user interfaces; Maintenance; Profitability; Quality control; Selenium; Testing; EyeAutomate; Graphical user interfaces (GUI); Industrial software; Quality assurance automation; Source code changes; Test Automation; Test automation frameworks; Visual gui testing; Software reliability","IEEE Computer Society"
"Peng J., Ma Y., Zhou F.-R., Wang S.-L., Zheng Z.-Z., Li J.","Web Crawler of Power Grid Based on Selenium",2019,"2019 16th International Computer Conference on Wavelet Active Media Technology and Information Processing, ICCWAMTIP 2019",,,"9067730","114","118",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85084297166&doi=10.1109%2fICCWAMTIP47768.2019.9067730&partnerID=40&md5=a22a68d9758bbfb8926faf31fab69805","Power grid companies have a massive amount of structured data that possesses potential appliance value. To protect information safety, power grid companies isolate their intranet from internet and require strong authentication to access databases. We developed a web crawler system to collect data from the intranet web pages, and utilize selenium, an automatic testing tool, to simulate human actions to avoid authentication. We proposed a depth-first search strategy to fulfill the need of topical data acquisition. The system provides a way to collect power data efficiently and it can help researchers and engineers build smart power grid. © 2019 IEEE.","Selenium; Smart grid; Web crawler","Authentication; Automatic testing; Data acquisition; Selenium; Web crawler; Websites; ACCESS database; Depth first search strategies; Human actions; Power grid company; Power grids; Protect information; Strong authentication; Structured data; Electric power transmission networks","Institute of Electrical and Electronics Engineers Inc."
"Florea R., Stray V.","The skills that employers look for in software testers",2019,"Software Quality Journal","27","4",,"1449","1479",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85072039961&doi=10.1007%2fs11219-019-09462-5&partnerID=40&md5=eeaafcecd6d41777bd07a1a1daa88288","Software testing is an integral part of software development that provides better-quality products and user experiences and helps build the reputation of software companies. Though software testers perform a role that requires specific tasks and skills, in-depth studies of software testers lag behind research studies of other roles within software development teams. In this paper, we aim to create a profile of testers by presenting an empirical analysis of the skills the industry currently needs. We analysed data from 400 job adverts in 33 countries. We mapped the skills on a taxonomy comprising test-related, technical, and domain-specific skills. In addition, we looked at the demand for educational attainment, relevant certifications, and previous experience requirements. Our findings show that employers are mostly interested in skills related to test planning and design, test automation, functional testing, performance testing, and progress reporting. One third of the job advertisers were interested in people with the skills to operate test execution tools. Selenium was the testing tool most in demand. The testers must have strong technical abilities, including programming skills in Java, C#, and SQL. Also, they must handle project management tasks such as estimation, risk management, and quality assurance. Employers do not emphasise domain-specific knowledge, which indicates that they consider testing skills portable across industries. One in seven job adverts asks for a software testing certification. Our study helps clarify the complexity of the testing job and outlines the capabilities one needs to fulfil a software tester’s responsibilities. © 2019, Springer Science+Business Media, LLC, part of Springer Nature.","Empirical software engineering; Human aspects of software engineering; Software industry needs; Software-testing skill requirements; Software-testing skills","Project management; Quality assurance; Risk management; Risk perception; Software design; Domain-specific knowledge; Educational attainments; Empirical Software Engineering; Human aspects; Performance testing; Skill requirements; Software development teams; Software industry; Software testing","Springer"
"Gonçalves B.L., Dos Santos E.C., Vilain P.","Software transparency acceptance criteria mapping for automated tests [Mapeamento de Critérios de Aceitação de Transparência de Software para Testes Automatizados]",2020,"23rd Iberoamerican Conference on Software Engineering, CIbSE 2020",,,,"","",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85096508674&partnerID=40&md5=5d5ca596720f2f99ea8e44c2bc615dcd","Quality requirements include software transparency, which defines how information should be presented and how the software should run and be developed. In order to ensure compliance with these requirements in the Brazilian Public Sector, the Law on Access to Information (LAI) was proposed, which establishes rules for the disclosure of information, demonstrating the need for transparency of processes and information in public organizations. In this context, we propose the creation of abstract acceptance test case templates in order to evaluate the fulfillment of requirements on public organizations' websites. To validate the work, automated tests were developed using Cucumber and Selenium tools. These tests were defined from the abstract templates and addressed sites that meet and do not meet the requirements being tested. The results show that the proposed templates can serve as acceptance tests to be used during the design of government websites. © CIbSE 2020.","Acceptance Tests; Non-Functional Requirements; Software Transparency; Test Case Templates","Software design; Software testing; Websites; Acceptance criteria; Automated test; Government websites; Public organizations; Public sector; Quality requirements; Acceptance tests","CIbSE - IberoAmerican Conference on Software Engineering Steering Committee"
"Ruge J., Classen J., Gringoli F., Hollick M.","Frankenstein: Advanced wireless fuzzing to exploit new bluetooth escalation targets",2020,"Proceedings of the 29th USENIX Security Symposium",,,,"19","36",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85091925124&partnerID=40&md5=8232e974a0e9bdac4d21249dbba72b6c","Wireless communication standards and implementations have a troubled history regarding security. Since most implementations and firmwares are closed-source, fuzzing remains one of the main methods to uncover Remote Code Execution (RCE) vulnerabilities in deployed systems. Generic over-the-air fuzzing suffers from several shortcomings, such as constrained speed, limited repeatability, and restricted ability to debug. In this paper, we present Frankenstein, a fuzzing framework based on advanced firmware emulation, which addresses these shortcomings. Frankenstein brings firmware dumps “back to life”, and provides fuzzed input to the chip's virtual modem. The speed-up of our new fuzzing method is sufficient to maintain interoperability with the attached operating system, hence triggering realistic full-stack behavior. We demonstrate the potential of Frankenstein by finding three zero-click vulnerabilities in the Broadcom and Cypress Bluetooth stack, which is used in most Apple devices, many Samsung smartphones, the Raspberry Pis, and many others. Given RCE on a Bluetooth chip, attackers may escalate their privileges beyond the chip's boundary. We uncover a Wi-Fi/Bluetooth coexistence issue that crashes multiple operating system kernels and a design flaw in the Bluetooth 5.2 specification that allows link key extraction from the host. Turning off Bluetooth will not fully disable the chip, making it hard to defend against RCE attacks. Moreover, when testing our chip-based vulnerabilities on those devices, we find BlueFrag, a chip-independent Android RCE. © 2020 by The USENIX Association. All Rights Reserved.",,"Bluetooth; Firmware; Bluetooth chip; Chip based; Closed source; Deployed systems; Multiple operating systems; Over the airs; Remote code; Wireless communication standards; Interoperability","USENIX Association"
"Nguyen D.P., Maag S.","Codeless web testing using selenium and machine learning",2020,"ICSOFT 2020 - Proceedings of the 15th International Conference on Software Technologies",,,,"51","60",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85091763126&partnerID=40&md5=c52b0f4e9c18c79c50e8d8b187168d25","Complexity of web systems lead to development processes always more tough to test. Testing phases are crucial in software and system engineering and are known to be very costly. While automated testing methods appear to take over the role of the human testers, the issues of reliability and the capability of the testing method still need to be solved. In our paper, we focus on the automation of functional tests of websites. A single web page may contain a huge set of important functionalities leading to the execution of critical web service operations. Besides, testing all of these functionalities implemented in a web page service is highly complex. Two current popular research areas for automation web-based testing are Codeless Functional Test Automation and Machine Learning/Artificial Intelligence (ML/AI) in test automation. We therefore define and implement a framework to figure out how to automate the web service product under test, the machine can detect or predict the change and adapt those changes to suitable generic test cases. In our work, we examine on Selenium and the benefits of using machine learning in automated web application testing. Copyright © 2020 by SCITEPRESS – Science and Technology Publications, Lda. All rights reserved.","Automation testing; Codeless testing; Machine learning; Selenium; SVM; Web testing","Automation; Cost engineering; Machine learning; Selenium; Testing; Web services; Websites; Automated testing; Development process; Functional test; Service products; Test Automation; Web application testing; Web service operations; Web-based testing; Software testing","SciTePress"
"Ivanova K., Kondratenko G., Sidenko I., Kondratenko Y.","Artificial intelligence in automated system for web-interfaces visual testing",2020,"CEUR Workshop Proceedings","2604",,,"1019","1031",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85085180679&partnerID=40&md5=97c800d6b45ff1b2639a569fed522d26","In this paper, the authors consider an artificial intelligence technique of providing visual testing, and also the developed system that is integrated into functional automated test suites. Thus carried out monitoring and analyzing of visual changes in the graphical interface of the application under test. A proposed tool is supposed to resolve the existing problems of the traditional snapshot visual testing. Graphical user interface (GUI) testing is a very important testing step for quality control of software applications. The GUI is the central node in the test application, from where all functions are accessed. Thus, it is difficult to thoroughly test programs through their graphical interface, especially because they are designed to work with humans, not machines. In addition, they are inherently non-static interfaces, prone to constant changes caused by functionality upgrades, improved usability, changing requirements or changed contexts. This complicates the development and maintenance of test cases without resorting to time-consuming and costly manual testing. A proposed automated system for web-interfaces visual testing uses computer vision technology as an artificial intelligence technique for visual comparison. A comparative analysis is carried out with the developed interface for testing (in particular, a web page) and the expected mockup with the location of visual elements on the page for example, an interface from the customer). When designing an automated system for web-interfaces visual testing, the programming languages Python, JavaScript, library TensorFlow, testing framework Cypress, and database MySQL were used. © 2020 for this paper by its authors.","AI algorithms; Artificial intelligence; Automated testing; Computer vision; Digital image; Graphical interface; Pixel comparator; Snapshot; Visual element; Visual testing","Application programs; Automation; Computational linguistics; Computer testing; Graphical user interfaces; Intelligent systems; Quality control; Software testing; Websites; Application under tests; Artificial intelligence techniques; Comparative analysis; Computer vision technology; Graphical interface; Graphical user interfaces (GUI); Software applications; Visual comparison; Visual languages","CEUR-WS"
"Rathi N., Srivathsav R., Chitlangia R., Pachghare V.K.","Automatic Selenium Code Generation for Testing",2020,"Advances in Intelligent Systems and Computing","1039",,,"194","200",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85075600138&doi=10.1007%2f978-3-030-30465-2_22&partnerID=40&md5=4626608a52d5d35fe22e1e9a340588a0","Developers and product teams are striving to push new features out to customers at a much faster rate and are now realizing the advantages of automation. With the advent of Agile development model, writing automate test codes is now becoming a part of the software development life cycle. Manual testing which is completely done by human hands is costly, time consuming and error prone. However, this transition from manual to automation testing is not so easy especially for the existing manual testers. It is becoming mandatory and very important for them to have programming as a skill. In this paper, we discuss about an application that automatically generates Selenium WebDriver code which can then be used for testing. We present the design, analysis, results and the benefits of using this application to automate test cases. Our application will not only remove programming as a skill for testers but also save time and money for organizations. We input the test case in the form of a simple CSV file in the application which then runs it against a rule-based template engine to produce the desired code. The results highlight the advantage of using this application over manually writing automation test codes. © Springer Nature Switzerland AG 2020.","Automation; Automation testing; Selenium; Software engineering; Software testing","Automatic programming; Automation; Control systems; Intelligent computing; Life cycle; Man machine systems; Selenium; Software design; Software engineering; Agile development; Automation testing; Automation tests; Code Generation; Faster rates; Manual testing; Software development life cycle; Template engines; Software testing","Springer"
"Cerioli M., Leotta M., Ricca F.","What 5 million job advertisements tell us about testing: A preliminary empirical investigation",2020,"Proceedings of the ACM Symposium on Applied Computing",,,,"1586","1594",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85083031112&doi=10.1145%2f3341105.3373961&partnerID=40&md5=bd6abed806ac4e28535504f66ead14ef","Software testing is a crucial part of business success to ensure final product quality. However, little concrete data exists on technical demands about it in the industry, mostly collected through personal opinion surveys on a restricted sample of professionals. In this paper, we used a different approach: we applied content analysis to a set of about five million job advertisements taken from a popular Web job-search engine. The analysis of job advertisements is more promising than surveys because the data are by far more numerous and distributed geographically. The content analysis results revealed four essential findings on the current practice of software testing: a) Companies search for about six times more Coders than Testers, b) Unit testing is the most required skill for Coders while Acceptance testing is the most popular for Testers, c) Automated testing dominates the job advertisement scene compared to Manual testing and, d) the most valuable testing tools and frameworks are Selenium, JUnit, and Cucumber for both Testers and Coders. We believe that these findings (and other related results from the content analysis study) will be useful for professionals, instructors, and researchers dealing with software testing. © 2020 ACM.","Content analysis; Industrial practice; Job advertisements; Software testing; Tools and frameworks","C (programming language); Search engines; Software quality; Software testing; Surveys; Acceptance testing; Automated testing; Business success; Content analysis; Current practices; Empirical investigation; Opinion surveys; Technical demands; Acceptance tests","Association for Computing Machinery"
"Saleem M.S.","Development of PLC based Communication Architecture for Battery Management System",2020,"IEEE Vehicular Technology Conference","2020-May",,"9128451","","",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85088293890&doi=10.1109%2fVTC2020-Spring48590.2020.9128451&partnerID=40&md5=30a84ddd4c0f031ba08901b7b274fb8f","Lithium-ion-based rechargeable batteries require a significant amount of maintenance in order to sustain their capacity over a long period. At present, almost all electric vehicles are using lithium ion batteries as a power source because of their high charge storage capacity. Every electric car is also equipped with a Battery Management System (BMS) to maintain the battery pack. This paper presents the experimental development of an internal communication architecture for BMS using power line communication. The objective is to design and develop a low cost, flexible and efficient BMS system with plug and play concept. At present, these systems are using a considerable amount of cables for managing a single cell of lithium ion based rechargeable battery packs. The use of power line as a platform for BMS communication will completely remove the burden of wire harness and will reduce the weight of the battery pack.The setup is developed using the Cypress PSOC 5lp processor because of its digital and analog capabilities. The concept was first implemented on two battery cells communicating over power line, later it has been successfully tested on four series connected battery cells. The measurement results shows that the methodology adopted to implement power line technique for BMS communication is appropriate and feasible, and has a potential to cover all requirements of the battery management system. © 2020 IEEE.","Battery Management System (BMS); Power Line Communication (PLC)","Automotive batteries; Battery Pack; Carrier transmission on power lines; Electric automobiles; Ions; Lithium-ion batteries; Springs (components); Battery cells; Communication architectures; Electric cars; Experimental development; Internal communications; Plug and play; Power line communications; Series-connected; Battery management systems","Institute of Electrical and Electronics Engineers Inc."
"Akpinar P., Aktas M.S., Keles A.B., Balaman Y., Guler Z.O., Kalipsiz O.","Web Application Testing with Model Based Testing Method: Case Study",2020,"2nd International Conference on Electrical, Communication and Computer Engineering, ICECCE 2020",,,"9179238","","",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85091947994&doi=10.1109%2fICECCE49384.2020.9179238&partnerID=40&md5=c3d4fb7e7c1eb8e011e87886c7028f8a","In this study, it was investigated that model based software tests have higher coverage rate and faster test process on the system tested than traditional software tests. Comparisons of these two methods were performed and reported on parameters of code line number, actual error detection rate, test run time parameters. In the model based test method, the tests were developed by using Selenium library with Graph Walker tool. In traditional tests, modular tests were preferred and JUnit and TestNG libraries were used. As a result of the comparisons with the specified parameters, it was concluded that the model based test reduces the burden of test formation as predicted and is fast and inclusive. © 2020 IEEE.","automation test; GraphWalker; JUnit; model based testing; TestNG; traditional testing","Model checking; Testing; Code line; Coverage rate; Model based testing; Model-based OPC; Model-based test; Run time parameters; Test process; Web application testing; Software testing","Institute of Electrical and Electronics Engineers Inc."
"Muttillo M., Muttillo V., Pomante L., Pantoli L.","A Low Cost and Flexible Power Line Communication Sensory System for Home Automation",2020,"2020 IEEE International Workshop on Metrology for Industry 4.0 and IoT, MetroInd 4.0 and IoT 2020 - Proceedings",,,"9138191","191","196",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85088867223&doi=10.1109%2fMetroInd4.0IoT48571.2020.9138191&partnerID=40&md5=13e22059b62d27e907fff36faa13583a","This work focuses on the definition of a home automation system based on power line communication. A low cost and non invasive system has been developed and tested with successful results. It is based on the Cypress CY8CPLC10, an integrated power line communication chip which embeds both a PHY modem and a network protocol stack. The information management and data generation processes are demanded to a microcontroller, in this first prototype, being implemented with a standard commercial board. Combining the use of a microcontroller with a power line modem and a dedicated software application it is possible to manage sensors and actuators in the neighbors through the power grid and without modifying the existing electrical and network systems. © 2020 IEEE.","Actuators; automation system; microcontroller; power line; sensors","Application programs; Automation; Carrier transmission on power lines; Costs; Electric power transmission networks; Industry 4.0; Information management; Microcontrollers; Modems; Network protocols; Data generation; Home automation; Home automation systems; Integrated power; Network protocol stack; Power line communications; Sensors and actuators; Software applications; Internet of things","Institute of Electrical and Electronics Engineers Inc."
"García B., Gallego M., Gortázar F., Munoz-Organero M.","A survey of the selenium ecosystem",2020,"Electronics (Switzerland)","9","7","1067","1","29",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85087417947&doi=10.3390%2felectronics9071067&partnerID=40&md5=720f5ba31695f643fc9cd939b8df449c","Selenium is often considered the de-facto standard framework for end-to-end web testing nowadays. It allows practitioners to drive web browsers (such as Chrome, Firefox, Edge, or Opera) in an automated fashion using different language bindings (such as Java, Python, or JavaScript, among others). The term ecosystem, referring to the open-source software domain, includes various components, tools, and other interrelated elements sharing the same technological background. This article presents a descriptive survey aimed to understand how the community uses Selenium and its ecosystem. This survey is structured in seven categories: Selenium foundations, test development, system under test, test infrastructure, other frameworks, community, and personal experience. In light of the current state of Selenium, we analyze future challenges and opportunities around it. © 2020 by the authors. Licensee MDPI, Basel, Switzerland.","Automated software testing; Selenium; Software ecosystems; Web",,"MDPI AG"
"Santos I., Filho J.C.C., Souza S.R.S.","A survey on the practices of mobile application testing",2020,"Proceedings - 2020 46th Latin American Computing Conference, CLEI 2020",,,"9458347","232","241",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85111737372&doi=10.1109%2fCLEI52000.2020.00034&partnerID=40&md5=2014d98004c0188d9ca1296ad86385e6","[Context:] Mobile devices have become increasingly popular, and mobile applications should guarantee a very high level of reliability and quality. Mobile application testing needs to consider several unique requirements that distinguish it from conventional software testing. [Objective:] Our study aims to establish an overview of the testing practices conducted in mobile companies, to identify weaknesses that can be improved to make the testing activity more effective. [Method:] The survey questions were carefully designed using the Goal/Question/Metric method to provide relevant information to the questions raised in our study. [Results and Conclusions:] Our study outlines that native applications are more common. The testing level more performed is the system test and the positions that perform testing levels and objectives are described. Practices related to testing technique selection in the context of mobile applications are highlighted. In the context of this study, Cucumber and Selenium are the testing tools most used to automate testing activity. Some mobile testing characteristics were outlined to understand how the testing in mobile applications run on different devices, how testers deal with the diversity of operating systems that are constantly updated and whether tests are unified to testing a mobile app that runs in different platforms. Furthermore, we report the main challenges faced by testers during the validation of the mobile app. © 2020 IEEE.","Mobile testing; Software quality; Software testing practices; Survey","Application programs; Mobile computing; Surveys; Testing; Mobile app; Mobile application testing; Mobile applications; Mobile testing; System test; Testing technique selection; Testing tools; Software testing","Institute of Electrical and Electronics Engineers Inc."
"Tanaka T., Niibori H., Shiyingxue L., Nomura S., Nakao T., Tsuda K.","Selenium based Testing Systems for Analytical Data Generation of Website User Behavior",2020,"Proceedings - 2020 IEEE 13th International Conference on Software Testing, Verification and Validation Workshops, ICSTW 2020",,,"9155736","216","221",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85091758259&doi=10.1109%2fICSTW50294.2020.00045&partnerID=40&md5=d9a34e8c2b89515b509d3b0299d3a0b2","In recent years, websites have automatically sorted out content suitable for individual users on the website by learning user behavior patterns using AI. Website developers develop a function to generate behavioral data for analysis. The behavior data for analysis records the operation history of all functions such as content expression and button press. However, many consumer websites have a problem of enormous amount of testing due to continuous and frequent development. In this study, we propose a method for efficiently performing browser tests using Selenium by managing the specifications of the behavior data generation function. © 2020 IEEE.","Data Management; Selenium; Test Automation","Behavioral research; Selenium; Verification; Websites; Analytical data; Behavioral data; Data generation; Operation history; Testing systems; User behavior patterns; User behaviors; Software testing","Institute of Electrical and Electronics Engineers Inc."
"Yalla M., Sunil A.","AI-driven conversational bot test automation using industry specific data cartridges",2020,"Proceedings - 2020 IEEE/ACM 1st International Conference on Automation of Software Test, AST 2020",,,,"105","107",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85093532027&doi=10.1145%2f3387903.3389306&partnerID=40&md5=3deb462a3420a3b33562995f7ce18b3e","The paper describes an in-house accelerator to generate alternate synonymous sentences and similar intent from sample utterances, the generated data can be applied as test input for conversational AI bots (either text or voice-based). Its NLP-driven sentence generator exposes a RESTful service, which can be consumed by automated testing tools/frameworks such as Katalon, Selenium, and so on. The paper presents building an accelerator to quickly teach and test adaptive conversational AI bots. The approach helps to analyze user inputs and extract intent, the bot developer should ensure a variety of possible utterances are coded. In the traditional manual approach, it is difficult to conceive every possible user utterance before deploying the bot and hence the bot has an early failure rate. This may diminish the usefulness of the bot and the users may stop using the same. Here we propose an AI-driven bot test automation approach using a patent-pending in-house accelerator referenced as LemmaCartridge (LC) in this paper. Testing tools or frameworks can consume LC's data cartridge API for testing the bot AUT and analyze the responses using automated tools/frameworks like Katalon, Selenium and so on until the bot demonstrates desired outcomes under the supervised train, test and adaptive repeatable testing methods yielding quality@speed for the single major goal of testing conversational AI bots. An example of a program used in experiment is described and the results obtained, especially train and test state machines, industry-specific data cartridges that enable to unearth errors in the AI bot under test, are presented. © 2020 Association for Computing Machinery.","Conversational AI Bot; NLP Automation; Test Data Generation","Automation; Botnet; Failure analysis; Projectiles; Selenium; Testing; Automated testing tools; Automated tools; Early failure; RESTful Services; State machine; Test Automation; Testing method; Testing tools; Software testing","Association for Computing Machinery"
"Halani K.R., Kavita, Saxena R.","Critical Analysis of Manual Versus Automation Testing",2021,"2021 International Conference on Computational Performance Evaluation, ComPE 2021",,,,"132","135",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85128984240&doi=10.1109%2fComPE53109.2021.9752388&partnerID=40&md5=2dfd16505bb87cb262aedb832ca02e10","Software testing examines the gap between system design and software requirements and determines whether the actual output matches the intended result. Software testing can be performed through Manual Testing or Automation Testing. Automation testing involves automated tools, such as Selenium, Webdriver, Appium, with minimal human interference. Manual Testing is done by testers without any tool involvement. In this paper authors have executed both the testing types on a website ""Impressioncart.com""to evaluate and compare the performance of both. It was evident that in most of the cases automation technique out performed manual technique but to say that manual testing should be removed is not justifiable. To test or validate any software application accurately tester need to execute both the techniques due to their advantages and disadvantages. Testing is not only limited to just finding the bug but has a wider scope and is required to be imposed in project from the beginning to retirement. © 2021 IEEE.","Automation Testing; Manual Testing; Selenium; Software Testing","Application programs; Automation; Selenium; Automated tools; Automation techniques; Automation testing; Critical analysis; Human interference; Manual techniques; Manual testing; Performance; Software requirements; Software testings; Software testing","Institute of Electrical and Electronics Engineers Inc."
"Lathwal A.","A Literature Review on Automation Testing Using Selenium+Sikuli",2021,"Research Anthology on Recent Trends, Tools, and Implications of Computer Programming","2",,,"602","606",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85128085850&doi=10.4018%2f978-1-6684-3694-3.ch030&partnerID=40&md5=5cd2f150274b08aaab2aa52cd5834993","Automation testing is a methodology that uses an application to implement the entire life cycle of the software in less time and provides efficiency and effectiveness to the testing software. In automation testing, the tester writes scripts and uses any suitable application software to test the software application. Automation is basically an automated process that is comprised of lots of manual activities. In other words, automation testing uses automation tools like Selenium, Sikuli, Appium, etc., to write test script and execute test cases, with no or minimal manual involvement required while executing an automated test suite. Usually, automation testers write test scripts and test cases using any of the automation tool and then groups test several cases. Here, we will discuss a neat case study explaining the automation testing using a hybrid test script. © 2022 by IGI Global. All rights reserved.",,,"IGI Global"
"Chen G., Chen G., Wu D., Liu Q., Zhang L., Fan X.","A Selenium-based Web Application Automation Test Framework",2021,"Proceedings of 2021 IEEE 2nd International Conference on Information Technology, Big Data and Artificial Intelligence, ICIBA 2021",,,,"257","261",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85126844422&doi=10.1109%2fICIBA52610.2021.9688190&partnerID=40&md5=893c1caf21cd2e2e838fb6379d3f81a4","The quality of Web applications is a matter of great concern to current developers, testers and users. Some existing automated testing methods for Web applications have the problems as low efficiency, cannot be deal with dynamically loaded applications, cannot cope with frequent testing requirements, and so on. This paper designs and implements a Selenium-based Web application automation testing framework to solve the needs of automated testing of complex dynamic Web pages. In the experiment, the proposed framework is evaluated from multiple perspectives such as stability, test efficiency, and comparison with other frameworks. The results show that this framework has high test efficiency and can stably and quickly support automated testing of Web applications. © 2021 IEEE.","automated test; Selenium; UML; Web application","Automation; Dynamic loads; Efficiency; Testing; Websites; 'current; Automated test; Automated testing; Automation tests; Test efficiency; Test framework; Testing method; UML; WEB application; Web applications; Selenium","Institute of Electrical and Electronics Engineers Inc."
"Majeed B., Toor S.K., Majeed K., Chaudhary M.N.A.","Comparative Study of Open Source Automation Testing Tools: Selenium, Katalon Studio Test Project",2021,"4th International Conference on Innovative Computing, ICIC 2021",,,,"","",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85126652705&doi=10.1109%2fICIC53490.2021.9693066&partnerID=40&md5=6a381209aeb094ebb6df4e1c8f82d240","Software testing is one of the critical phases in the software development life cycle (SDLC). In testing, we adjust the actual results according to the end user's expectation by removing the unexpected errors in the functional and nonfunctional requirements. Our primary purpose is to give a comparative study on open source tools and we choose to compare the most commonly used Selenium with new tools Katalon Studio (KS) and Test project (TP). This research evaluates three tools: Selenium, Katalon Studio Test Project on their test tool characteristics, record and playback efficiency, scripts reusability, ease to learn, cross-platform, data-driven testing, cost, test result report, cross-browser, and team collaboration. The main goal is to help developers and software quality assurance engineers (SQAE) to choose the right tool that reduces manual effort, increasing script usability, reduces cost, and working in team collaboration to give their best to ensure the quality of software. © 2021 IEEE.","Evaluation of open source automation tools; Katalon studio; Open source Automation testing tools; Selenium tool; Test project tool","Automation; Computer software selection and evaluation; Life cycle; Open source software; Open systems; Quality assurance; Reusability; Software design; Software testing; Studios; Testing; Automation testing; Automation tools; Evaluation of open source automation tool; Katalon studio; Open source automation testing tool; Open-source; Project tools; Selenia tool; Test project tool; Test projects; Testing tools; Selenium","Institute of Electrical and Electronics Engineers Inc."
"Sukhani K., Sawant S., Maniar S., Pawar R.","Automating the Bypass of Image-based CAPTCHA and Assessing Security",2021,"2021 12th International Conference on Computing Communication and Networking Technologies, ICCCNT 2021",,,,"","",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85126258809&doi=10.1109%2fICCCNT51525.2021.9580020&partnerID=40&md5=dea420a512178c62984785768313c241","CAPTCHA also known as Completely Automated Public Turing test to tell Computers and Humans Apart is implemented on many websites all round the world to control and limit the entry of bot users in order to tackle issues of unnecessarily generated network traffic resulting in Denial of Service (DoS). A lot of work has been done in breaking text-based CAPTCHA but there is very little research on bypassing an image CAPTCHA. The conventional method used for recognizing image CAPTCHA has been proven to give inefficient results and hence through our paper we have assessed the security of the image-based CAPTCHA by using more efficient techniques and identified the vulnerabilities in it. With the rise of Deep Learning and Computer Vision, we can now bypass image-based CAPTCHAs easily. There have been models developed to test the robustness of text-based CAPTCHA with satisfactory results but not much has been dwelled upon the image section. In this paper, we have built a Convolutional Neural Network (CNN) model to bypass the reCaptcha v2 and this is automated with the help of Selenium. The Selenium tool is used to extract the images and pass them to the Deep Learning model. The output generated from the model is used to crack the image CAPTCHA and eventually bypass it. The accuracy of the proposed multi-class CNN model came out to be 92.98 % and hence we were able to bypass the reCaptcha v2. This paper also suggests methods to enhance the security of reCaptcha v2. © 2021 IEEE.","Automation; CAPTCHA; Convolutional Neural Network; Deep Learning; Image Classification; reCaptcha v2; Security; Selenium","Automation; Convolution; Convolutional neural networks; Deep learning; Denial-of-service attack; Electronic mail filters; Network security; Selenium; CAPTCHAs; Convolutional neural network; Deep learning; Denial of Service; Image-based; Images classification; Network traffic; Neural network model; Recaptchum v2; Security; Image classification","Institute of Electrical and Electronics Engineers Inc."
"Yandrapally R., Mesbah A.","Mutation Analysis for Assessing End-to-End Web Tests",2021,"Proceedings - 2021 IEEE International Conference on Software Maintenance and Evolution, ICSME 2021",,,,"183","194",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85123343897&doi=10.1109%2fICSME52107.2021.00023&partnerID=40&md5=2f060eab26d172d4d305d6c5eab0af20","End-to-end UI testing plays a significant role in the regression testing of web apps, in order to validate end user functionality. Because of their importance, UI test suites are often created and maintained manually by employing browser automation tools such as selenium. However, currently, there exists no reliable method to ascertain the fault-finding capabilities for UI test suite of any given web app. Mutation testing, a well known fault-based testing technique for assessment of test suite adequacy, relies on generating mutants by making small changes to source code imitating programmer errors. However, mutation testing is difficult to employ for any given web app because of the heterogeneous nature of the multiple server-side and client-side components they can contain. In this work, we present MaewU, a mutation analysis framework for assessing web UI test suites, which is applicable to any web app as it mutates the dynamic DOM in the browser instead of the source code. We propose 16 mutation operators that mutate the behaviour and appearance of web elements to mimic the nine categories of web app faults found through an analysis of 250 bug reports. We evaluate our dynamic mutation analysis framework on six open source web apps. The results from our empirical evaluation demonstrate that MaewU is effective in assessing Web UI test suites in terms of adequacy and facilitates test suite quality improvements. © 2021 IEEE.","end-to-end testing; mutation testing; UI testing; web testing","Open source software; Quality control; Verification; Well testing; Analysis frameworks; End to end; End-to-end testing; Mutation analysis; Mutation testing; Regression testing; Source codes; UI testing; Web App; Web testing; Software testing","Institute of Electrical and Electronics Engineers Inc."
"Krishna V.V., Gopinath G.","Application by Using Tanh Activated Clustering and Classification Model (TACC) in Machine Learning",2021,"Webology","18","Special Issue 5",,"1137","1157",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85122421978&doi=10.14704%2fWEB%2fV18SI05%2fWEB18290&partnerID=40&md5=4a19b5f21dc7d3b3cc1438ff461006fb","Automatic functional tests are a long-standing issue in software development projects, and they are still carried out manually. The Selenium testing framework has gained popularity as an active community and standard environment for automated assessment of web applications. As a result, the trend setting of web services is evolving on a daily basis, and there is a need to improve automatic testing. The study involves to make the system to understand the experiences of previous test cases and apply new cases to predict the status of test case using Tanh activated Clustering and Classification model (TACC). The primary goal is to improve the model’s clustering and classification output. The outcomes show that the TACC model has increased performance and demonstrated that automated testing results can be predicted, which is cost effective and reduces manual effort to a greater extent. © 2021","Agile Methodology; Cloud Environment; Machine Learning; Software Testing; Web Application",,"Webology Center"
"Mattiello G.R., Endo A.T.","Model-based testing leveraged for automated web tests",2021,"Software Quality Journal",,,,"","",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85120068446&doi=10.1007%2fs11219-021-09575-w&partnerID=40&md5=b5694b47577ca52b73c2982a79f826eb","Agile methods and their practices have fostered the widespread presence of automated test cases. Such test cases have been successfully and extensively adopted to test different software levels, from unit tests (e.g., JUnit) to end-to-end Web Graphical User Interface (GUI) tests (e.g., Selenium Webdriver). While test execution is mostly automated by existing tools, test design remains a manual task. In the pursuit of a more automated test case generation approach, the use of models has been advocated by the model-based testing (MBT) technique. Current MBT approaches assume a top-down workflow in which testers design models, test cases are generated from models, and then scripts are written to automate test execution. Nevertheless, writing automated tests is nowadays a developer’s responsibility and testers face a scenario in which automated tests might be reused to produce new model-based tests. This paper aimed to improve the synergy between existing automated tests and MBT. To do so, we present an approach that infers a model from existing tests, a tester leverages this model to include new tests, and then test code is generated. We analyzed the proposed approach in the context of Web applications with system-level GUI tests that employ the Page Object pattern. For MBT, we adopted event-driven models augmented with parameters and test input data. We evaluated the approach’s applicability with a prototype tool called MoLeWe and an experimental study with nine open-source Web applications. The results provide some evidence that using MoLeWe may help to include new tests faster than manually coding them, while increasing the overall code coverage of the test suite. © 2021, The Author(s), under exclusive licence to Springer Science+Business Media, LLC, part of Springer Nature.","Automated tests; GUI tests; Model-based testing; Page objects; Test case generation","Automation; Graphical user interfaces; Open source software; Software testing; Testing; Agile methods; Automated test; Graphical user interfaces test; Model based testing; Page object; Test case; Test case generation; Test execution; WEB application; Web applications; Model checking","Springer"
"Krishna V.V., Gopinath G.","Test Automation of Web Application Login Page by Using Selenium Ide in a Web Browser",2021,"Webology","18","Special Issue",,"713","732",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85119516092&doi=10.14704%2fWEB%2fV18SI04%2fWEB18160&partnerID=40&md5=cf58724b008f8560434fbabfe1489e5a","Selenium stands as open-source program apparatus aimed at computerization testing. Here, selenium-IDE (Integrated Developments Environment) Testing is investigated, which could be a remarkably vital movement in Program Improvement Handle. It is to look at and alter source code. A high-quality computer program can well be achieved by producing Compelling Testing. This Paper handles a critical in addition to the crucial issue of Program Testing. Testing can well be executed both manually and automatically. This paper sets to do Mechanization Testing through ""Selenium"". Test cases (TC) are consequently recorded with this web testing tool whilst the analyzer is entering the information in a web application screen. © 2021","Manual Testing; Selenium IDE; Test Automation; Test Cases; Test Data",,"Webology Center"
"Nguyen P., Maag S.","A Machine Learning Based Methodology for Web Systems Codeless Testing with Selenium",2021,"Communications in Computer and Information Science","1447",,,"184","202",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85113472488&doi=10.1007%2f978-3-030-83007-6_9&partnerID=40&md5=29fe4230becc0f9af195c05748de6d96","Web system testing is a crucial software development cycle. However, though there are real needs for testing these complex systems, it often requires specific skills in testing and/or technical programming. Moreover, the lifecycles of web systems are today very dynamic. They are often modified, updated, integrating new data, links, widgets, etc. Therefore, the testing processes and scripts for these systems have to be modified as well which can be very costly in terms of time and resources. Based on that context, this paper aims at reducing these prerequisites and constraints for tester in proposing a codeless testing automation framework. Our approach is based on Selenium and a machine learning technique to propose generic testing scripts that can be automatically tuned to the tested use cases. Experiments are provided leading to relevant results demonstrating the success of our methodology. © 2021, Springer Nature Switzerland AG.","Automation testing; Codeless web testing; Machine learning; Selenium; SVM","Life cycle; Machine learning; Selenium; Software design; Turing machines; Websites; Well testing; Codeless; Machine learning techniques; Software development cycles; Testing automation; Testing process; Web system; Integration testing","Springer Science and Business Media Deutschland GmbH"
"Figueiredo R.E., Alves A.A., Monteiro V., Pinto J.G., Afonso J.L., Afonso J.A.","Development and Evaluation of Smart Home IoT Systems applied to HVAC Monitoring and Control",2021,"EAI Endorsed Transactions on Energy Web","8","34",,"1","9",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85112633210&doi=10.4108%2feai.19-11-2020.167205&partnerID=40&md5=7700e5fb62d80b357c58c44e346745f1","This work describes the development and evaluation of two smart home-based Internet of Things (IoT) systems applied to HVAC (Heating, Ventilation and Air Conditioning) monitoring and control, including parameters such as temperature, humidity, air quality, smoke detection, and human presence. These systems are based on a flexible hybrid wireless network architecture combining Bluetooth Low Energy (BLE) and IEEE 802.11/Wi-Fi, in order to adapt to the requirements of different types of sensor and actuator devices. The original implemented network is based on Cypress PSoC 4 BLE boards and HyperText Transfer Protocol (HTTP), whereas the new network uses ESP32 boards and includes Message Queue Telemetry Transport (MQTT), a lightweight messaging protocol suitable for IoT devices which provides additional quality of service (QoS) mechanisms to guarantee the delivery of messages. A smart temperature control system was implemented in the BLE/Wi-Fi gateway (Raspberry Pi) to keep the room temperature inside a user-defined range. An online database was also developed using the Amazon Web Services (AWS) cloud platform, allowing the users to access the HVAC data and control the system parameters, through the Internet, using a mobile app developed for Android devices. Experimental tests were performed to validate the functionalities and performance of the developed systems. The obtained results demonstrate that the new network provides lower delay values compared with the original implementation. © 2020 Ruben E. Figueiredo et al., licensed to EAI. This is an open access article distributed under the terms of the Creative Commons Attribution license, which permits unlimited use, distribution and reproduction in any medium so long as the original work is properly cited.","Bluetooth Low Energy; HVAC; Internet of Things; MQTT; Smart Home; Wi-Fi; Wireless Sensor Networks",,"European Alliance for Innovation"
"Sawant K., Tiwari R., Vyas S., Sharma P., Anand A., Soni S.","Implementation of selenium automation & report generation using selenium web driver & ATF",2021,"Proceedings of the 2021 1st International Conference on Advances in Electrical, Computing, Communications and Sustainable Technologies, ICAECT 2021",,,"9392455","","",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85109210978&doi=10.1109%2fICAECT49130.2021.9392455&partnerID=40&md5=21c0296baf20fca8e300be3c1932083d","Among the most specific & forthcoming domain for exploration is testing using automation tool. There is numerous software systems that has been implemented as the browser applications which are complex to test. Automation and various Automation tools reduce the human intervention and iterative process of testing various web applications. There are various tools for automation like Junit, Chakram, and Selenium for performing Automation Testing. The proposed solution usage the resource monitoring technique the defected cases are detected. The proposed testing is implemented and tested in jerkin testing environment. In order to debugging the testing performance using two different testing scenarios the performance is compared. And the comparative performance study is performed in terms of debug ratio, throughput, and fail test cases ratio and memory consumption. The obtained results demonstrate the effective performance with respect to the traditional testing algorithm. © 2021 IEEE","Automation based testing; Automation testing report; J-unit; Selenium based web driver; Test Suit; Web-driver","Application programs; Automation; Iterative methods; Selenium; Automation testing; Comparative performance; Effective performance; Human intervention; Memory consumption; Resource monitoring; Testing environment; Testing performance; Software testing","Institute of Electrical and Electronics Engineers Inc."
"Prasad L., Yadav R., Vore N.","A Systematic Literature Review of Automated Software Testing Tool",2021,"Lecture Notes in Networks and Systems","167",,,"101","123",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85103512120&doi=10.1007%2f978-981-15-9712-1_10&partnerID=40&md5=8b5f69bf6a8d4ee50584fe6f9ed6e509","Automated software testing has proven its value for software development increasingly over the past few years. Software testing is an important phase in the entire software development process. There are various automated software testing tools are available today, which are used for testing various software applications whether it is desktop-based, mobile application, or a Web-based application. Evaluating a software testing tool is rather a subjective task, depending on the evaluator’s opinions rather than based on the objective approach. For this purpose, we have studied research papers, articles, journals, books, conference papers, few Web sites, etc., related with the study of software testing tools based on which we performed a survey of various automated software testing tools, i.e., Selenium, Watir, QTP, TestComplete, WinRunner, LoadRunner, SilkTest, Apache Jmeter, Wapt, Tellurium, Web Load, NeoLoad, LoadUI, Appvance, rational performance tester, SahiPro, Telerik Test Studio, Ranorex, Storm, Soap UI, TestNG, FitNese, Xebium, etc. The purpose of this research work is to summarize the existing literature and to establish an overview of the existing automated software testing tool to benefit the practice of users and for future research. We are attempting to provide detailed insight into automated software testing tools which can help the tester to choose the tool most suited to test his/her application. © 2021, The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd.","Automated; Selenium; Software development; Software testing; Testing tool; Web-based application",,"Springer Science and Business Media Deutschland GmbH"
"Nguyen V., To T., Diep G.-H.","Generating and selecting resilient and maintainable locators for Web automated testing",2021,"Software Testing Verification and Reliability",,,,"","",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85100047951&doi=10.1002%2fstvr.1760&partnerID=40&md5=536cebae36eec2cfbf7ef35cdb8c47cc","Web user interface (UI) test automation strategies have been dominated by programmable and record–playback approaches. Of these, record–playback allows creating automation tests easily and reduces the cost of test generation. However, this approach increases the cost of test maintenance due to its unstable generated locators for identifying UI objects during playback. In this paper, we propose a new approach to generating and selecting resilient and maintainable locators. Our approach consists of two parts, a new XPath construction method and selecting the best XPath to locate the target element. Our XPath construction method relies on semantic structures of Web pages to locate the target element using its neighbors. We conducted an experiment on 15 popular websites. The results show that our approach outperforms the state-of-the-practice/art Selenium IDE and Robula+ in locating target elements by effectively avoiding wrong locators. It also produces more readable XPaths (hence more maintainable tests) than do these approaches. © 2021 John Wiley & Sons, Ltd.","automated testing; web locators; web UI test automation; XPath","Automation; Semantics; User interfaces; Websites; Automated testing; Automation tests; Construction method; New approaches; Semantic structures; State of the practice; Test Automation; Web user interface; Testing","John Wiley and Sons Ltd"
"Rashid M.I., Ferdaus F., Bahar Talukder B.M.S., Henny P., Beal A.N., Rahman M.T.","True Random Number Generation Using Latency Variations of FRAM",2021,"IEEE Transactions on Very Large Scale Integration (VLSI) Systems","29","1","9194084","14","23",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85090955825&doi=10.1109%2fTVLSI.2020.3018998&partnerID=40&md5=df7dc50b4f87964fb5c8f4f357431d4e","True random number generation (TRNG) plays an important role in security applications and protocols. In this article, we propose an effective technique to generate a robust true random number using emerging, energy-efficient, nonvolatile, consumer-off-the-shelf (COTS) ferroelectric random access memory (FRAM) chips. In the proposed method, we extract inherent randomness from internal ferroelectric capacitors by exploiting latency variation across cells within FRAM. Hardware results and subsequent National Institute of Standards and Technology (NIST) statistical test suite (STS) testing indicate that the proposed latency-based TRNG is robust over a wide range of operating conditions at speeds of 6.23 Mb/s using COTS, silicon FRAM chips from Cypress Semiconductor Corporation. © 1993-2012 IEEE.","Ferroelectric random access memory (FRAM); memory-based TRNG; true random number generation (TRNG)","Commercial off-the-shelf; Energy efficiency; Ferroelectric devices; Ferroelectric RAM; Ferroelectricity; Cypress semiconductors; Energy efficient; Ferroelectric capacitors; Ferroelectric random access memory; Latency variations; National Institute of Standards and Technology; Operating condition; Security application; Random number generation","Institute of Electrical and Electronics Engineers Inc."
"Barylo H., Boyko O., Helzhynskyy I., Holyaka R., Marusenkova T., Ivakh M.","Universal hardware and software system of signal converting for integrated sensor devices implementation",2021,"2021 IEEE 16th International Conference on the Experience of Designing and Application of CAD Systems, CADSM 2021 - Proceedings",,,"9385254","58","62",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85104522293&doi=10.1109%2fCADSM52681.2021.9385254&partnerID=40&md5=8679b95f1ae7112561a5a2529a521c56","The work is devoted to the issues of implementation the signal converters of integrated sensors in data fusion concepts. The problem of developing a universal signal converter for the construction of integrated sensors is solved. The basic requirements for such a converter are wide functionality which combines different methods of measuring conversion and compliance with current trends of microelectronic sensor development. Considering the requirements of modern microcircuit technique, in particular for sensory devices of the Internet of Things, the signal path of the synthesized sensors is implemented based on PSoC of 5LP Family Cypress. The testing of the developed system was carried out in the implementation process of integrated sensors for impedance spectroscopy. © 2021 IEEE.","Data fusion; Programmable system; Sensor; Signal converter","Data fusion; Microelectronics; System-on-chip; Fusion concept; Hardware and software; Impedance spectroscopy; Implementation process; Integrated sensors; Microelectronic sensor; Signal converters; Signal paths; Computer aided design","Institute of Electrical and Electronics Engineers Inc."
"Chuchuen Y., Rattanaopas K.","Implementation of Container Based Parallel System for Automation Software Testing",2021,"2021 Joint 6th International Conference on Digital Arts, Media and Technology with 4th ECTI Northern Section Conference on Electrical, Electronics, Computer and Telecommunication Engineering, ECTI DAMT and NCON 2021",,,"9425738","193","196",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85106581981&doi=10.1109%2fECTIDAMTNCON51128.2021.9425738&partnerID=40&md5=b516e9249670f41129cfcc97bb73688c","Software quality assurance (QA) is the most important parts of the software development life cycle. Currently, software testing is widely used for automation testing. Two of the popular tools are robot framework and selenium2. Furthermore, software testing has major methods based on Black-box (or functional) testing and White-box (or structural) testing. In order to decrease execution time and improve resource management, the parallel paradigm can be a key concept. Thus, to create the parallel paradigm, we propose the use of selenium-robot-framework Docker container with the parallelization agent the results show that the 4 workers case of parallelization not only decreased to one-Third of the execution time of 1 worker case but also used all physical CPU cores quite similar around 50%. Furthermore, we show how the parallel paradigm using containers and the software automation testing tool beneficial to the significance of resource management. © 2021 IEEE.","Docker; Parallel computational; Robot framework; Selenium","Arts computing; Automation; Computer software selection and evaluation; Containers; End effectors; Life cycle; Natural resources management; Quality assurance; Resource allocation; Software design; Software quality; Automation software; Automation testing; Black boxes; Parallel system; Parallelizations; Resource management; Software automation; Software development life cycle; Black-box testing","Institute of Electrical and Electronics Engineers Inc."
"Olianas D., Leotta M., Ricca F., Biagiola M., Tonella P.","STILE: A Tool for Parallel Execution of E2E Web Test Scripts",2021,"Proceedings - 2021 IEEE 14th International Conference on Software Testing, Verification and Validation, ICST 2021",,,"9438563","460","465",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85107918592&doi=10.1109%2fICST49551.2021.00060&partnerID=40&md5=66111794f2669bd461ebd8d5239522e2","Automated end-to-end (E2E) Web testing relying on frameworks such as Selenium Web Driver is commonly used to assess the quality of web applications. However, the resulting test scripts may require long execution times, due to their interaction with the browser GUI and backend services. To avoid repeated and costly setup of the Web application state, testers tend to build test suites whose test scripts depend on each other (i.e., one test case sets up the application state expected by another test case). In this paper we present Stile, a tool for the parallel execution of Web test scripts that ensures the compliance of all execution schedules with the dependencies among the involved test scripts, while at the same time minimizing the execution time and the computation time required for such parallel execution. Experimental results show that execution times can be approximately halved thanks to Stile. © 2021 IEEE.","Dependency graph; Docker; End-to-End Testing; Parallel Testing; Selenium; Web Testing","Testing; Verification; Computation time; End to end; Parallel executions; Test case; Test scripts; WEB application; Web testing; Software testing","Institute of Electrical and Electronics Engineers Inc."
"Pelivani E., Cico B.","A comparative study of automation testing tools for web applications",2021,"2021 10th Mediterranean Conference on Embedded Computing, MECO 2021",,,"9460242","","",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85114198681&doi=10.1109%2fMECO52532.2021.9460242&partnerID=40&md5=a09e27dd55ee46d287a4d9384827bd17","In today's world, websites and web applications have become a necessity for all kinds of businesses and commercial enterprises. Software development is an important step of designing the software, ensuring that the designed software fulfills its practical needs and that it is free of bugs and errors. Software testing plays an important role in the software development life cycle because it contributes to the overall quality of the product. This guarantees the consistency and standard of the applications. It is important to be mindful of time and costs when evaluating a program. Therefore most testers have moved from a manual testing to automated testing to reduce time and cost. Then selecting a software-testing tool for automated testing that best fit a project is important yet a challenging task. The aim of this paper is evaluation and comparison of automation testing tools used for web application testing. In this paper will be analyzed and compared different features of two testing tools: The Katalon Studio and Selenium. © 2021 IEEE.","automation; framework; Katalon; manual; test cases; testing; tool","Automation; Life cycle; Program debugging; Software design; Automated testing; Automation testing; Commercial enterprise; Comparative studies; Overall quality; Software development life cycle; WEB application; Web application testing; Software testing","Institute of Electrical and Electronics Engineers Inc."
"Fetaji B., Fetaji M., Ebibi M., Ali M.","Devising an Optimisation Testing Methodology and Its Analyses",2021,"Proceedings - 2021 International Conference on Computing, Electronics and Communications Engineering, iCCECE 2021",,,,"77","81",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85116046945&doi=10.1109%2fiCCECE52344.2021.9534854&partnerID=40&md5=fe612847cbf39a9a555642baf1b3b7e5","The research study focus is in investigating different case studies and then proposing an improvement for optimisation of a testing methodology. The study investigates, analyses and provides an overview of different testing tools. Based on the ""TestBench""testing tool, it has shown positive performance gain in the optimisation process. It offers both manual testing and automatic testing. Selenium, another tool used for automatic testing was also investigated. To choose the right tool for automated testing, it is very important and crucial for the proper and appropriate testing process. The research study contributes by presenting a case study analyses of the tools and scrutiny of the performance through a detailed investigation of the correctness of testing using these tools. A regression analysis was made in order to test the validity of the factors included in the case study, as well as its efficiency. © 2021 IEEE.","quality assurance; regression analysis; TestBench; testing methodology; testing process","Automatic testing; Quality control; Regression analysis; Automated testing; Case-studies; Manual testing; Optimisations; Performance Gain; Research studies; Test-bench; Testing methodology; Testing process; Testing tools; Quality assurance","Institute of Electrical and Electronics Engineers Inc."
[No author name available],"A-TEST 2021 - Proceedings of the 12th International Workshop on Automating TEST Case Design, Selection, and Evaluation, co-located with ESEC/FSE 2021",2021,"A-TEST 2021 - Proceedings of the 12th International Workshop on Automating TEST Case Design, Selection, and Evaluation, co-located with ESEC/FSE 2021",,,,"","",50,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85113894867&partnerID=40&md5=c46c74b178e2f4caec99b512e5eaedd6","The proceedings contain 5 papers. The topics discussed include: using an agent-based approach for robust automated testing of computer games; towards automated generation of po-based webdriver test suites from selenium ide recordings; automated translation of android context-dependent gestures to visual GUI test instructions; integrating usage monitoring for continuous evaluation and testing in the UI of an industry application; and towards a workflow for model-based testing of embedded systems.",,,"Association for Computing Machinery, Inc"
"Ricca F., Leotta M.","Towards automated generation of PO-based WebDriver test suites from Selenium IDE recordings",2021,"A-TEST 2021 - Proceedings of the 12th International Workshop on Automating TEST Case Design, Selection, and Evaluation, co-located with ESEC/FSE 2021",,,,"9","16",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85113852593&doi=10.1145%2f3472672.3473953&partnerID=40&md5=7230977a821b8267eaf1c8e632c60e07","Modern web applications require long quality assurance sessions to be appreciated by users. Test automation reduces delivery times but requires the development of effective and maintainable test scripts so that the advantages of its use are not lost. The usage of the Page object (PO) pattern has proven to be very effective in GUI testing, however, the manual development of Page objects, a sort of web page facade exposing methods to the test scripts, requires a relevant effort, which is often only repaid during evolution. In this paper, we describe a novel approach, almost totally automated, that takes advantage of the features offered by Selenium IDE for generating more maintainable Selenium WebDriver test scripts and Page objects for web applications. The only manual step required to the tester/developer is to add comments to the Selenese produced by Selenium IDE during registrations through a plugin. The very first estimate we conducted to evaluate our tool-based approach appears to be promising. © 2021 ACM.","Automated generation; Page Objects; Selenium IDE and WebDriver; Test Automation","Automation; Integrodifferential equations; Quality assurance; Selenium; Software testing; Websites; Automated generation; Delivery time; GUI testing; Plug-ins; Test Automation; Test scripts; WEB application; Automatic test pattern generation","Association for Computing Machinery, Inc"
"Matsuoka S., Ichikawa S., Fujieda N.","A true random number generator that utilizes thermal noise in a programmable system-on-chip (PSoC)",2021,"International Journal of Circuit Theory and Applications","49","10",,"3354","3367",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85105241732&doi=10.1002%2fcta.3046&partnerID=40&md5=27a9997546ae9d6cc6c7276b46266898","This study presents four designs for a true random number generator (TRNG) for Cypress programmable system-on-chip (SoC) (PSoC) devices, whose entropy source is the thermal noise of resistors. The first design includes a ΔΣ analog-to-digital converter (ADC) with two external resistors of 6 MΩ, where the resolution was set to 16 bits. The second, third, and fourth designs adopt the internal resistors of a programmable gain amplifier (PGA) as a noise source. The second design adopts a single-stage PGA (gain 50) with a ΔΣ ADC, while the third design adopts a two-stage PGA (gain 50 × 50) with a ΔΣ ADC. The fourth design adopts a trans-impedance amplifier (TIA) with a ΔΣ ADC. All four designs have passed the National Institute of Standards and Technology (NIST) test suite. © 2021 John Wiley & Sons, Ltd.","PSoC; thermal noise; TRNG","Analog to digital conversion; Application specific integrated circuits; Number theory; Programmable logic controllers; Programmed control systems; Random number generation; Resistors; System-on-chip; Thermal noise; Analog to digital converters; Entropy sources; External resistors; Internal resistors; National Institute of Standards and Technology; Programmable gain amplifier; Programmable system on chips; Trans impedances; Integrated circuit design","John Wiley and Sons Ltd"
"Zhyhulin D., Kasian K., Kasian M.","Combined method of prioritization and automation of software regression testing",2022,"Proceedings - 16th International Conference on Advanced Trends in Radioelectronics, Telecommunications and Computer Engineering, TCSET 2022",,,,"751","755",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85130596793&doi=10.1109%2fTCSET55632.2022.9767034&partnerID=40&md5=58233537decaa1332d4fcf87fd0dc592","This paper describes the proposed method for conducting regression testing of a demo project. The method demonstrates an effective approach to solving regression testing problems by combining change-based prioritization and automating test scripts in whole or in part. The proposed work uses modern automated testing utilities: Selenium WebDriver, Puppeteer and Playwright using the JavaScript programming language. Using automated testing utilities can significantly speed up the time of regression testing. Research methods are based on the development of scripts for the main functionality and end-to-end scripts of the demo project. A comparative analysis of the speed of the automated testing utilities has also been carried out. © 2022 IEEE.","automated testing; change-based; JavaScript; Playwright; prioritization; Puppeteer; Regression testing; Selenium WebDriver","Automation; High level languages; Regression analysis; Selenium; Automated testing; Change-based; Combined method; Effective approaches; Javascript; Playwright; Prioritization; Puppeteer; Regression testing; Selenia webdriver; Software testing","Institute of Electrical and Electronics Engineers Inc."
"Nagy S.M., Maghawry H.A., Badr N.L.","An Enhanced Parallel Automation Testing Architecture for Test Case Execution",2022,"5th International Conference on Computing and Informatics, ICCI 2022",,,,"369","373",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85129435579&doi=10.1109%2fICCI54321.2022.9756109&partnerID=40&md5=b240b4bf6149771c6952475908fe68bd","Customer requests for incorporating complicated business logic into software applications are common. As a result, as business requirements expand, the demand on the testing team to deliver a high-quality product in a short amount of time grows. Software testing guarantees that customers receive high-quality software. Manual testing becomes difficult since it is time-consuming. Besides, its cost rises as test suite sizes grow. In addition, human mistakes can slip into a system, resulting in losses for the company. Therefore, automation testing is best suited in situations when requirements change frequently, and a large volume of regression testing is required. Automation testing enhances accuracy while also saving the tester's time and the organization's money. The aim of this work is to propose an improved parallel automation testing architecture to significantly decrease testing time. The main problem with parallel testing is the existence of idle nodes that causes an increase in execution time. The proposed architecture solved this problem by running test cases in parallel using Selenium, Docker containers and implementing a dispatcher to ease and faster the process of distributing test cases between the network's nodes. As a result, the proposed architecture decreases testing process time, and no idle nodes exists anymore. © 2022 IEEE.","automation testing; docker; parallel test case execution; regression testing; selenium","Application programs; Automation; Computation theory; Network architecture; Parallel architectures; Selenium; Testing; Automation testing; Business logic; Business requirement; Docker; Parallel test; Parallel test case execution; Proposed architectures; Regression testing; Software applications; Test case; Software testing","Institute of Electrical and Electronics Engineers Inc."
"Jha N., Popli R., Chakraborty S., Kumar P.","Software Test Automation Using Selenium and Machine Learning",2022,"Lecture Notes in Networks and Systems","329",,,"419","429",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85123297829&doi=10.1007%2f978-981-16-6246-1_35&partnerID=40&md5=3761bb2937361fe54c2d553c80ef8385","Software testing has always been a crucial job in accomplishing and assessing the quality standards of a software product. Software testing is done to confirm the developed software product does what it is expected to do. However, testing is expensive in terms of time, effort, and is quite complicated. Studies report that software testing alone is responsible for almost half of the total budget incurred in software development. Additionally, manual testing is more prone to bugs and creating accurate and reliable software is an open issue. Specialists and experts have been exploring more effective and successful automation techniques for testing to deal with this issue. This paper is an endeavor to review the cutting edge of how machine learning and artificial intelligence have been figured out to automate and streamline software testing processes. It also provides an insight mapping of the research into these fields. Furthermore, a practical study on testing web applications is performed using selenium. © 2022, The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd.","Artificial intelligence; Machine learning; Software testing; Test automation",,"Springer Science and Business Media Deutschland GmbH"
"Chun K., Song D., Kim K.","Study on the Decrease in Air Dielectric Strength of DC Voltage According to the Ignition Properties of Combustibles",2022,"Applied Sciences (Switzerland)","12","4","2216","","",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85125141554&doi=10.3390%2fapp12042216&partnerID=40&md5=acfa1867d591674e6821e8531c27c278","Most electrical transmission lines are located in forests, and currently in South Korea, deregulation has allowed various structures to be built on the ground below transmission lines. Events of fires occurring below high-voltage transmission lines can lead to large-scale electrical accidents. To prevent such accidents, this study examined the ignition properties of combustible materials and their relationship with the reduction in air dielectric strength. Experiments were performed on two types of synthetic resins and lumbers, namely cypress and pine. A cone calorimeter was used to measure ignition properties such as effective heat of combustion, heat release rate, and soot yield. In addition, we built a dielectric strength testing device to measure the reduction in air dielectric strength caused by flames. These measurement results can serve as a basis for revising fire safety standards. © 2022 by the authors. Licensee MDPI, Basel, Switzerland.","Dielectric strength; Electrical accidents; High-voltage transmission lines",,"MDPI"
"García B., Delgado Kloos C., Alario-Hoyos C., Munoz-Organero M.","Selenium-Jupiter: A JUnit 5 extension for Selenium WebDriver",2022,"Journal of Systems and Software","189",,"111298","","",,"https://www.scopus.com/inward/record.uri?eid=2-s2.0-85126631924&doi=10.1016%2fj.jss.2022.111298&partnerID=40&md5=c12a6e93a89f7542efa5767b00d665fc","Selenium WebDriver is a library that allows controlling web browsers (e.g., Chrome, Firefox, etc.) programmatically. It provides a cross-browser programming interface in several languages used primarily to implement end-to-end tests for web applications. JUnit is a popular unit testing framework for Java. Its latest version (i.e., JUnit 5) provides a programming and extension model called Jupiter. This paper presents Selenium-Jupiter, an open-source JUnit 5 extension for Selenium WebDriver. Selenium-Jupiter aims to ease the development of Selenium WebDriver tests thanks to an automated driver management process implemented in conjunction with the Jupiter parameter resolution mechanism. Moreover, Selenium-Jupiter provides seamless integration with Docker, allowing the use of different web browsers in Docker containers out of the box. This feature enables cross-browser testing, load testing, and troubleshooting (e.g., configurable session recordings). This paper presents an example case in which Selenium-Jupiter is used to evaluate the performance of video conferencing systems based on WebRTC. This example case shows that Selenium-Jupiter can build and maintain the required infrastructure for complex tests effortlessly. © 2022 Elsevier Inc.","Automated testing tools; Browser automation; Docker; End-to-end testing; JUnit; Selenium WebDriver","Automation; Load testing; Open source software; Selenium; Web browsers; Automated testing tools; Browser automation; Docker; End to end; End-to-end testing; Firefox; Junit; Jupiters; Programming interface; Selenia webdriver; Video conferencing","Elsevier Inc."
